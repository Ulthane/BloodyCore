using System.Collections.Generic;
using Unity.Entities;

namespace Bloody.Core.Models.v1.Internals
{
    public class BaseEntityModel
    {
        private readonly World _world;
        private readonly Entity _entity;

        internal BaseEntityModel(World world, Entity entity)
        {
            _world = world;
            _entity = entity;
        }
        public bool DisallowEntityDestruction => _world.EntityManager.HasComponentInternal<DisallowEntityDestruction>(_entity);
        public bool Prefab => _world.EntityManager.HasComponentInternal<Prefab>(_entity);
        public bool Simulate => _world.EntityManager.HasComponentInternal<Simulate>(_entity);
        public Stunlock.Core.WorldTypeSingleton? WorldTypeSingleton => _world.EntityManager.TryGetComponentDataInternal<Stunlock.Core.WorldTypeSingleton>(_entity, out var value) ? value : null;
        public Unity.Scenes.SceneSystemConfiguration? SceneSystemConfiguration => _world.EntityManager.TryGetComponentDataInternal<Unity.Scenes.SceneSystemConfiguration>(_entity, out var value) ? value : null;
        public ProjectM.ServerRuntimeSettings? ServerRuntimeSettings => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ServerRuntimeSettings>(_entity, out var value) ? value : null;
        public ProjectM.EntityOwner? EntityOwner => _world.EntityManager.TryGetComponentDataInternal<ProjectM.EntityOwner>(_entity, out var value) ? value : null;
        public ProjectM.Age? Age => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Age>(_entity, out var value) ? value : null;
        public ProjectM.LifeTime? LifeTime => _world.EntityManager.TryGetComponentDataInternal<ProjectM.LifeTime>(_entity, out var value) ? value : null;
        public ProjectM.Network.ModifyRotation? ModifyRotation => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Network.ModifyRotation>(_entity, out var value) ? value : null;
        public List<ProjectM.Shared.RelicDropped> RelicDroppeds => _world.EntityManager.GetBufferInternal<ProjectM.Shared.RelicDropped>(_entity);
        public ProjectM.RotateTowardsAimDirectionDuringCastActive? RotateTowardsAimDirectionDuringCastActive => _world.EntityManager.TryGetComponentDataInternal<ProjectM.RotateTowardsAimDirectionDuringCastActive>(_entity, out var value) ? value : null;
        public ProjectM.DestroyData? DestroyData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.DestroyData>(_entity, out var value) ? value : null;
        public ProjectM.DestroyState? DestroyState => _world.EntityManager.TryGetComponentDataInternal<ProjectM.DestroyState>(_entity, out var value) ? value : null;
        public Unity.Physics.PhysicsCollider? PhysicsCollider => _world.EntityManager.TryGetComponentDataInternal<Unity.Physics.PhysicsCollider>(_entity, out var value) ? value : null;
        public Unity.Physics.Systems.StaticPhysicsWorldBodyIndex? StaticPhysicsWorldBodyIndex => _world.EntityManager.TryGetComponentDataInternal<Unity.Physics.Systems.StaticPhysicsWorldBodyIndex>(_entity, out var value) ? value : null;
        public Unity.Transforms.LocalToWorld? LocalToWorld => _world.EntityManager.TryGetComponentDataInternal<Unity.Transforms.LocalToWorld>(_entity, out var value) ? value : null;
        public ProjectM.TeleportationRequest? TeleportationRequest => _world.EntityManager.TryGetComponentDataInternal<ProjectM.TeleportationRequest>(_entity, out var value) ? value : null;
        public bool TileModelRegistrationState => _world.EntityManager.HasComponentInternal<ProjectM.TileModelRegistrationState>(_entity);
        public ProjectM.Network.ModifyMovementDuringCastActive? ModifyMovementDuringCastActive => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Network.ModifyMovementDuringCastActive>(_entity, out var value) ? value : null;
        public ProjectM.Sun? Sun => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Sun>(_entity, out var value) ? value : null;
#pragma warning disable CS8632 // La anotación para tipos de referencia que aceptan valores NULL solo debe usarse en el código dentro de un contexto de anotaciones "#nullable".
        public ProjectM.CloudCookieLight CloudCookieLight => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CloudCookieLight>(_entity, out var value) ? value : null;
#pragma warning restore CS8632 // La anotación para tipos de referencia que aceptan valores NULL solo debe usarse en el código dentro de un contexto de anotaciones "#nullable".
        public ProjectM.ServerGameBalanceSettings? ServerGameBalanceSettings => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ServerGameBalanceSettings>(_entity, out var value) ? value : null;
        public ProjectM.Terrain.TerrainChunkLoadedEvent? TerrainChunkLoadedEvent => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Terrain.TerrainChunkLoadedEvent>(_entity, out var value) ? value : null;
        public ProjectM.Terrain.TerrainChunkUnloadedEvent? TerrainChunkUnloadedEvent => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Terrain.TerrainChunkUnloadedEvent>(_entity, out var value) ? value : null;
        public ProjectM.Terrain.TerrainChunkMetadataLoadedEvent? TerrainChunkMetadataLoadedEvent => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Terrain.TerrainChunkMetadataLoadedEvent>(_entity, out var value) ? value : null;
        public ProjectM.Terrain.MapZoneData? MapZoneData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Terrain.MapZoneData>(_entity, out var value) ? value : null;
        public List<ProjectM.Terrain.MapZonePolygonVertexElement> MapZonePolygonVertexElements => _world.EntityManager.GetBufferInternal<ProjectM.Terrain.MapZonePolygonVertexElement>(_entity);
        public List<ProjectM.Terrain.MapZoneDiscoverableElement> MapZoneDiscoverableElements => _world.EntityManager.GetBufferInternal<ProjectM.Terrain.MapZoneDiscoverableElement>(_entity);
        public ProjectM.WorldFrame? WorldFrame => _world.EntityManager.TryGetComponentDataInternal<ProjectM.WorldFrame>(_entity, out var value) ? value : null;
        public List<ProjectM.AbilityGroupSlotModificationBuffer> AbilityGroupSlotModificationBuffers => _world.EntityManager.GetBufferInternal<ProjectM.AbilityGroupSlotModificationBuffer>(_entity);
        public ProjectM.AbilityCastStartedEvent? AbilityCastStartedEvent => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AbilityCastStartedEvent>(_entity, out var value) ? value : null;
        public ProjectM.AbilityPreCastFinishedEvent? AbilityPreCastFinishedEvent => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AbilityPreCastFinishedEvent>(_entity, out var value) ? value : null;
        public ProjectM.AbilityPostCastFinishedEvent? AbilityPostCastFinishedEvent => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AbilityPostCastFinishedEvent>(_entity, out var value) ? value : null;
        public ProjectM.AbilityPreCastEndedEvent? AbilityPreCastEndedEvent => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AbilityPreCastEndedEvent>(_entity, out var value) ? value : null;
        public ProjectM.AbilityPostCastEndedEvent? AbilityPostCastEndedEvent => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AbilityPostCastEndedEvent>(_entity, out var value) ? value : null;
        public ProjectM.AbilityCastEndedEvent? AbilityCastEndedEvent => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AbilityCastEndedEvent>(_entity, out var value) ? value : null;
        public ProjectM.AbilityInterruptedEvent? AbilityInterruptedEvent => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AbilityInterruptedEvent>(_entity, out var value) ? value : null;
        public ProjectM.ToggleDisabledEvent? ToggleDisabledEvent => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ToggleDisabledEvent>(_entity, out var value) ? value : null;
        public Unity.Physics.PhysicsWorldSingleton? PhysicsWorldSingleton => _world.EntityManager.TryGetComponentDataInternal<Unity.Physics.PhysicsWorldSingleton>(_entity, out var value) ? value : null;
        public ProjectM.MoveDuringCastActive? MoveDuringCastActive => _world.EntityManager.TryGetComponentDataInternal<ProjectM.MoveDuringCastActive>(_entity, out var value) ? value : null;
        public ProjectM.Network.DestroyedEntity? DestroyedEntity => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Network.DestroyedEntity>(_entity, out var value) ? value : null;
        public ProjectM.Network.FrameChanged? FrameChanged => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Network.FrameChanged>(_entity, out var value) ? value : null;
        public ProjectM.Network.NetworkSnapshot? NetworkSnapshot => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Network.NetworkSnapshot>(_entity, out var value) ? value : null;
        public List<ProjectM.Network.NetSnapshot> NetSnapshots => _world.EntityManager.GetBufferInternal<ProjectM.Network.NetSnapshot>(_entity);
        public List<ProjectM.Network.SnapshotFrameChangedBuffer> SnapshotFrameChangedBuffers => _world.EntityManager.GetBufferInternal<ProjectM.Network.SnapshotFrameChangedBuffer>(_entity);
        public bool NewDestroyedEntity => _world.EntityManager.HasComponentInternal<ProjectM.Network.NewDestroyedEntity>(_entity);
        public List<ProjectM.Network.Snapshot_CastleBuildingAttachedChildrenBuffer> Snapshot_CastleBuildingAttachedChildrenBuffer => _world.EntityManager.GetBufferInternal<ProjectM.Network.Snapshot_CastleBuildingAttachedChildrenBuffer>(_entity);
        public List<ProjectM.Network.Snapshot_CastleBuildingAttachToParentsBuffer> Snapshot_CastleBuildingAttachToParentsBuffer => _world.EntityManager.GetBufferInternal<ProjectM.Network.Snapshot_CastleBuildingAttachToParentsBuffer>(_entity);
        public List<ProjectM.Network.Snapshot_ResearchBuffer> Snapshot_ResearchBuffer => _world.EntityManager.GetBufferInternal<ProjectM.Network.Snapshot_ResearchBuffer>(_entity);
        public List<ProjectM.Network.Snapshot_InventoryInstanceElement> Snapshot_InventoryInstanceElement => _world.EntityManager.GetBufferInternal<ProjectM.Network.Snapshot_InventoryInstanceElement>(_entity);
        public List<ProjectM.Network.Snapshot_AbilityStateBuffer> Snapshot_AbilityStateBuffer => _world.EntityManager.GetBufferInternal<ProjectM.Network.Snapshot_AbilityStateBuffer>(_entity);
        public List<ProjectM.Network.Snapshot_RefinementstationRecipesBuffer> Snapshot_RefinementstationRecipesBuffer => _world.EntityManager.GetBufferInternal<ProjectM.Network.Snapshot_RefinementstationRecipesBuffer>(_entity);
        public List<ProjectM.Network.Snapshot_QueuedWorkstationCraftAction> Snapshot_QueuedWorkstationCraftAction => _world.EntityManager.GetBufferInternal<ProjectM.Network.Snapshot_QueuedWorkstationCraftAction>(_entity);
        public List<ProjectM.Network.Snapshot_SpawnedUnitsBuffer> Snapshot_SpawnedUnitsBuffer => _world.EntityManager.GetBufferInternal<ProjectM.Network.Snapshot_SpawnedUnitsBuffer>(_entity);
        public List<ProjectM.Network.Snapshot_MegaStaticDestroyedBuffer> Snapshot_MegaStaticDestroyedBuffer => _world.EntityManager.GetBufferInternal<ProjectM.Network.Snapshot_MegaStaticDestroyedBuffer>(_entity);
        public List<ProjectM.Network.Snapshot_MegaStaticPrefabBuffer> Snapshot_MegaStaticPrefabBuffer => _world.EntityManager.GetBufferInternal<ProjectM.Network.Snapshot_MegaStaticPrefabBuffer>(_entity);
        public List<ProjectM.Network.Snapshot_AllyPermission> Snapshot_AllyPermission => _world.EntityManager.GetBufferInternal<ProjectM.Network.Snapshot_AllyPermission>(_entity);
        public List<ProjectM.Network.Snapshot_RespawnPointOwnerBuffer> Snapshot_RespawnPointOwnerBuffer => _world.EntityManager.GetBufferInternal<ProjectM.Network.Snapshot_RespawnPointOwnerBuffer>(_entity);
        public List<ProjectM.Network.Snapshot_UnlockedWaypointElement> Snapshot_UnlockedWaypointElement => _world.EntityManager.GetBufferInternal<ProjectM.Network.Snapshot_UnlockedWaypointElement>(_entity);
        public List<ProjectM.Network.Snapshot_UserMapZoneElement> Snapshot_UserMapZoneElement => _world.EntityManager.GetBufferInternal<ProjectM.Network.Snapshot_UserMapZoneElement>(_entity);
        public List<ProjectM.Network.Snapshot_ClanMemberStatus> Snapshot_ClanMemberStatus => _world.EntityManager.GetBufferInternal<ProjectM.Network.Snapshot_ClanMemberStatus>(_entity);
        public List<ProjectM.Network.Snapshot_FollowerBuffer> Snapshot_FollowerBuffer => _world.EntityManager.GetBufferInternal<ProjectM.Network.Snapshot_FollowerBuffer>(_entity);
        public List<ProjectM.Network.Snapshot_UnlockedSpellBookAbility> Snapshot_UnlockedSpellBookAbility => _world.EntityManager.GetBufferInternal<ProjectM.Network.Snapshot_UnlockedSpellBookAbility>(_entity);
        public List<ProjectM.Network.Snapshot_PerksBuffer> Snapshot_PerksBuffer => _world.EntityManager.GetBufferInternal<ProjectM.Network.Snapshot_PerksBuffer>(_entity);
        public List<ProjectM.Network.Snapshot_AchievementInProgressElement> Snapshot_AchievementInProgressElement => _world.EntityManager.GetBufferInternal<ProjectM.Network.Snapshot_AchievementInProgressElement>(_entity);
        public List<ProjectM.Network.Snapshot_InventoryBuffer> Snapshot_InventoryBuffer => _world.EntityManager.GetBufferInternal<ProjectM.Network.Snapshot_InventoryBuffer>(_entity);
        public List<ProjectM.Network.Snapshot_ActiveServantMission> Snapshot_ActiveServantMission => _world.EntityManager.GetBufferInternal<ProjectM.Network.Snapshot_ActiveServantMission>(_entity);
        public List<ProjectM.Network.Snapshot_CastleMemberNames> Snapshot_CastleMemberNames => _world.EntityManager.GetBufferInternal<ProjectM.Network.Snapshot_CastleMemberNames>(_entity);
        public List<ProjectM.Network.Snapshot_CastleTeleporterElement> Snapshot_CastleTeleporterElement => _world.EntityManager.GetBufferInternal<ProjectM.Network.Snapshot_CastleTeleporterElement>(_entity);
        public List<ProjectM.Network.Snapshot_LearnablePassivesBuffer> Snapshot_LearnablePassivesBuffer => _world.EntityManager.GetBufferInternal<ProjectM.Network.Snapshot_LearnablePassivesBuffer>(_entity);
        public List<ProjectM.Network.Snapshot_TradeCost> Snapshot_TradeCost => _world.EntityManager.GetBufferInternal<ProjectM.Network.Snapshot_TradeCost>(_entity);
        public List<ProjectM.Network.Snapshot_TradeOutput> Snapshot_TradeOutput => _world.EntityManager.GetBufferInternal<ProjectM.Network.Snapshot_TradeOutput>(_entity);
        public List<ProjectM.Network.Snapshot_TraderEntry> Snapshot_TraderEntry => _world.EntityManager.GetBufferInternal<ProjectM.Network.Snapshot_TraderEntry>(_entity);
        public List<ProjectM.Network.Snapshot_CastleBuildingFusedChildrenBuffer> Snapshot_CastleBuildingFusedChildrenBuffer => _world.EntityManager.GetBufferInternal<ProjectM.Network.Snapshot_CastleBuildingFusedChildrenBuffer>(_entity);
        public List<ProjectM.Network.Snapshot_CastleTerritoryDecay> Snapshot_CastleTerritoryDecay => _world.EntityManager.GetBufferInternal<ProjectM.Network.Snapshot_CastleTerritoryDecay>(_entity);
        public List<ProjectM.Network.Snapshot_CastleTerritoryOccupant> Snapshot_CastleTerritoryOccupant => _world.EntityManager.GetBufferInternal<ProjectM.Network.Snapshot_CastleTerritoryOccupant>(_entity);
        public List<ProjectM.Network.Snapshot_Script_Dracula_WarpRiftTargetData> Snapshot_Script_Dracula_WarpRiftTargetData => _world.EntityManager.GetBufferInternal<ProjectM.Network.Snapshot_Script_Dracula_WarpRiftTargetData>(_entity);
        public List<ProjectM.Network.Snapshot_MusicPlayerStation_PlaylistElement> Snapshot_MusicPlayerStation_PlaylistElement => _world.EntityManager.GetBufferInternal<ProjectM.Network.Snapshot_MusicPlayerStation_PlaylistElement>(_entity);
        public List<ProjectM.Network.Snapshot_MusicPlayerStation_UnlockedTrackElement> Snapshot_MusicPlayerStation_UnlockedTrackElement => _world.EntityManager.GetBufferInternal<ProjectM.Network.Snapshot_MusicPlayerStation_UnlockedTrackElement>(_entity);
        public WorldTime? WorldTime => _world.EntityManager.TryGetComponentDataInternal<WorldTime>(_entity, out var value) ? value : null;
        public List<WorldTimeQueue> WorldTimeQueues => _world.EntityManager.GetBufferInternal<WorldTimeQueue>(_entity);
        public Unity.Physics.PhysicsStep? PhysicsStep => _world.EntityManager.TryGetComponentDataInternal<Unity.Physics.PhysicsStep>(_entity, out var value) ? value : null;
        public ProjectM.KnockbackAssetsSingleton? KnockbackAssetsSingleton => _world.EntityManager.TryGetComponentDataInternal<ProjectM.KnockbackAssetsSingleton>(_entity, out var value) ? value : null;
        public bool GameDataLoadingStartedSingleton => _world.EntityManager.HasComponentInternal<ProjectM.GameDataLoadingStartedSingleton>(_entity);
        public List<Unity.Scenes.PublicEntityRef> PublicEntityRefs => _world.EntityManager.GetBufferInternal<Unity.Scenes.PublicEntityRef>(_entity);
        public bool StaticSceneTag => _world.EntityManager.HasComponentInternal<StaticSceneTag>(_entity);
        public ProjectM.Shared.WarEvents.WarEvent_MapNode? WarEvent_MapNode => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Shared.WarEvents.WarEvent_MapNode>(_entity, out var value) ? value : null;
        public bool BlobAssetOwner => _world.EntityManager.HasComponentInternal<BlobAssetOwner>(_entity);
        public ProjectM.LoadToTargetWorld? LoadToTargetWorld => _world.EntityManager.TryGetComponentDataInternal<ProjectM.LoadToTargetWorld>(_entity, out var value) ? value : null;
        public Unity.Scenes.SceneEntityReference? SceneEntityReference => _world.EntityManager.TryGetComponentDataInternal<Unity.Scenes.SceneEntityReference>(_entity, out var value) ? value : null;
        public SceneSectionData? SceneSectionData => _world.EntityManager.TryGetComponentDataInternal<SceneSectionData>(_entity, out var value) ? value : null;
        public RequestSceneLoaded? RequestSceneLoaded => _world.EntityManager.TryGetComponentDataInternal<RequestSceneLoaded>(_entity, out var value) ? value : null;
        public Unity.Scenes.ResolvedSectionPath? ResolvedSectionPath => _world.EntityManager.TryGetComponentDataInternal<Unity.Scenes.ResolvedSectionPath>(_entity, out var value) ? value : null;
        public Unity.Scenes.SceneBoundingVolume? SceneBoundingVolume => _world.EntityManager.TryGetComponentDataInternal<Unity.Scenes.SceneBoundingVolume>(_entity, out var value) ? value : null;
        public bool IsSectionLoaded => _world.EntityManager.HasComponentInternal<Unity.Scenes.IsSectionLoaded>(_entity);
        public Unity.Scenes.ResolvedSceneHash? ResolvedSceneHash => _world.EntityManager.TryGetComponentDataInternal<Unity.Scenes.ResolvedSceneHash>(_entity, out var value) ? value : null;
        public SceneReference? SceneReference => _world.EntityManager.TryGetComponentDataInternal<SceneReference>(_entity, out var value) ? value : null;
        public List<LinkedEntityGroup> LinkedEntityGroups => _world.EntityManager.GetBufferInternal<LinkedEntityGroup>(_entity);
        public List<Unity.Scenes.ResolvedSectionEntity> ResolvedSectionEntities => _world.EntityManager.GetBufferInternal<Unity.Scenes.ResolvedSectionEntity>(_entity);
#pragma warning disable CS8632 // La anotación para tipos de referencia que aceptan valores NULL solo debe usarse en el código dentro de un contexto de anotaciones "#nullable".
        public PostLoadCommandBuffer PostLoadCommandBuffer => _world.EntityManager.TryGetComponentDataInternal<PostLoadCommandBuffer>(_entity, out var value) ? value : new();
#pragma warning restore CS8632 // La anotación para tipos de referencia que aceptan valores NULL solo debe usarse en el código dentro de un contexto de anotaciones "#nullable".
        public List<ProjectM.Terrain.WorldAssetChunks> WorldAssetChunks => _world.EntityManager.GetBufferInternal<ProjectM.Terrain.WorldAssetChunks>(_entity);
        public bool WorldAssetSingleton => _world.EntityManager.HasComponentInternal<ProjectM.Terrain.WorldAssetSingleton>(_entity);
        public bool WorldConfigSingleton => _world.EntityManager.HasComponentInternal<ProjectM.Terrain.WorldConfigSingleton>(_entity);
        public Stunlock.Core.PrefabGUID? PrefabGUID => _world.EntityManager.TryGetComponentDataInternal<Stunlock.Core.PrefabGUID>(_entity, out var value) ? value : null;
        public bool ConvertedScriptableObject => _world.EntityManager.HasComponentInternal<Stunlock.Core.Authoring.ConvertedScriptableObject>(_entity);
        public Unity.Transforms.Rotation? Rotation => _world.EntityManager.TryGetComponentDataInternal<Unity.Transforms.Rotation>(_entity, out var value) ? value : null;
        public Unity.Transforms.Translation? Translation => _world.EntityManager.TryGetComponentDataInternal<Unity.Transforms.Translation>(_entity, out var value) ? value : null;
        public Unity.Transforms.LocalTransform? LocalTransform => _world.EntityManager.TryGetComponentDataInternal<Unity.Transforms.LocalTransform>(_entity, out var value) ? value : null;
        public bool ScriptableObjectCollectionTag => _world.EntityManager.HasComponentInternal<Stunlock.Core.Authoring.ScriptableObjectCollectionTag>(_entity);
        public bool GameDataSubSceneTag => _world.EntityManager.HasComponentInternal<ProjectM.GameDataSubSceneTag>(_entity);
        public ProjectM.RegisterCurveBlobEvent? RegisterCurveBlobEvent => _world.EntityManager.TryGetComponentDataInternal<ProjectM.RegisterCurveBlobEvent>(_entity, out var value) ? value : null;
        public bool Disabled => _world.EntityManager.HasComponentInternal<Disabled>(_entity);
        public Unity.Physics.PhysicsMass? PhysicsMass => _world.EntityManager.TryGetComponentDataInternal<Unity.Physics.PhysicsMass>(_entity, out var value) ? value : null;
        public Unity.Physics.PhysicsVelocity? PhysicsVelocity => _world.EntityManager.TryGetComponentDataInternal<Unity.Physics.PhysicsVelocity>(_entity, out var value) ? value : null;
        public Unity.Physics.PhysicsDamping? PhysicsDamping => _world.EntityManager.TryGetComponentDataInternal<Unity.Physics.PhysicsDamping>(_entity, out var value) ? value : null;
        public Unity.Physics.PhysicsGravityFactor? PhysicsGravityFactor => _world.EntityManager.TryGetComponentDataInternal<Unity.Physics.PhysicsGravityFactor>(_entity, out var value) ? value : null;
        public bool PhysicsWorldIndex => _world.EntityManager.HasComponentInternal<Unity.Physics.PhysicsWorldIndex>(_entity);
        public Unity.Transforms.PostTransformMatrix? PostTransformMatrix => _world.EntityManager.TryGetComponentDataInternal<Unity.Transforms.PostTransformMatrix>(_entity, out var value) ? value : null;
        public bool SpawnTag => _world.EntityManager.HasComponentInternal<SpawnTag>(_entity);
        public ProjectM.Physics.PhysicsRubble? PhysicsRubble => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Physics.PhysicsRubble>(_entity, out var value) ? value : null;
        public ProjectM.PlacementDestroyData? PlacementDestroyData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.PlacementDestroyData>(_entity, out var value) ? value : null;
        public ProjectM.TileBounds? TileBounds => _world.EntityManager.TryGetComponentDataInternal<ProjectM.TileBounds>(_entity, out var value) ? value : null;
        public ProjectM.TileModelSpatialData? TileModelSpatialData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.TileModelSpatialData>(_entity, out var value) ? value : null;
        public ProjectM.TileData? TileData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.TileData>(_entity, out var value) ? value : null;
        public ProjectM.StaticTransformCompatible? StaticTransformCompatible => _world.EntityManager.TryGetComponentDataInternal<ProjectM.StaticTransformCompatible>(_entity, out var value) ? value : null;
        public ProjectM.Network.Networked? Networked => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Network.Networked>(_entity, out var value) ? value : null;
        public ProjectM.Network.UpToDateUserBitMask? UpToDateUserBitMask => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Network.UpToDateUserBitMask>(_entity, out var value) ? value : null;
        public ProjectM.Tiles.TileModel? TileModel => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Tiles.TileModel>(_entity, out var value) ? value : null;
        public ProjectM.TilePosition? TilePosition => _world.EntityManager.TryGetComponentDataInternal<ProjectM.TilePosition>(_entity, out var value) ? value : null;
        public ProjectM.Network.NetworkId? NetworkId => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Network.NetworkId>(_entity, out var value) ? value : null;
        public bool TilePlacementTag => _world.EntityManager.HasComponentInternal<ProjectM.TilePlacementTag>(_entity);
        public bool DisableWhenNoPlayersInRange => _world.EntityManager.HasComponentInternal<ProjectM.DisableWhenNoPlayersInRange>(_entity);
        public bool MegaStaticCompatibleTag => _world.EntityManager.HasComponentInternal<ProjectM.MegaStaticCompatibleTag>(_entity);
        public bool RunCastleCleanupOnDeath => _world.EntityManager.HasComponentInternal<ProjectM.Tiles.RunCastleCleanupOnDeath>(_entity);
        public bool StaticTileModel => _world.EntityManager.HasComponentInternal<ProjectM.Tiles.StaticTileModel>(_entity);
        public bool NetworkSnapshotType => _world.EntityManager.HasComponentInternal<ProjectM.Network.NetworkSnapshotType>(_entity);
        public bool TileModelLayer => _world.EntityManager.HasComponentInternal<ProjectM.Tiles.TileModelLayer>(_entity);
        public ProjectM.SpawnPhysicsObjectOnDeath? SpawnPhysicsObjectOnDeath => _world.EntityManager.TryGetComponentDataInternal<ProjectM.SpawnPhysicsObjectOnDeath>(_entity, out var value) ? value : null;
        public ProjectM.Health? Health => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Health>(_entity, out var value) ? value : null;
        public ProjectM.HealthConstants? HealthConstants => _world.EntityManager.TryGetComponentDataInternal<ProjectM.HealthConstants>(_entity, out var value) ? value : null;
        public ProjectM.CollisionRadius? CollisionRadius => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CollisionRadius>(_entity, out var value) ? value : null;
        public ProjectM.Team? Team => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Team>(_entity, out var value) ? value : null;
        public ProjectM.EntityCategory? EntityCategory => _world.EntityManager.TryGetComponentDataInternal<ProjectM.EntityCategory>(_entity, out var value) ? value : null;
        public ProjectM.Sequencer.ImpactMaterial? ImpactMaterial => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Sequencer.ImpactMaterial>(_entity, out var value) ? value : null;
        public ProjectM.TeamReference? TeamReference => _world.EntityManager.TryGetComponentDataInternal<ProjectM.TeamReference>(_entity, out var value) ? value : null;
        public List<ProjectM.PlaySequenceOnDeath> PlaySequenceOnDeaths => _world.EntityManager.GetBufferInternal<ProjectM.PlaySequenceOnDeath>(_entity);
        public bool TileCollisionTag => _world.EntityManager.HasComponentInternal<ProjectM.TileCollisionTag>(_entity);
        public bool TilePathfindingTag => _world.EntityManager.HasComponentInternal<ProjectM.TilePathfindingTag>(_entity);
        public bool TileLineOfSightTag => _world.EntityManager.HasComponentInternal<ProjectM.TileLineOfSightTag>(_entity);
        public bool DropTable => _world.EntityManager.HasComponentInternal<ProjectM.Shared.DropTable>(_entity);
        public bool TileHeightTag => _world.EntityManager.HasComponentInternal<ProjectM.TileHeightTag>(_entity);
        public bool StaticPhysicsCollider => _world.EntityManager.HasComponentInternal<ProjectM.Shared.StaticPhysicsCollider>(_entity);
        public List<ProjectM.CreateGameplayEventOnDeath> CreateGameplayEventOnDeaths => _world.EntityManager.GetBufferInternal<ProjectM.CreateGameplayEventOnDeath>(_entity);
        public List<ProjectM.GameplayEventIdMapping> GameplayEventIdMappings => _world.EntityManager.GetBufferInternal<ProjectM.GameplayEventIdMapping>(_entity);
        public List<ProjectM.SpawnPrefabOnGameplayEvent> SpawnPrefabOnGameplayEvents => _world.EntityManager.GetBufferInternal<ProjectM.SpawnPrefabOnGameplayEvent>(_entity);
        public List<ProjectM.GameplayEventListeners> GameplayEventListeners => _world.EntityManager.GetBufferInternal<ProjectM.GameplayEventListeners>(_entity);
        public ProjectM.AiPointOfInterest? AiPointOfInterest => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AiPointOfInterest>(_entity, out var value) ? value : null;
        public ProjectM.Hybrid.HybridModelSeed? HybridModelSeed => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Hybrid.HybridModelSeed>(_entity, out var value) ? value : null;
        public List<ProjectM.HitTrigger> HitTriggers => _world.EntityManager.GetBufferInternal<ProjectM.HitTrigger>(_entity);
        public List<ProjectM.CreateGameplayEventsOnHit> CreateGameplayEventsOnHits => _world.EntityManager.GetBufferInternal<ProjectM.CreateGameplayEventsOnHit>(_entity);
        public List<ProjectM.CreateGameplayEventsOnSpawn> CreateGameplayEventsOnSpawns => _world.EntityManager.GetBufferInternal<ProjectM.CreateGameplayEventsOnSpawn>(_entity);
        public List<ProjectM.DestroyOnGameplayEvent> DestroyOnGameplayEvents => _world.EntityManager.GetBufferInternal<ProjectM.DestroyOnGameplayEvent>(_entity);
        public List<ProjectM.PlaySequenceOnGameplayEvent> PlaySequenceOnGameplayEvents => _world.EntityManager.GetBufferInternal<ProjectM.PlaySequenceOnGameplayEvent>(_entity);
        public List<ProjectM.HitColliderCast> HitColliderCasts => _world.EntityManager.GetBufferInternal<ProjectM.HitColliderCast>(_entity);
        public ProjectM.Interactable? Interactable => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Interactable>(_entity, out var value) ? value : null;
        public ProjectM.InteractedUpon? InteractedUpon => _world.EntityManager.TryGetComponentDataInternal<ProjectM.InteractedUpon>(_entity, out var value) ? value : null;
        public ProjectM.DestroyWhenNoCharacterNearbyAfterDuration? DestroyWhenNoCharacterNearbyAfterDuration => _world.EntityManager.TryGetComponentDataInternal<ProjectM.DestroyWhenNoCharacterNearbyAfterDuration>(_entity, out var value) ? value : null;
        public ProjectM.PlaySequenceOnPickup? PlaySequenceOnPickup => _world.EntityManager.TryGetComponentDataInternal<ProjectM.PlaySequenceOnPickup>(_entity, out var value) ? value : null;
        public List<ProjectM.InteractAbilityBuffer> InteractAbilityBuffers => _world.EntityManager.GetBufferInternal<ProjectM.InteractAbilityBuffer>(_entity);
        public bool YieldResourcesOnPickup => _world.EntityManager.HasComponentInternal<ProjectM.YieldResourcesOnPickup>(_entity);
        public ProjectM.UnitLevel? UnitLevel => _world.EntityManager.TryGetComponentDataInternal<ProjectM.UnitLevel>(_entity, out var value) ? value : null;
        public ProjectM.UnitLevelServerData? UnitLevelServerData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.UnitLevelServerData>(_entity, out var value) ? value : null;
        public ProjectM.Shared.DropTableOnDeath? DropTableOnDeath => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Shared.DropTableOnDeath>(_entity, out var value) ? value : null;
        public List<ProjectM.YieldResourcesOnDamageTaken> YieldResourcesOnDamageTakens => _world.EntityManager.GetBufferInternal<ProjectM.YieldResourcesOnDamageTaken>(_entity);
        public List<ProjectM.Shared.DropTableBuffer> DropTableBuffers => _world.EntityManager.GetBufferInternal<ProjectM.Shared.DropTableBuffer>(_entity);
        public ProjectM.BuffResistances? BuffResistances => _world.EntityManager.TryGetComponentDataInternal<ProjectM.BuffResistances>(_entity, out var value) ? value : null;
        public ProjectM.Buffable? Buffable => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Buffable>(_entity, out var value) ? value : null;
        public ProjectM.BuffableFlagState? BuffableFlagState => _world.EntityManager.TryGetComponentDataInternal<ProjectM.BuffableFlagState>(_entity, out var value) ? value : null;
        public ProjectM.UnitStats? UnitStats => _world.EntityManager.TryGetComponentDataInternal<ProjectM.UnitStats>(_entity, out var value) ? value : null;
        public ProjectM.DamageCategoryStats? DamageCategoryStats => _world.EntityManager.TryGetComponentDataInternal<ProjectM.DamageCategoryStats>(_entity, out var value) ? value : null;
        public ProjectM.ResistCategoryStats? ResistCategoryStats => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ResistCategoryStats>(_entity, out var value) ? value : null;
        public List<ProjectM.BuffBuffer> BuffBuffers => _world.EntityManager.GetBufferInternal<ProjectM.BuffBuffer>(_entity);
        public List<ProjectM.CreateGameplayEventOnDamageTaken> CreateGameplayEventOnDamageTakens => _world.EntityManager.GetBufferInternal<ProjectM.CreateGameplayEventOnDamageTaken>(_entity);
        public List<ProjectM.ApplyBuffOnGameplayEvent> ApplyBuffOnGameplayEvents => _world.EntityManager.GetBufferInternal<ProjectM.ApplyBuffOnGameplayEvent>(_entity);
        public ProjectM.DurabilityTarget? DurabilityTarget => _world.EntityManager.TryGetComponentDataInternal<ProjectM.DurabilityTarget>(_entity, out var value) ? value : null;
        public List<ProjectM.CreateGameplayEventsOnDestroy> CreateGameplayEventsOnDestroys => _world.EntityManager.GetBufferInternal<ProjectM.CreateGameplayEventsOnDestroy>(_entity);
        public ProjectM.EntityCreator? EntityCreator => _world.EntityManager.TryGetComponentDataInternal<ProjectM.EntityCreator>(_entity, out var value) ? value : null;
        public ProjectM.DynamicallyWeakenAttackers? DynamicallyWeakenAttackers => _world.EntityManager.TryGetComponentDataInternal<ProjectM.DynamicallyWeakenAttackers>(_entity, out var value) ? value : null;
        public List<ProjectM.CreateGameplayEventsOnTimePassed> CreateGameplayEventsOnTimePasseds => _world.EntityManager.GetBufferInternal<ProjectM.CreateGameplayEventsOnTimePassed>(_entity);
        public List<ProjectM.DealDamageOnGameplayEvent> DealDamageOnGameplayEvents => _world.EntityManager.GetBufferInternal<ProjectM.DealDamageOnGameplayEvent>(_entity);
        public ProjectM.ResistanceData? ResistanceData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ResistanceData>(_entity, out var value) ? value : null;
        public List<ProjectM.CastleBuilding.CastleBuildingAttachToParentsBuffer> CastleBuildingAttachToParentsBuffers => _world.EntityManager.GetBufferInternal<ProjectM.CastleBuilding.CastleBuildingAttachToParentsBuffer>(_entity);
        public List<ProjectM.CastleBuilding.CastleBuildingAttachedChildrenBuffer> CastleBuildingAttachedChildrenBuffers => _world.EntityManager.GetBufferInternal<ProjectM.CastleBuilding.CastleBuildingAttachedChildrenBuffer>(_entity);
        public ProjectM.NetworkedSpawnChainChild? NetworkedSpawnChainChild => _world.EntityManager.TryGetComponentDataInternal<ProjectM.NetworkedSpawnChainChild>(_entity, out var value) ? value : null;
        public ProjectM.DestroyAfterTimeOnInventoryChange? DestroyAfterTimeOnInventoryChange => _world.EntityManager.TryGetComponentDataInternal<ProjectM.DestroyAfterTimeOnInventoryChange>(_entity, out var value) ? value : null;
        public ProjectM.DropInInventoryOnSpawn? DropInInventoryOnSpawn => _world.EntityManager.TryGetComponentDataInternal<ProjectM.DropInInventoryOnSpawn>(_entity, out var value) ? value : null;
        public ProjectM.TransitionWhenInventoryIsEmpty? TransitionWhenInventoryIsEmpty => _world.EntityManager.TryGetComponentDataInternal<ProjectM.TransitionWhenInventoryIsEmpty>(_entity, out var value) ? value : null;
        public ProjectM.DestroyAfterDuration? DestroyAfterDuration => _world.EntityManager.TryGetComponentDataInternal<ProjectM.DestroyAfterDuration>(_entity, out var value) ? value : null;
        public ProjectM.DestroyAfterDuration_ActiveUserCheck? DestroyAfterDuration_ActiveUserCheck => _world.EntityManager.TryGetComponentDataInternal<ProjectM.DestroyAfterDuration_ActiveUserCheck>(_entity, out var value) ? value : null;
        public ProjectM.InventoryOwner? InventoryOwner => _world.EntityManager.TryGetComponentDataInternal<ProjectM.InventoryOwner>(_entity, out var value) ? value : null;
        public List<ProjectM.InventoryInstanceElement> InventoryInstanceElements => _world.EntityManager.GetBufferInternal<ProjectM.InventoryInstanceElement>(_entity);
        public ProjectM.DismantleDestroyData? DismantleDestroyData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.DismantleDestroyData>(_entity, out var value) ? value : null;
        public ProjectM.BlueprintData? BlueprintData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.BlueprintData>(_entity, out var value) ? value : null;
        public ProjectM.EditableTileModel? EditableTileModel => _world.EntityManager.TryGetComponentDataInternal<ProjectM.EditableTileModel>(_entity, out var value) ? value : null;
        public ProjectM.CastleAreaRequirement? CastleAreaRequirement => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CastleAreaRequirement>(_entity, out var value) ? value : null;
        public ProjectM.FactionReference? FactionReference => _world.EntityManager.TryGetComponentDataInternal<ProjectM.FactionReference>(_entity, out var value) ? value : null;
        public ProjectM.CastleBuilding.CastleBuildingMaxRange? CastleBuildingMaxRange => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CastleBuilding.CastleBuildingMaxRange>(_entity, out var value) ? value : null;
        public List<ProjectM.BlueprintRequirementBuffer> BlueprintRequirementBuffers => _world.EntityManager.GetBufferInternal<ProjectM.BlueprintRequirementBuffer>(_entity);
        public bool RestrictPlacementToMapZones => _world.EntityManager.HasComponentInternal<ProjectM.CastleBuilding.Placement.RestrictPlacementToMapZones>(_entity);
        public bool IgnorePvETag => _world.EntityManager.HasComponentInternal<ProjectM.IgnorePvETag>(_entity);
        public ProjectM.AoETargetImportance? AoETargetImportance => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AoETargetImportance>(_entity, out var value) ? value : null;
        public ProjectM.Scripting.ScriptDestroy? ScriptDestroy => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Scripting.ScriptDestroy>(_entity, out var value) ? value : null;
        public bool MoveStopTrigger => _world.EntityManager.HasComponentInternal<ProjectM.MoveStopTrigger>(_entity);
        public ProjectM.Gameplay.Scripting.Script_CreateGameplayEventOnDamageTakenToEntityCategory_DataServer? Script_CreateGameplayEventOnDamageTakenToEntityCategory_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_CreateGameplayEventOnDamageTakenToEntityCategory_DataServer>(_entity, out var value) ? value : null;
        public bool ScriptSpawn => _world.EntityManager.HasComponentInternal<ProjectM.Scripting.ScriptSpawn>(_entity);
        public ProjectM.Physics.RedirectCollisionChecksToParent? RedirectCollisionChecksToParent => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Physics.RedirectCollisionChecksToParent>(_entity, out var value) ? value : null;
        public Unity.Transforms.Parent? Parent => _world.EntityManager.TryGetComponentDataInternal<Unity.Transforms.Parent>(_entity, out var value) ? value : null;
        public bool StaticChild => _world.EntityManager.HasComponentInternal<Unity.Transforms.StaticChild>(_entity);
        public bool PickParentTag => _world.EntityManager.HasComponentInternal<ProjectM.Physics.PickParentTag>(_entity);
        public ProjectM.CastleBuilding.CastleHeartConnection? CastleHeartConnection => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CastleBuilding.CastleHeartConnection>(_entity, out var value) ? value : null;
        public ProjectM.CastleBuilding.DyeableCastleObject? DyeableCastleObject => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CastleBuilding.DyeableCastleObject>(_entity, out var value) ? value : null;
        public bool WallpaperSet => _world.EntityManager.HasComponentInternal<ProjectM.WallpaperSet>(_entity);
        public ProjectM.CastleBuilding.CastleRailingPrefabsCollection? CastleRailingPrefabsCollection => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CastleBuilding.CastleRailingPrefabsCollection>(_entity, out var value) ? value : null;
        public ProjectM.ProgressionUserContentDependency? ProgressionUserContentDependency => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ProgressionUserContentDependency>(_entity, out var value) ? value : null;
        public List<ProjectM.DoorChildren> DoorChildrens => _world.EntityManager.GetBufferInternal<ProjectM.DoorChildren>(_entity);
        public bool ChildPrefabTag => _world.EntityManager.HasComponentInternal<Stunlock.Core.ChildPrefabTag>(_entity);
        public ProjectM.NetherSpawnPosition? NetherSpawnPosition => _world.EntityManager.TryGetComponentDataInternal<ProjectM.NetherSpawnPosition>(_entity, out var value) ? value : null;
        public ProjectM.CastleBuilding.CastleRailing? CastleRailing => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CastleBuilding.CastleRailing>(_entity, out var value) ? value : null;
        public ProjectM.CastleBuilding.AssetSwapping.AssetSwapState? AssetSwapState => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CastleBuilding.AssetSwapping.AssetSwapState>(_entity, out var value) ? value : null;
        public List<ProjectM.CastleBuilding.AssetSwapping.AssetSwapColliderBuffer> AssetSwapColliderBuffers => _world.EntityManager.GetBufferInternal<ProjectM.CastleBuilding.AssetSwapping.AssetSwapColliderBuffer>(_entity);
        public ProjectM.UserOwner? UserOwner => _world.EntityManager.TryGetComponentDataInternal<ProjectM.UserOwner>(_entity, out var value) ? value : null;
        public ProjectM.CastleBuilding.CastleFloor? CastleFloor => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CastleBuilding.CastleFloor>(_entity, out var value) ? value : null;
        public ProjectM.CastleBuilding.CastleFloorRoof? CastleFloorRoof => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CastleBuilding.CastleFloorRoof>(_entity, out var value) ? value : null;
        public ProjectM.CastleBuilding.CastleRoomConnection? CastleRoomConnection => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CastleBuilding.CastleRoomConnection>(_entity, out var value) ? value : null;
        public ProjectM.CastleDecayAndRegen? CastleDecayAndRegen => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CastleDecayAndRegen>(_entity, out var value) ? value : null;
        public ProjectM.CastleBuilding.CastleRebuildPhaseState? CastleRebuildPhaseState => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CastleBuilding.CastleRebuildPhaseState>(_entity, out var value) ? value : null;
        public ProjectM.CreatedTime? CreatedTime => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CreatedTime>(_entity, out var value) ? value : null;
        public ProjectM.CastleBuilding.CastleBuildingAttachSettings? CastleBuildingAttachSettings => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CastleBuilding.CastleBuildingAttachSettings>(_entity, out var value) ? value : null;
        public bool CastleRebuildCommonTag => _world.EntityManager.HasComponentInternal<ProjectM.CastleBuilding.Rebuilding.CastleRebuildCommonTag>(_entity);
        public ProjectM.ArmorLevel? ArmorLevel => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ArmorLevel>(_entity, out var value) ? value : null;
        public ProjectM.CastleBuilding.CastleWallPillarImmaterial? CastleWallPillarImmaterial => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CastleBuilding.CastleWallPillarImmaterial>(_entity, out var value) ? value : null;
        public bool CastleWallPillar => _world.EntityManager.HasComponentInternal<ProjectM.CastleBuilding.CastleWallPillar>(_entity);
        public ProjectM.Door? Door => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Door>(_entity, out var value) ? value : null;
        public ProjectM.StaticHierarchyData? StaticHierarchyData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.StaticHierarchyData>(_entity, out var value) ? value : null;
        public ProjectM.CastleBuilding.ImmaterialWhileRaided? ImmaterialWhileRaided => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CastleBuilding.ImmaterialWhileRaided>(_entity, out var value) ? value : null;
        public List<ProjectM.StaticHierarchyBuffer> StaticHierarchyBuffers => _world.EntityManager.GetBufferInternal<ProjectM.StaticHierarchyBuffer>(_entity);
        public bool AnnounceCastleBreached => _world.EntityManager.HasComponentInternal<ProjectM.AnnounceCastleBreached>(_entity);
        public ProjectM.Tiles.NetworkedPrefabChildren? NetworkedPrefabChildren => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Tiles.NetworkedPrefabChildren>(_entity, out var value) ? value : null;
        public ProjectM.PavementBonusSource? PavementBonusSource => _world.EntityManager.TryGetComponentDataInternal<ProjectM.PavementBonusSource>(_entity, out var value) ? value : null;
        public ProjectM.CastleBuilding.CastleBuildingFusedChild? CastleBuildingFusedChild => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CastleBuilding.CastleBuildingFusedChild>(_entity, out var value) ? value : null;
        public ProjectM.CastleBuilding.CastleRoomWall? CastleRoomWall => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CastleBuilding.CastleRoomWall>(_entity, out var value) ? value : null;
        public bool CastleWall => _world.EntityManager.HasComponentInternal<ProjectM.CastleBuilding.CastleWall>(_entity);
        public ProjectM.StartGraveyardExitWaypoint? StartGraveyardExitWaypoint => _world.EntityManager.TryGetComponentDataInternal<ProjectM.StartGraveyardExitWaypoint>(_entity, out var value) ? value : null;
        public List<ProjectM.AttachMapIconsToEntity> AttachMapIconsToEntities => _world.EntityManager.GetBufferInternal<ProjectM.AttachMapIconsToEntity>(_entity);
        public ProjectM.RestrictedInventory? RestrictedInventory => _world.EntityManager.TryGetComponentDataInternal<ProjectM.RestrictedInventory>(_entity, out var value) ? value : null;
        public ProjectM.Network.SyncToUserBitMask? SyncToUserBitMask => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Network.SyncToUserBitMask>(_entity, out var value) ? value : null;
        public List<ProjectM.InventoryBuffer> InventoryBuffers => _world.EntityManager.GetBufferInternal<ProjectM.InventoryBuffer>(_entity);
        public List<ProjectM.Network.SyncToUserBuffer> SyncToUserBuffers => _world.EntityManager.GetBufferInternal<ProjectM.Network.SyncToUserBuffer>(_entity);
        public bool AlwaysNetworked => _world.EntityManager.HasComponentInternal<ProjectM.Network.AlwaysNetworked>(_entity);
        public bool OnlySyncToUsersTag => _world.EntityManager.HasComponentInternal<ProjectM.Network.OnlySyncToUsersTag>(_entity);
        public ProjectM.Immortal? Immortal => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Immortal>(_entity, out var value) ? value : null;
        public ProjectM.Wallpaper_Synced_0? Wallpaper_Synced_0 => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Wallpaper_Synced_0>(_entity, out var value) ? value : null;
        public ProjectM.Wallpaper_Synced_90? Wallpaper_Synced_90 => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Wallpaper_Synced_90>(_entity, out var value) ? value : null;
        public ProjectM.Wallpaper_Synced_180? Wallpaper_Synced_180 => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Wallpaper_Synced_180>(_entity, out var value) ? value : null;
        public ProjectM.Wallpaper_Synced_270? Wallpaper_Synced_270 => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Wallpaper_Synced_270>(_entity, out var value) ? value : null;
        public ProjectM.WallpaperStyles? WallpaperStyles => _world.EntityManager.TryGetComponentDataInternal<ProjectM.WallpaperStyles>(_entity, out var value) ? value : null;
        public ProjectM.CastleBuilding.WallRoofOrnament? WallRoofOrnament => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CastleBuilding.WallRoofOrnament>(_entity, out var value) ? value : null;
        public ProjectM.CastleBuilding.SwapArtWhileRaidedRoot? SwapArtWhileRaidedRoot => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CastleBuilding.SwapArtWhileRaidedRoot>(_entity, out var value) ? value : null;
        public List<ProjectM.CastleBuilding.CastleBuildingAttachmentActiveBuffsBuffer> CastleBuildingAttachmentActiveBuffsBuffers => _world.EntityManager.GetBufferInternal<ProjectM.CastleBuilding.CastleBuildingAttachmentActiveBuffsBuffer>(_entity);
        public List<ProjectM.CastleBuilding.CastleBuildingAttachmentApplyBuff> CastleBuildingAttachmentApplyBuffs => _world.EntityManager.GetBufferInternal<ProjectM.CastleBuilding.CastleBuildingAttachmentApplyBuff>(_entity);
        public List<ProjectM.CastleBuilding.CastleBuildingFusedChildrenBuffer> CastleBuildingFusedChildrenBuffers => _world.EntityManager.GetBufferInternal<ProjectM.CastleBuilding.CastleBuildingFusedChildrenBuffer>(_entity);
        public bool CastleBuildingFusedRoot => _world.EntityManager.HasComponentInternal<ProjectM.CastleBuilding.CastleBuildingFusedRoot>(_entity);
        public ProjectM.Shared.Relic? Relic => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Shared.Relic>(_entity, out var value) ? value : null;
        public bool RequireGroundedTag => _world.EntityManager.HasComponentInternal<ProjectM.CastleBuilding.RequireGroundedTag>(_entity);
        public bool DropTableOnDestroy => _world.EntityManager.HasComponentInternal<ProjectM.Shared.DropTableOnDestroy>(_entity);
        public ProjectM.WorkstationAssignedServant? WorkstationAssignedServant => _world.EntityManager.TryGetComponentDataInternal<ProjectM.WorkstationAssignedServant>(_entity, out var value) ? value : null;
        public ProjectM.CastleBuilding.CastleHeart? CastleHeart => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CastleBuilding.CastleHeart>(_entity, out var value) ? value : null;
        public ProjectM.CastleBuilding.CastleHeartPhased? CastleHeartPhased => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CastleBuilding.CastleHeartPhased>(_entity, out var value) ? value : null;
        public ProjectM.StationServants? StationServants => _world.EntityManager.TryGetComponentDataInternal<ProjectM.StationServants>(_entity, out var value) ? value : null;
        public ProjectM.CastleWorkstation? CastleWorkstation => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CastleWorkstation>(_entity, out var value) ? value : null;
        public ProjectM.Network.SyncBoundingBox? SyncBoundingBox => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Network.SyncBoundingBox>(_entity, out var value) ? value : null;
        public ProjectM.CastleBuilding.CastleHeartPhasedPersistence? CastleHeartPhasedPersistence => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CastleBuilding.CastleHeartPhasedPersistence>(_entity, out var value) ? value : null;
        public List<ProjectM.CastleBuilding.ActiveServantMission> ActiveServantMissions => _world.EntityManager.GetBufferInternal<ProjectM.CastleBuilding.ActiveServantMission>(_entity);
        public List<ProjectM.CastleBuilding.CastleTeleporterElement> CastleTeleporterElements => _world.EntityManager.GetBufferInternal<ProjectM.CastleBuilding.CastleTeleporterElement>(_entity);
        public List<ProjectM.RefinementstationRecipesBuffer> RefinementstationRecipesBuffers => _world.EntityManager.GetBufferInternal<ProjectM.RefinementstationRecipesBuffer>(_entity);
        public List<ProjectM.CastleBuilding.CastleMemberNames> CastleMemberNames => _world.EntityManager.GetBufferInternal<ProjectM.CastleBuilding.CastleMemberNames>(_entity);
        public ProjectM.GiveAchievementOnSpawn? GiveAchievementOnSpawn => _world.EntityManager.TryGetComponentDataInternal<ProjectM.GiveAchievementOnSpawn>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_ApplyBuffUnderHealthThreshold_DataServer? Script_ApplyBuffUnderHealthThreshold_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_ApplyBuffUnderHealthThreshold_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.NameableInteractable? NameableInteractable => _world.EntityManager.TryGetComponentDataInternal<ProjectM.NameableInteractable>(_entity, out var value) ? value : null;
        public bool CastleRebuildUniqueTag => _world.EntityManager.HasComponentInternal<ProjectM.CastleBuilding.Rebuilding.CastleRebuildUniqueTag>(_entity);
        public bool CastleRebuildRequiredTag => _world.EntityManager.HasComponentInternal<ProjectM.CastleBuilding.Rebuilding.CastleRebuildRequiredTag>(_entity);
        public ProjectM.CastleBuilding.PlacementLimitToSet? PlacementLimitToSet => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CastleBuilding.PlacementLimitToSet>(_entity, out var value) ? value : null;
        public ProjectM.Refinementstation? Refinementstation => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Refinementstation>(_entity, out var value) ? value : null;
        public List<ProjectM.StationBonusBuffer> StationBonusBuffers => _world.EntityManager.GetBufferInternal<ProjectM.StationBonusBuffer>(_entity);
        public ProjectM.UnitSpawnerstation? UnitSpawnerstation => _world.EntityManager.TryGetComponentDataInternal<ProjectM.UnitSpawnerstation>(_entity, out var value) ? value : null;
        public ProjectM.CastleLimited? CastleLimited => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CastleLimited>(_entity, out var value) ? value : null;
        public List<ProjectM.SpawnedUnitsBuffer> SpawnedUnitsBuffers => _world.EntityManager.GetBufferInternal<ProjectM.SpawnedUnitsBuffer>(_entity);
        public List<ProjectM.UnitSpawnPointBuffer> UnitSpawnPointBuffers => _world.EntityManager.GetBufferInternal<ProjectM.UnitSpawnPointBuffer>(_entity);
        public bool MirrorStationTag => _world.EntityManager.HasComponentInternal<ProjectM.MirrorStationTag>(_entity);
        public List<ProjectM.ProgressionDependencyElement> ProgressionDependencyElements => _world.EntityManager.GetBufferInternal<ProjectM.ProgressionDependencyElement>(_entity);
        public ProjectM.Residency? Residency => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Residency>(_entity, out var value) ? value : null;
        public ProjectM.RespawnPoint? RespawnPoint => _world.EntityManager.TryGetComponentDataInternal<ProjectM.RespawnPoint>(_entity, out var value) ? value : null;
        public ProjectM.LastTranslation? LastTranslation => _world.EntityManager.TryGetComponentDataInternal<ProjectM.LastTranslation>(_entity, out var value) ? value : null;
        public ProjectM.Forge_Shared? Forge_Shared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Forge_Shared>(_entity, out var value) ? value : null;
        public ProjectM.ResearchStation? ResearchStation => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ResearchStation>(_entity, out var value) ? value : null;
        public ProjectM.ServantInteractPointLocalTransform? ServantInteractPointLocalTransform => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ServantInteractPointLocalTransform>(_entity, out var value) ? value : null;
        public List<ProjectM.DiscoverCostBuffer> DiscoverCostBuffers => _world.EntityManager.GetBufferInternal<ProjectM.DiscoverCostBuffer>(_entity);
        public List<ProjectM.ResearchBuffer> ResearchBuffers => _world.EntityManager.GetBufferInternal<ProjectM.ResearchBuffer>(_entity);
        public List<ProjectM.QueuedWorkstationCraftAction> QueuedWorkstationCraftActions => _world.EntityManager.GetBufferInternal<ProjectM.QueuedWorkstationCraftAction>(_entity);
        public List<ProjectM.QueuedWorkstationCraftActionItems> QueuedWorkstationCraftActionItems => _world.EntityManager.GetBufferInternal<ProjectM.QueuedWorkstationCraftActionItems>(_entity);
        public List<ProjectM.WorkstationRecipesBuffer> WorkstationRecipesBuffers => _world.EntityManager.GetBufferInternal<ProjectM.WorkstationRecipesBuffer>(_entity);
        public ProjectM.MusicPlayerStation_Server? MusicPlayerStation_Server => _world.EntityManager.TryGetComponentDataInternal<ProjectM.MusicPlayerStation_Server>(_entity, out var value) ? value : null;
        public ProjectM.MusicPlayer_Shared? MusicPlayer_Shared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.MusicPlayer_Shared>(_entity, out var value) ? value : null;
        public List<ProjectM.MusicPlayerStation_PlaylistElement> MusicPlayerStation_PlaylistElement => _world.EntityManager.GetBufferInternal<ProjectM.MusicPlayerStation_PlaylistElement>(_entity);
        public List<ProjectM.MusicPlayerStation_UnlockedTrackElement> MusicPlayerStation_UnlockedTrackElement => _world.EntityManager.GetBufferInternal<ProjectM.MusicPlayerStation_UnlockedTrackElement>(_entity);
        public ProjectM.Salvagestation? Salvagestation => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Salvagestation>(_entity, out var value) ? value : null;
        public ProjectM.JewelCraftingStation? JewelCraftingStation => _world.EntityManager.TryGetComponentDataInternal<ProjectM.JewelCraftingStation>(_entity, out var value) ? value : null;
        public List<ProjectM.JewelCraftingProcessingRequiredItem> JewelCraftingProcessingRequiredItems => _world.EntityManager.GetBufferInternal<ProjectM.JewelCraftingProcessingRequiredItem>(_entity);
        public ProjectM.PrisonCell? PrisonCell => _world.EntityManager.TryGetComponentDataInternal<ProjectM.PrisonCell>(_entity, out var value) ? value : null;
        public ProjectM.Prisonstation? Prisonstation => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Prisonstation>(_entity, out var value) ? value : null;
        public ProjectM.CastleBuilding.CastleStairs? CastleStairs => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CastleBuilding.CastleStairs>(_entity, out var value) ? value : null;
        public bool CastleRebuildHiddenTag => _world.EntityManager.HasComponentInternal<ProjectM.CastleBuilding.Rebuilding.CastleRebuildHiddenTag>(_entity);
        public ProjectM.CastleBuilding.CastleTeleporterComponent? CastleTeleporterComponent => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CastleBuilding.CastleTeleporterComponent>(_entity, out var value) ? value : null;
        public ProjectM.SpellSchoolPassiveStation? SpellSchoolPassiveStation => _world.EntityManager.TryGetComponentDataInternal<ProjectM.SpellSchoolPassiveStation>(_entity, out var value) ? value : null;
        public List<ProjectM.LearnablePassivesBuffer> LearnablePassivesBuffers => _world.EntityManager.GetBufferInternal<ProjectM.LearnablePassivesBuffer>(_entity);
        public ProjectM.DynamicCollision? DynamicCollision => _world.EntityManager.TryGetComponentDataInternal<ProjectM.DynamicCollision>(_entity, out var value) ? value : null;
        public List<ProjectM.HealOnGameplayEvent> HealOnGameplayEvents => _world.EntityManager.GetBufferInternal<ProjectM.HealOnGameplayEvent>(_entity);
        public bool RelicRadar => _world.EntityManager.HasComponentInternal<ProjectM.RelicRadar>(_entity);
        public bool NoctemRadar => _world.EntityManager.HasComponentInternal<ProjectM.NoctemRadar>(_entity);
        public bool DestroyWhenInventoryIsEmpty => _world.EntityManager.HasComponentInternal<ProjectM.DestroyWhenInventoryIsEmpty>(_entity);
        public bool ShrinkInventoryWhenWithdrawn => _world.EntityManager.HasComponentInternal<ProjectM.ShrinkInventoryWhenWithdrawn>(_entity);
        public bool CastleRebuildTransferContainer => _world.EntityManager.HasComponentInternal<ProjectM.CastleBuilding.CastleRebuildTransferContainer>(_entity);
        public ProjectM.Bonfire? Bonfire => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Bonfire>(_entity, out var value) ? value : null;
        public ProjectM.BurnContainer? BurnContainer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.BurnContainer>(_entity, out var value) ? value : null;
        public ProjectM.CloudCookie? CloudCookie => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CloudCookie>(_entity, out var value) ? value : null;
        public ProjectM.ChunkWaypoint? ChunkWaypoint => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ChunkWaypoint>(_entity, out var value) ? value : null;
        public bool CastleWaypoint => _world.EntityManager.HasComponentInternal<ProjectM.CastleWaypoint>(_entity);
        public ProjectM.RespecStation? RespecStation => _world.EntityManager.TryGetComponentDataInternal<ProjectM.RespecStation>(_entity, out var value) ? value : null;
        public ProjectM.ServantCoffinstation? ServantCoffinstation => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ServantCoffinstation>(_entity, out var value) ? value : null;
        public ProjectM.ServantCoffinEffects? ServantCoffinEffects => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ServantCoffinEffects>(_entity, out var value) ? value : null;
        public ProjectM.AbilityTarget? AbilityTarget => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AbilityTarget>(_entity, out var value) ? value : null;
        public ProjectM.Attach? Attach => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Attach>(_entity, out var value) ? value : null;
        public ProjectM.AbilityState? AbilityState => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AbilityState>(_entity, out var value) ? value : null;
        public ProjectM.AbilityPriority? AbilityPriority => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AbilityPriority>(_entity, out var value) ? value : null;
        public ProjectM.AbilityCastTimeData? AbilityCastTimeData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AbilityCastTimeData>(_entity, out var value) ? value : null;
        public ProjectM.AbilityCooldownState? AbilityCooldownState => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AbilityCooldownState>(_entity, out var value) ? value : null;
        public ProjectM.AbilityCooldownData? AbilityCooldownData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AbilityCooldownData>(_entity, out var value) ? value : null;
        public List<ProjectM.AbilitySpawnPrefabOnCast> AbilitySpawnPrefabOnCasts => _world.EntityManager.GetBufferInternal<ProjectM.AbilitySpawnPrefabOnCast>(_entity);
        public List<ProjectM.AbilityCastCondition> AbilityCastConditions => _world.EntityManager.GetBufferInternal<ProjectM.AbilityCastCondition>(_entity);
        public bool PreventDisableWhenNoPlayersInRange => _world.EntityManager.HasComponentInternal<ProjectM.PreventDisableWhenNoPlayersInRange>(_entity);
        public ProjectM.Network.ModifyRotationDuringCast? ModifyRotationDuringCast => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Network.ModifyRotationDuringCast>(_entity, out var value) ? value : null;
        public ProjectM.AbilityIgnoreSettings? AbilityIgnoreSettings => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AbilityIgnoreSettings>(_entity, out var value) ? value : null;
        public ProjectM.AbilityInterruptData? AbilityInterruptData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AbilityInterruptData>(_entity, out var value) ? value : null;
        public ProjectM.GlobalCooldown? GlobalCooldown => _world.EntityManager.TryGetComponentDataInternal<ProjectM.GlobalCooldown>(_entity, out var value) ? value : null;
        public ProjectM.Network.MoveDuringCastData? MoveDuringCastData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Network.MoveDuringCastData>(_entity, out var value) ? value : null;
        public bool IgnoreInCombatBuff => _world.EntityManager.HasComponentInternal<ProjectM.IgnoreInCombatBuff>(_entity);
        public ProjectM.HideWeapon? HideWeapon => _world.EntityManager.TryGetComponentDataInternal<ProjectM.HideWeapon>(_entity, out var value) ? value : null;
        public ProjectM.HideWeaponDuringCast? HideWeaponDuringCast => _world.EntityManager.TryGetComponentDataInternal<ProjectM.HideWeaponDuringCast>(_entity, out var value) ? value : null;
        public ProjectM.Network.ModifyMovementDuringCastData? ModifyMovementDuringCastData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Network.ModifyMovementDuringCastData>(_entity, out var value) ? value : null;
        public ProjectM.AbilityRemoveBuffCategoryOnStartCast? AbilityRemoveBuffCategoryOnStartCast => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AbilityRemoveBuffCategoryOnStartCast>(_entity, out var value) ? value : null;
        public ProjectM.Shared.SpellModSetComponent? SpellModSetComponent => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Shared.SpellModSetComponent>(_entity, out var value) ? value : null;
        public List<ProjectM.AbilitySpawnPrefabOnStartCast> AbilitySpawnPrefabOnStartCasts => _world.EntityManager.GetBufferInternal<ProjectM.AbilitySpawnPrefabOnStartCast>(_entity);
        public List<ProjectM.Shared.SpellModArithmeticModifiable> SpellModArithmeticModifiables => _world.EntityManager.GetBufferInternal<ProjectM.Shared.SpellModArithmeticModifiable>(_entity);
        public ProjectM.MoveStopAbilityData? MoveStopAbilityData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.MoveStopAbilityData>(_entity, out var value) ? value : null;
        public ProjectM.EnergyRequirement? EnergyRequirement => _world.EntityManager.TryGetComponentDataInternal<ProjectM.EnergyRequirement>(_entity, out var value) ? value : null;
        public ProjectM.Behaviours.AbilityRange? AbilityRange => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Behaviours.AbilityRange>(_entity, out var value) ? value : null;
        public ProjectM.ChangeKnockbackResistanceDuringCast? ChangeKnockbackResistanceDuringCast => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ChangeKnockbackResistanceDuringCast>(_entity, out var value) ? value : null;
        public ProjectM.AbilityPositionInaccuracy? AbilityPositionInaccuracy => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AbilityPositionInaccuracy>(_entity, out var value) ? value : null;
        public ProjectM.AbilityAimPrediction? AbilityAimPrediction => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AbilityAimPrediction>(_entity, out var value) ? value : null;
        public bool AbilityHoldToCastData => _world.EntityManager.HasComponentInternal<ProjectM.AbilityHoldToCastData>(_entity);
        public ProjectM.AbilityChargeUpData? AbilityChargeUpData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AbilityChargeUpData>(_entity, out var value) ? value : null;
        public ProjectM.AbilityDirectionInaccuracy? AbilityDirectionInaccuracy => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AbilityDirectionInaccuracy>(_entity, out var value) ? value : null;
        public List<ProjectM.RemoveBuffOnGameplayEvent> RemoveBuffOnGameplayEvents => _world.EntityManager.GetBufferInternal<ProjectM.RemoveBuffOnGameplayEvent>(_entity);
        public List<ProjectM.RemoveBuffOnGameplayEventEntry> RemoveBuffOnGameplayEventEntries => _world.EntityManager.GetBufferInternal<ProjectM.RemoveBuffOnGameplayEventEntry>(_entity);
        public ProjectM.RotateTowardsAimDirectionDuringCastData? RotateTowardsAimDirectionDuringCastData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.RotateTowardsAimDirectionDuringCastData>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_MultiShot_Cast_DataServer? Script_MultiShot_Cast_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_MultiShot_Cast_DataServer>(_entity, out var value) ? value : null;
        public bool RunScriptOnPreCastEnded => _world.EntityManager.HasComponentInternal<ProjectM.RunScriptOnPreCastEnded>(_entity);
        public ProjectM.Gameplay.Scripting.Script_MultiThrow_Cast_DataServer? Script_MultiThrow_Cast_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_MultiThrow_Cast_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_ApplyBuffOnAllWithBuff_Cast_DataServer? Script_ApplyBuffOnAllWithBuff_Cast_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_ApplyBuffOnAllWithBuff_Cast_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_PreCast_TakeFlight_DataServer? Script_PreCast_TakeFlight_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_PreCast_TakeFlight_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_ModifyBuffResistancesDuringCast_DataServer? Script_ModifyBuffResistancesDuringCast_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_ModifyBuffResistancesDuringCast_DataServer>(_entity, out var value) ? value : null;
        public bool RunScriptOnCastStarted => _world.EntityManager.HasComponentInternal<ProjectM.RunScriptOnCastStarted>(_entity);
        public ProjectM.Gameplay.Scripting.Script_RemoveBuffOnAbilityUseData? Script_RemoveBuffOnAbilityUseData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_RemoveBuffOnAbilityUseData>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_SCTOnCast_DataServer? Script_SCTOnCast_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_SCTOnCast_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_Fly_CheckLanding_DataServer? Script_Fly_CheckLanding_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_Fly_CheckLanding_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_BatformSCT_DataServer? Script_BatformSCT_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_BatformSCT_DataServer>(_entity, out var value) ? value : null;
        public List<ProjectM.PlayerLevelDamageSettings> PlayerLevelDamageSettings => _world.EntityManager.GetBufferInternal<ProjectM.PlayerLevelDamageSettings>(_entity);
        public List<ProjectM.UnitLevelDamageSettings> UnitLevelDamageSettings => _world.EntityManager.GetBufferInternal<ProjectM.UnitLevelDamageSettings>(_entity);
        public List<ProjectM.Behaviours.CastOptionGroupBuffer> CastOptionGroupBuffers => _world.EntityManager.GetBufferInternal<ProjectM.Behaviours.CastOptionGroupBuffer>(_entity);
        public List<ProjectM.Behaviours.CastOptionBuffer> CastOptionBuffers => _world.EntityManager.GetBufferInternal<ProjectM.Behaviours.CastOptionBuffer>(_entity);
        public ProjectM.SpellTarget? SpellTarget => _world.EntityManager.TryGetComponentDataInternal<ProjectM.SpellTarget>(_entity, out var value) ? value : null;
        public ProjectM.Buff? Buff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Buff>(_entity, out var value) ? value : null;
        public ProjectM.SetOwnerRotateTowardsMovement? SetOwnerRotateTowardsMovement => _world.EntityManager.TryGetComponentDataInternal<ProjectM.SetOwnerRotateTowardsMovement>(_entity, out var value) ? value : null;
        public bool AbilityTargetSource => _world.EntityManager.HasComponentInternal<ProjectM.AbilityTargetSource>(_entity);
        public bool GetOwnerTeamOnSpawn => _world.EntityManager.HasComponentInternal<ProjectM.GetOwnerTeamOnSpawn>(_entity);
        public bool MountInitBuff => _world.EntityManager.HasComponentInternal<ProjectM.MountInitBuff>(_entity);
        public ProjectM.ModifyMovementSpeedBuff? ModifyMovementSpeedBuff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ModifyMovementSpeedBuff>(_entity, out var value) ? value : null;
        public ProjectM.BuffCategory? BuffCategory => _world.EntityManager.TryGetComponentDataInternal<ProjectM.BuffCategory>(_entity, out var value) ? value : null;
        public ProjectM.InteractPickup? InteractPickup => _world.EntityManager.TryGetComponentDataInternal<ProjectM.InteractPickup>(_entity, out var value) ? value : null;
        public bool DestroyOnSpawn => _world.EntityManager.HasComponentInternal<ProjectM.DestroyOnSpawn>(_entity);
        public bool InteractBuff => _world.EntityManager.HasComponentInternal<ProjectM.InteractBuff>(_entity);
        public ProjectM.BuffModificationFlagData? BuffModificationFlagData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.BuffModificationFlagData>(_entity, out var value) ? value : null;
        public bool DecayOnServerTick => _world.EntityManager.HasComponentInternal<ProjectM.DecayOnServerTick>(_entity);
        public bool Buff_Destroy_On_Owner_Death => _world.EntityManager.HasComponentInternal<ProjectM.Buff_Destroy_On_Owner_Death>(_entity);
        public ProjectM.SpawnRandomLifeTime? SpawnRandomLifeTime => _world.EntityManager.TryGetComponentDataInternal<ProjectM.SpawnRandomLifeTime>(_entity, out var value) ? value : null;
        public ProjectM.ModifyUnitBaseStatsTypeBuff? ModifyUnitBaseStatsTypeBuff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ModifyUnitBaseStatsTypeBuff>(_entity, out var value) ? value : null;
        public List<ProjectM.ModifyUnitStatBuff_DOTS> ModifyUnitStatBuff_DOTS => _world.EntityManager.GetBufferInternal<ProjectM.ModifyUnitStatBuff_DOTS>(_entity);
        public bool BindCoffin => _world.EntityManager.HasComponentInternal<ProjectM.BindCoffin>(_entity);
        public ProjectM.CastleResistanceBuff? CastleResistanceBuff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CastleResistanceBuff>(_entity, out var value) ? value : null;
        public ProjectM.DestroyOnAbilityCast? DestroyOnAbilityCast => _world.EntityManager.TryGetComponentDataInternal<ProjectM.DestroyOnAbilityCast>(_entity, out var value) ? value : null;
        public bool InsideInitBuff => _world.EntityManager.HasComponentInternal<ProjectM.InsideInitBuff>(_entity);
        public ProjectM.ModifyAggroRangesBuff? ModifyAggroRangesBuff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ModifyAggroRangesBuff>(_entity, out var value) ? value : null;
        public ProjectM.Behaviours.CastOptionRoot? CastOptionRoot => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Behaviours.CastOptionRoot>(_entity, out var value) ? value : null;
        public List<ProjectM.Behaviours.CastOptionStateBuffer> CastOptionStateBuffers => _world.EntityManager.GetBufferInternal<ProjectM.Behaviours.CastOptionStateBuffer>(_entity);
        public ProjectM.GetOwnerRotation? GetOwnerRotation => _world.EntityManager.TryGetComponentDataInternal<ProjectM.GetOwnerRotation>(_entity, out var value) ? value : null;
        public ProjectM.GetTranslationOnSpawn? GetTranslationOnSpawn => _world.EntityManager.TryGetComponentDataInternal<ProjectM.GetTranslationOnSpawn>(_entity, out var value) ? value : null;
        public ProjectM.MoveTowardsPositionBuff? MoveTowardsPositionBuff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.MoveTowardsPositionBuff>(_entity, out var value) ? value : null;
        public ProjectM.ManualFirstFrameLastTranslation? ManualFirstFrameLastTranslation => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ManualFirstFrameLastTranslation>(_entity, out var value) ? value : null;
        public List<ProjectM.MoveTowardsPositionBuff_PathElement> MoveTowardsPositionBuff_PathElement => _world.EntityManager.GetBufferInternal<ProjectM.MoveTowardsPositionBuff_PathElement>(_entity);
        public bool GetOwnerRotationOnlyOnSpawnTag => _world.EntityManager.HasComponentInternal<ProjectM.GetOwnerRotationOnlyOnSpawnTag>(_entity);
        public ProjectM.Description? Description => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Description>(_entity, out var value) ? value : null;
        public ProjectM.BloodBuff? BloodBuff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.BloodBuff>(_entity, out var value) ? value : null;
        public ProjectM.BloodBuffScript_Draculin_BloodMendBonus? BloodBuffScript_Draculin_BloodMendBonus => _world.EntityManager.TryGetComponentDataInternal<ProjectM.BloodBuffScript_Draculin_BloodMendBonus>(_entity, out var value) ? value : null;
        public bool Buff_Persists_Through_Death => _world.EntityManager.HasComponentInternal<ProjectM.Buff_Persists_Through_Death>(_entity);
        public ProjectM.Dash? Dash => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Dash>(_entity, out var value) ? value : null;
        public ProjectM.DashSpawn? DashSpawn => _world.EntityManager.TryGetComponentDataInternal<ProjectM.DashSpawn>(_entity, out var value) ? value : null;
        public ProjectM.Knockback? Knockback => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Knockback>(_entity, out var value) ? value : null;
        public bool ServerControlsPositionBuff => _world.EntityManager.HasComponentInternal<ProjectM.ServerControlsPositionBuff>(_entity);
        public bool SyncAttachedTranslation => _world.EntityManager.HasComponentInternal<ProjectM.SyncAttachedTranslation>(_entity);
        public ProjectM.StackLifeTimeModifier? StackLifeTimeModifier => _world.EntityManager.TryGetComponentDataInternal<ProjectM.StackLifeTimeModifier>(_entity, out var value) ? value : null;
        public bool ActivateDraculaWarpRift => _world.EntityManager.HasComponentInternal<ProjectM.ActivateDraculaWarpRift>(_entity);
        public bool GrabBuff => _world.EntityManager.HasComponentInternal<ProjectM.GrabBuff>(_entity);
        public ProjectM.UsePortal? UsePortal => _world.EntityManager.TryGetComponentDataInternal<ProjectM.UsePortal>(_entity, out var value) ? value : null;
        public bool OpenDoor => _world.EntityManager.HasComponentInternal<ProjectM.OpenDoor>(_entity);
        public ProjectM.EntityInput? EntityInput => _world.EntityManager.TryGetComponentDataInternal<ProjectM.EntityInput>(_entity, out var value) ? value : null;
        public ProjectM.Velocity? Velocity => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Velocity>(_entity, out var value) ? value : null;
        public ProjectM.TargetDirection? TargetDirection => _world.EntityManager.TryGetComponentDataInternal<ProjectM.TargetDirection>(_entity, out var value) ? value : null;
        public ProjectM.EntityAimData? EntityAimData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.EntityAimData>(_entity, out var value) ? value : null;
        public ProjectM.MoveVelocity? MoveVelocity => _world.EntityManager.TryGetComponentDataInternal<ProjectM.MoveVelocity>(_entity, out var value) ? value : null;
        public ProjectM.Hybrid.DeathRagdollForce? DeathRagdollForce => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Hybrid.DeathRagdollForce>(_entity, out var value) ? value : null;
        public ProjectM.UI.GoToHUDMenu? GoToHUDMenu => _world.EntityManager.TryGetComponentDataInternal<ProjectM.UI.GoToHUDMenu>(_entity, out var value) ? value : null;
        public ProjectM.BloodBuffScript_Brute_NulifyAndEmpower? BloodBuffScript_Brute_NulifyAndEmpower => _world.EntityManager.TryGetComponentDataInternal<ProjectM.BloodBuffScript_Brute_NulifyAndEmpower>(_entity, out var value) ? value : null;
        public ProjectM.DisableAggroBuff? DisableAggroBuff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.DisableAggroBuff>(_entity, out var value) ? value : null;
        public ProjectM.BloodBuffScript_LastStrike? BloodBuffScript_LastStrike => _world.EntityManager.TryGetComponentDataInternal<ProjectM.BloodBuffScript_LastStrike>(_entity, out var value) ? value : null;
        public bool DisconnectSunImmunityTimeTag => _world.EntityManager.HasComponentInternal<ProjectM.Gameplay.DisconnectSunImmunityTimeTag>(_entity);
        public ProjectM.UpdateTranslationWithOffset? UpdateTranslationWithOffset => _world.EntityManager.TryGetComponentDataInternal<ProjectM.UpdateTranslationWithOffset>(_entity, out var value) ? value : null;
        public bool HasResidentBuff => _world.EntityManager.HasComponentInternal<ProjectM.HasResidentBuff>(_entity);
        public ProjectM.BloodBuffScript_Brute_HealthRegenBonus? BloodBuffScript_Brute_HealthRegenBonus => _world.EntityManager.TryGetComponentDataInternal<ProjectM.BloodBuffScript_Brute_HealthRegenBonus>(_entity, out var value) ? value : null;
        public ProjectM.BloodBuffScript_Rogue_MountDamageBonus? BloodBuffScript_Rogue_MountDamageBonus => _world.EntityManager.TryGetComponentDataInternal<ProjectM.BloodBuffScript_Rogue_MountDamageBonus>(_entity, out var value) ? value : null;
        public bool RegenOnServerTick => _world.EntityManager.HasComponentInternal<ProjectM.RegenOnServerTick>(_entity);
        public List<ProjectM.CreateGameplayEventsOnTick> CreateGameplayEventsOnTicks => _world.EntityManager.GetBufferInternal<ProjectM.CreateGameplayEventsOnTick>(_entity);
        public ProjectM.ChangeKnockbackResistanceBuff? ChangeKnockbackResistanceBuff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ChangeKnockbackResistanceBuff>(_entity, out var value) ? value : null;
        public List<ProjectM.ForceCastOnGameplayEvent> ForceCastOnGameplayEvents => _world.EntityManager.GetBufferInternal<ProjectM.ForceCastOnGameplayEvent>(_entity);
        public List<ProjectM.Shared.SpellModArithmetic> SpellModArithmetics => _world.EntityManager.GetBufferInternal<ProjectM.Shared.SpellModArithmetic>(_entity);
        public ProjectM.Gameplay.Scripting.AbilityProjectileFanOnGameplayEvent_DataServer? AbilityProjectileFanOnGameplayEvent_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.AbilityProjectileFanOnGameplayEvent_DataServer>(_entity, out var value) ? value : null;
        public List<ProjectM.CreateGameplayEventsOnAbilityImpaired> CreateGameplayEventsOnAbilityImpaireds => _world.EntityManager.GetBufferInternal<ProjectM.CreateGameplayEventsOnAbilityImpaired>(_entity);
        public List<ProjectM.RunScriptOnGameplayEvent> RunScriptOnGameplayEvents => _world.EntityManager.GetBufferInternal<ProjectM.RunScriptOnGameplayEvent>(_entity);
        public bool DestroyOnManualInterrupt => _world.EntityManager.HasComponentInternal<ProjectM.DestroyOnManualInterrupt>(_entity);
        public List<ProjectM.SpawnMinionOnGameplayEvent> SpawnMinionOnGameplayEvents => _world.EntityManager.GetBufferInternal<ProjectM.SpawnMinionOnGameplayEvent>(_entity);
        public ProjectM.Gameplay.Scripting.Script_Passive_SpawnPrefabOnGameplayEvent_DataServer? Script_Passive_SpawnPrefabOnGameplayEvent_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_Passive_SpawnPrefabOnGameplayEvent_DataServer>(_entity, out var value) ? value : null;
        public List<ProjectM.ChangeBloodOnGameplayEvent> ChangeBloodOnGameplayEvents => _world.EntityManager.GetBufferInternal<ProjectM.ChangeBloodOnGameplayEvent>(_entity);
        public List<ProjectM.UnlockTrophyOnGameplayEvent> UnlockTrophyOnGameplayEvents => _world.EntityManager.GetBufferInternal<ProjectM.UnlockTrophyOnGameplayEvent>(_entity);
        public ProjectM.AggroConsumer? AggroConsumer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AggroConsumer>(_entity, out var value) ? value : null;
        public ProjectM.Pathfinding.LastPathRequest? LastPathRequest => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Pathfinding.LastPathRequest>(_entity, out var value) ? value : null;
        public ProjectM.OpenDoors? OpenDoors => _world.EntityManager.TryGetComponentDataInternal<ProjectM.OpenDoors>(_entity, out var value) ? value : null;
        public ProjectM.GainAggroByAlert? GainAggroByAlert => _world.EntityManager.TryGetComponentDataInternal<ProjectM.GainAggroByAlert>(_entity, out var value) ? value : null;
        public ProjectM.GainAggroByVicinity? GainAggroByVicinity => _world.EntityManager.TryGetComponentDataInternal<ProjectM.GainAggroByVicinity>(_entity, out var value) ? value : null;
        public ProjectM.GainAlertByVicinity? GainAlertByVicinity => _world.EntityManager.TryGetComponentDataInternal<ProjectM.GainAlertByVicinity>(_entity, out var value) ? value : null;
        public ProjectM.AggroModifiers? AggroModifiers => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AggroModifiers>(_entity, out var value) ? value : null;
        public ProjectM.AlertModifiers? AlertModifiers => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AlertModifiers>(_entity, out var value) ? value : null;
        public ProjectM.AggroDamageHistoryConfig? AggroDamageHistoryConfig => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AggroDamageHistoryConfig>(_entity, out var value) ? value : null;
        public ProjectM.ServantPower? ServantPower => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ServantPower>(_entity, out var value) ? value : null;
        public ProjectM.ServantPowerConstants? ServantPowerConstants => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ServantPowerConstants>(_entity, out var value) ? value : null;
        public ProjectM.Pathfinding.Pathfinder? Pathfinder => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Pathfinding.Pathfinder>(_entity, out var value) ? value : null;
        public List<ProjectM.OpenDoorsBuffer> OpenDoorsBuffers => _world.EntityManager.GetBufferInternal<ProjectM.OpenDoorsBuffer>(_entity);
        public List<ProjectM.AggroBuffer> AggroBuffers => _world.EntityManager.GetBufferInternal<ProjectM.AggroBuffer>(_entity);
        public List<ProjectM.AlertBuffer> AlertBuffers => _world.EntityManager.GetBufferInternal<ProjectM.AlertBuffer>(_entity);
        public List<ProjectM.AggroCandidateBufferElement> AggroCandidateBufferElements => _world.EntityManager.GetBufferInternal<ProjectM.AggroCandidateBufferElement>(_entity);
        public List<ProjectM.AggroDamageHistoryBufferElement> AggroDamageHistoryBufferElements => _world.EntityManager.GetBufferInternal<ProjectM.AggroDamageHistoryBufferElement>(_entity);
        public List<ProjectM.ExternalAggroBufferElement> ExternalAggroBufferElements => _world.EntityManager.GetBufferInternal<ProjectM.ExternalAggroBufferElement>(_entity);
        public List<ProjectM.Pathfinding.PathBuffer> PathBuffers => _world.EntityManager.GetBufferInternal<ProjectM.Pathfinding.PathBuffer>(_entity);
        public List<ProjectM.Pathfinding.PathRequestFilledSegmentBuffer> PathRequestFilledSegmentBuffers => _world.EntityManager.GetBufferInternal<ProjectM.Pathfinding.PathRequestFilledSegmentBuffer>(_entity);
        public List<ProjectM.Pathfinding.PathRequestSolveDebugBuffer> PathRequestSolveDebugBuffers => _world.EntityManager.GetBufferInternal<ProjectM.Pathfinding.PathRequestSolveDebugBuffer>(_entity);
        public List<ProjectM.Pathfinding.UnsmoothedPathBuffer> UnsmoothedPathBuffers => _world.EntityManager.GetBufferInternal<ProjectM.Pathfinding.UnsmoothedPathBuffer>(_entity);
        public ProjectM.Gameplay.Scripting.Script_SetAbilityCooldownOnGameplayEvent_DataServer? Script_SetAbilityCooldownOnGameplayEvent_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_SetAbilityCooldownOnGameplayEvent_DataServer>(_entity, out var value) ? value : null;
        public List<ProjectM.PlayImpactOnGameplayEvent> PlayImpactOnGameplayEvents => _world.EntityManager.GetBufferInternal<ProjectM.PlayImpactOnGameplayEvent>(_entity);
        public ProjectM.OffsetTranslationOnSpawn? OffsetTranslationOnSpawn => _world.EntityManager.TryGetComponentDataInternal<ProjectM.OffsetTranslationOnSpawn>(_entity, out var value) ? value : null;
        public bool OffsetLastTranslationOnSpawn => _world.EntityManager.HasComponentInternal<ProjectM.OffsetLastTranslationOnSpawn>(_entity);
        public ProjectM.Gameplay.Scripting.AbilityThrowTowardsEventHitTarget_DataServer? AbilityThrowTowardsEventHitTarget_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.AbilityThrowTowardsEventHitTarget_DataServer>(_entity, out var value) ? value : null;
        public bool GetOwnerFactionOnSpawn => _world.EntityManager.HasComponentInternal<ProjectM.GetOwnerFactionOnSpawn>(_entity);
        public ProjectM.VBloodUnit? VBloodUnit => _world.EntityManager.TryGetComponentDataInternal<ProjectM.VBloodUnit>(_entity, out var value) ? value : null;
        public ProjectM.ApplyBuffOnSpawn? ApplyBuffOnSpawn => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ApplyBuffOnSpawn>(_entity, out var value) ? value : null;
        public List<ProjectM.SpawnBuffElement> SpawnBuffElements => _world.EntityManager.GetBufferInternal<ProjectM.SpawnBuffElement>(_entity);
        public ProjectM.Behaviours.BehaviourTreeBlackboardSize? BehaviourTreeBlackboardSize => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Behaviours.BehaviourTreeBlackboardSize>(_entity, out var value) ? value : null;
        public ProjectM.Shared.StripEntityFromWorldExcept? StripEntityFromWorldExcept => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Shared.StripEntityFromWorldExcept>(_entity, out var value) ? value : null;
        public ProjectM.Behaviours.BehaviourTree? BehaviourTree => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Behaviours.BehaviourTree>(_entity, out var value) ? value : null;
        public List<ProjectM.Behaviours.BehaviourTreeBlackboardEntityFieldElement> BehaviourTreeBlackboardEntityFieldElements => _world.EntityManager.GetBufferInternal<ProjectM.Behaviours.BehaviourTreeBlackboardEntityFieldElement>(_entity);
        public ProjectM.RagdollForceSource? RagdollForceSource => _world.EntityManager.TryGetComponentDataInternal<ProjectM.RagdollForceSource>(_entity, out var value) ? value : null;
        public List<ProjectM.ApplyKnockbackOnGameplayEvent> ApplyKnockbackOnGameplayEvents => _world.EntityManager.GetBufferInternal<ProjectM.ApplyKnockbackOnGameplayEvent>(_entity);
        public ProjectM.TravelToTargetRadius? TravelToTargetRadius => _world.EntityManager.TryGetComponentDataInternal<ProjectM.TravelToTargetRadius>(_entity, out var value) ? value : null;
        public ProjectM.BloodConsumeSource? BloodConsumeSource => _world.EntityManager.TryGetComponentDataInternal<ProjectM.BloodConsumeSource>(_entity, out var value) ? value : null;
        public List<ProjectM.ModifyItemDurabilityOnGameplayEvent> ModifyItemDurabilityOnGameplayEvents => _world.EntityManager.GetBufferInternal<ProjectM.ModifyItemDurabilityOnGameplayEvent>(_entity);
        public ProjectM.ShapeshiftImpairBuff? ShapeshiftImpairBuff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ShapeshiftImpairBuff>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_ModifyAbilityCooldownOnGameplayEvent_DataServer? Script_ModifyAbilityCooldownOnGameplayEvent_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_ModifyAbilityCooldownOnGameplayEvent_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.EvenSpreadCluster_Tick_DataServer? EvenSpreadCluster_Tick_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.EvenSpreadCluster_Tick_DataServer>(_entity, out var value) ? value : null;
        public List<ProjectM.Gameplay.Scripting.Throw_Prefabs_To_Spawn> Throw_Prefabs_To_Spawn => _world.EntityManager.GetBufferInternal<ProjectM.Gameplay.Scripting.Throw_Prefabs_To_Spawn>(_entity);
        public ProjectM.Gameplay.Scripting.AbilityThrowMultipleWithSpreadOnTick_DataServer? AbilityThrowMultipleWithSpreadOnTick_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.AbilityThrowMultipleWithSpreadOnTick_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.GetTranslationOnUpdate? GetTranslationOnUpdate => _world.EntityManager.TryGetComponentDataInternal<ProjectM.GetTranslationOnUpdate>(_entity, out var value) ? value : null;
        public ProjectM.AbilityGroupState? AbilityGroupState => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AbilityGroupState>(_entity, out var value) ? value : null;
        public ProjectM.AbilityGroupInfo? AbilityGroupInfo => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AbilityGroupInfo>(_entity, out var value) ? value : null;
        public List<ProjectM.AbilityStateBuffer> AbilityStateBuffers => _world.EntityManager.GetBufferInternal<ProjectM.AbilityStateBuffer>(_entity);
        public List<ProjectM.AbilityGroupStartAbilitiesBuffer> AbilityGroupStartAbilitiesBuffers => _world.EntityManager.GetBufferInternal<ProjectM.AbilityGroupStartAbilitiesBuffer>(_entity);
        public List<ProjectM.CreateGameplayEventOnDistanceReached> CreateGameplayEventOnDistanceReacheds => _world.EntityManager.GetBufferInternal<ProjectM.CreateGameplayEventOnDistanceReached>(_entity);
        public bool UpdateAgeWhenDisabled => _world.EntityManager.HasComponentInternal<ProjectM.UpdateAgeWhenDisabled>(_entity);
        public bool UpdateLifeTimeWhenDisabled => _world.EntityManager.HasComponentInternal<ProjectM.UpdateLifeTimeWhenDisabled>(_entity);
        public List<ProjectM.Shared.SpellModPrefabGuid> SpellModPrefabGuids => _world.EntityManager.GetBufferInternal<ProjectM.Shared.SpellModPrefabGuid>(_entity);
        public List<ProjectM.TriggerCounterOnGameplayEvent> TriggerCounterOnGameplayEvents => _world.EntityManager.GetBufferInternal<ProjectM.TriggerCounterOnGameplayEvent>(_entity);
        public List<ProjectM.TriggerHitConsume> TriggerHitConsumes => _world.EntityManager.GetBufferInternal<ProjectM.TriggerHitConsume>(_entity);
        public bool AiPointOfInterest_BossCenterPosition => _world.EntityManager.HasComponentInternal<ProjectM.AiPointOfInterest_BossCenterPosition>(_entity);
        public ProjectM.SpawnPrefabOnDestroy? SpawnPrefabOnDestroy => _world.EntityManager.TryGetComponentDataInternal<ProjectM.SpawnPrefabOnDestroy>(_entity, out var value) ? value : null;
        public ProjectM.TargetAoE? TargetAoE => _world.EntityManager.TryGetComponentDataInternal<ProjectM.TargetAoE>(_entity, out var value) ? value : null;
        public List<ProjectM.TargetAOESequence> TargetAOESequences => _world.EntityManager.GetBufferInternal<ProjectM.TargetAOESequence>(_entity);
        public ProjectM.FadeToBlack? FadeToBlack => _world.EntityManager.TryGetComponentDataInternal<ProjectM.FadeToBlack>(_entity, out var value) ? value : null;
        public ProjectM.FadeToBlack_Manual? FadeToBlack_Manual => _world.EntityManager.TryGetComponentDataInternal<ProjectM.FadeToBlack_Manual>(_entity, out var value) ? value : null;
        public ProjectM.TeleportBuff? TeleportBuff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.TeleportBuff>(_entity, out var value) ? value : null;
        public ProjectM.ModifyStunCloth_Data? ModifyStunCloth_Data => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ModifyStunCloth_Data>(_entity, out var value) ? value : null;
        public ProjectM.TravelBuff? TravelBuff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.TravelBuff>(_entity, out var value) ? value : null;
        public ProjectM.TravelBuffSpawn? TravelBuffSpawn => _world.EntityManager.TryGetComponentDataInternal<ProjectM.TravelBuffSpawn>(_entity, out var value) ? value : null;
        public bool BlockFeedBuff => _world.EntityManager.HasComponentInternal<ProjectM.BlockFeedBuff>(_entity);
        public bool HideTargetHUD => _world.EntityManager.HasComponentInternal<ProjectM.HideTargetHUD>(_entity);
        public ProjectM.SetDynamicCollisionHardnessBuff? SetDynamicCollisionHardnessBuff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.SetDynamicCollisionHardnessBuff>(_entity, out var value) ? value : null;
        public ProjectM.AmplifyBuff? AmplifyBuff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AmplifyBuff>(_entity, out var value) ? value : null;
        public ProjectM.DestroyBuffOnDamageTaken? DestroyBuffOnDamageTaken => _world.EntityManager.TryGetComponentDataInternal<ProjectM.DestroyBuffOnDamageTaken>(_entity, out var value) ? value : null;
        public ProjectM.DiminishingReturn? DiminishingReturn => _world.EntityManager.TryGetComponentDataInternal<ProjectM.DiminishingReturn>(_entity, out var value) ? value : null;
        public List<ProjectM.DiminishingReturnElement> DiminishingReturnElements => _world.EntityManager.GetBufferInternal<ProjectM.DiminishingReturnElement>(_entity);
        public bool MoveTowardsRotationBuff => _world.EntityManager.HasComponentInternal<ProjectM.MoveTowardsRotationBuff>(_entity);
        public bool GallopBuff => _world.EntityManager.HasComponentInternal<ProjectM.GallopBuff>(_entity);
        public bool ModifyUnitStatBuff_IncreaseWithStacks => _world.EntityManager.HasComponentInternal<ProjectM.ModifyUnitStatBuff_IncreaseWithStacks>(_entity);
        public ProjectM.Sequencer.SpawnSequenceForEntity? SpawnSequenceForEntity => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Sequencer.SpawnSequenceForEntity>(_entity, out var value) ? value : null;
        public ProjectM.AbsorbBuff? AbsorbBuff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AbsorbBuff>(_entity, out var value) ? value : null;
        public ProjectM.MultiplyAbsorbCapBySpellPower? MultiplyAbsorbCapBySpellPower => _world.EntityManager.TryGetComponentDataInternal<ProjectM.MultiplyAbsorbCapBySpellPower>(_entity, out var value) ? value : null;
        public ProjectM.ModifyTargetHUDBuff? ModifyTargetHUDBuff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ModifyTargetHUDBuff>(_entity, out var value) ? value : null;
        public ProjectM.AttachToCharacterTransformBuff? AttachToCharacterTransformBuff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AttachToCharacterTransformBuff>(_entity, out var value) ? value : null;
        public ProjectM.ModifyBloodDrainBuff? ModifyBloodDrainBuff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ModifyBloodDrainBuff>(_entity, out var value) ? value : null;
        public ProjectM.AbilityOwner? AbilityOwner => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AbilityOwner>(_entity, out var value) ? value : null;
        public ProjectM.RespawnDelay? RespawnDelay => _world.EntityManager.TryGetComponentDataInternal<ProjectM.RespawnDelay>(_entity, out var value) ? value : null;
        public bool FadeOutFlyMoodBuff => _world.EntityManager.HasComponentInternal<ProjectM.FadeOutFlyMoodBuff>(_entity);
        public ProjectM.EmpowerBuff? EmpowerBuff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.EmpowerBuff>(_entity, out var value) ? value : null;
        public ProjectM.AmplifyStackModifier? AmplifyStackModifier => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AmplifyStackModifier>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_SilverDebuff_DataServer? Script_SilverDebuff_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_SilverDebuff_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.WeakenBuff? WeakenBuff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.WeakenBuff>(_entity, out var value) ? value : null;
        public ProjectM.DeathPvPTimer? DeathPvPTimer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.DeathPvPTimer>(_entity, out var value) ? value : null;
        public bool UserRemovableBuff => _world.EntityManager.HasComponentInternal<ProjectM.UserRemovableBuff>(_entity);
        public ProjectM.Equipment? Equipment => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Equipment>(_entity, out var value) ? value : null;
        public ProjectM.CustomizationFeatures? CustomizationFeatures => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CustomizationFeatures>(_entity, out var value) ? value : null;
        public List<ProjectM.EquipmentSetBuff> EquipmentSetBuffs => _world.EntityManager.GetBufferInternal<ProjectM.EquipmentSetBuff>(_entity);
        public ProjectM.DiminishingReturnBuff? DiminishingReturnBuff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.DiminishingReturnBuff>(_entity, out var value) ? value : null;
        public ProjectM.AdditionalInteractBuff? AdditionalInteractBuff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AdditionalInteractBuff>(_entity, out var value) ? value : null;
        public ProjectM.DestroyBuffOnMove? DestroyBuffOnMove => _world.EntityManager.TryGetComponentDataInternal<ProjectM.DestroyBuffOnMove>(_entity, out var value) ? value : null;
        public bool BlockEquipmentSwapping => _world.EntityManager.HasComponentInternal<ProjectM.BlockEquipmentSwapping>(_entity);
        public ProjectM.AllowJumpFromCliffsBuff? AllowJumpFromCliffsBuff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AllowJumpFromCliffsBuff>(_entity, out var value) ? value : null;
        public ProjectM.SchoolDebuffData? SchoolDebuffData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.SchoolDebuffData>(_entity, out var value) ? value : null;
        public ProjectM.SpawnSleepingBuff? SpawnSleepingBuff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.SpawnSleepingBuff>(_entity, out var value) ? value : null;
        public ProjectM.Network.NetworkedSettings? NetworkedSettings => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Network.NetworkedSettings>(_entity, out var value) ? value : null;
        public bool YieldResourceDisable => _world.EntityManager.HasComponentInternal<ProjectM.YieldResourceDisable>(_entity);
        public List<ProjectM.CreateGameplayEventsOnAbilityTrigger> CreateGameplayEventsOnAbilityTriggers => _world.EntityManager.GetBufferInternal<ProjectM.CreateGameplayEventsOnAbilityTrigger>(_entity);
        public List<ProjectM.CreateGameplayEventOnBehaviourStateChanged> CreateGameplayEventOnBehaviourStateChangeds => _world.EntityManager.GetBufferInternal<ProjectM.CreateGameplayEventOnBehaviourStateChanged>(_entity);
        public ProjectM.ReplaceAbilityOnSlotData? ReplaceAbilityOnSlotData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ReplaceAbilityOnSlotData>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_DamageZone_SingleTarget_Shared? Script_DamageZone_SingleTarget_Shared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_DamageZone_SingleTarget_Shared>(_entity, out var value) ? value : null;
        public List<ProjectM.Gameplay.Scripting.Script_DamageZone_SingleTarget_HitTarget> Script_DamageZone_SingleTarget_HitTarget => _world.EntityManager.GetBufferInternal<ProjectM.Gameplay.Scripting.Script_DamageZone_SingleTarget_HitTarget>(_entity);
        public List<ProjectM.ReplaceAbilityOnSlotBuff> ReplaceAbilityOnSlotBuffs => _world.EntityManager.GetBufferInternal<ProjectM.ReplaceAbilityOnSlotBuff>(_entity);
        public List<ProjectM.Gameplay.Scripting.Script_DamageZone_SingleTarget_HitConditions> Script_DamageZone_SingleTarget_HitConditions => _world.EntityManager.GetBufferInternal<ProjectM.Gameplay.Scripting.Script_DamageZone_SingleTarget_HitConditions>(_entity);
        public bool ScriptUpdate => _world.EntityManager.HasComponentInternal<ProjectM.Scripting.ScriptUpdate>(_entity);
        public ProjectM.LimitAbilityPriorityBuff? LimitAbilityPriorityBuff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.LimitAbilityPriorityBuff>(_entity, out var value) ? value : null;
        public List<ProjectM.Shared.BranchThroughGameplayEvent> BranchThroughGameplayEvents => _world.EntityManager.GetBufferInternal<ProjectM.Shared.BranchThroughGameplayEvent>(_entity);
        public ProjectM.Gameplay.Scripting.AbilityProjectileFanOnTick_DataServer? AbilityProjectileFanOnTick_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.AbilityProjectileFanOnTick_DataServer>(_entity, out var value) ? value : null;
        public List<ProjectM.CreateGameplayEventOnItemEquipped> CreateGameplayEventOnItemEquippeds => _world.EntityManager.GetBufferInternal<ProjectM.CreateGameplayEventOnItemEquipped>(_entity);
        public bool PreventDisableBuff => _world.EntityManager.HasComponentInternal<ProjectM.PreventDisableBuff>(_entity);
        public ProjectM.Projectile? Projectile => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Projectile>(_entity, out var value) ? value : null;
        public ProjectM.ProjectileDestroyData? ProjectileDestroyData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ProjectileDestroyData>(_entity, out var value) ? value : null;
        public ProjectM.SpellMovement? SpellMovement => _world.EntityManager.TryGetComponentDataInternal<ProjectM.SpellMovement>(_entity, out var value) ? value : null;
        public List<ProjectM.DropFromTablesOnGameplayEvent> DropFromTablesOnGameplayEvents => _world.EntityManager.GetBufferInternal<ProjectM.DropFromTablesOnGameplayEvent>(_entity);
        public ProjectM.ProjectileSnapToHeight? ProjectileSnapToHeight => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ProjectileSnapToHeight>(_entity, out var value) ? value : null;
        public ProjectM.CopySpellModSetFromAbilitySlot? CopySpellModSetFromAbilitySlot => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CopySpellModSetFromAbilitySlot>(_entity, out var value) ? value : null;
        public List<ProjectM.CreateGameplayEventOnLeaveCliff> CreateGameplayEventOnLeaveCliffs => _world.EntityManager.GetBufferInternal<ProjectM.CreateGameplayEventOnLeaveCliff>(_entity);
        public ProjectM.TravelToTarget? TravelToTarget => _world.EntityManager.TryGetComponentDataInternal<ProjectM.TravelToTarget>(_entity, out var value) ? value : null;
        public List<ProjectM.Shared.IterateThroughGameplayEvent> IterateThroughGameplayEvents => _world.EntityManager.GetBufferInternal<ProjectM.Shared.IterateThroughGameplayEvent>(_entity);
        public ProjectM.Gameplay.Scripting.Script_ProfessorProjectileOnGameplayEvent_DataServer? Script_ProfessorProjectileOnGameplayEvent_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_ProfessorProjectileOnGameplayEvent_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.AbsorbCapStackModifier? AbsorbCapStackModifier => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AbsorbCapStackModifier>(_entity, out var value) ? value : null;
        public List<ProjectM.CreateGameplayEventOnKill> CreateGameplayEventOnKills => _world.EntityManager.GetBufferInternal<ProjectM.CreateGameplayEventOnKill>(_entity);
        public List<ProjectM.AdjustCurrentChargesOnGameplayEvent> AdjustCurrentChargesOnGameplayEvents => _world.EntityManager.GetBufferInternal<ProjectM.AdjustCurrentChargesOnGameplayEvent>(_entity);
        public List<ProjectM.LifeLeechOnGameplayEvent> LifeLeechOnGameplayEvents => _world.EntityManager.GetBufferInternal<ProjectM.LifeLeechOnGameplayEvent>(_entity);
        public ProjectM.VBloodAbilityReplaceBuff? VBloodAbilityReplaceBuff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.VBloodAbilityReplaceBuff>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_BranchOnRandomGameplayEventData? Script_BranchOnRandomGameplayEventData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_BranchOnRandomGameplayEventData>(_entity, out var value) ? value : null;
        public ProjectM.ImprisonedBuff? ImprisonedBuff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ImprisonedBuff>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_SCTOnEvent_DataServer? Script_SCTOnEvent_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_SCTOnEvent_DataServer>(_entity, out var value) ? value : null;
        public bool YieldResourceSource => _world.EntityManager.HasComponentInternal<ProjectM.YieldResourceSource>(_entity);
        public bool GiveAchievementOnHit => _world.EntityManager.HasComponentInternal<ProjectM.GiveAchievementOnHit>(_entity);
        public List<ProjectM.StopSpellMovementOnGameplayEvent> StopSpellMovementOnGameplayEvents => _world.EntityManager.GetBufferInternal<ProjectM.StopSpellMovementOnGameplayEvent>(_entity);
        public ProjectM.IncreaseAbsorbCapByMaxHealth? IncreaseAbsorbCapByMaxHealth => _world.EntityManager.TryGetComponentDataInternal<ProjectM.IncreaseAbsorbCapByMaxHealth>(_entity, out var value) ? value : null;
        public bool FreezeHybridAnimationData => _world.EntityManager.HasComponentInternal<ProjectM.FreezeHybridAnimationData>(_entity);
        public bool TransmogModeBuff => _world.EntityManager.HasComponentInternal<ProjectM.Transmog.TransmogModeBuff>(_entity);
        public List<ProjectM.GenerateAggroOnGameplayEvent> GenerateAggroOnGameplayEvents => _world.EntityManager.GetBufferInternal<ProjectM.GenerateAggroOnGameplayEvent>(_entity);
        public List<ProjectM.AdjustLifetimeOnGameplayEvent> AdjustLifetimeOnGameplayEvents => _world.EntityManager.GetBufferInternal<ProjectM.AdjustLifetimeOnGameplayEvent>(_entity);
        public ProjectM.Minion? Minion => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Minion>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_ApplyExclusiveSiegeBuff_DataServer? Script_ApplyExclusiveSiegeBuff_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_ApplyExclusiveSiegeBuff_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.OffsetTranslationOnSpawnBlockerSettings? OffsetTranslationOnSpawnBlockerSettings => _world.EntityManager.TryGetComponentDataInternal<ProjectM.OffsetTranslationOnSpawnBlockerSettings>(_entity, out var value) ? value : null;
        public ProjectM.BlockHealBuff? BlockHealBuff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.BlockHealBuff>(_entity, out var value) ? value : null;
        public ProjectM.ModifyTeamBuff? ModifyTeamBuff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ModifyTeamBuff>(_entity, out var value) ? value : null;
        public bool FollowBuffOwner => _world.EntityManager.HasComponentInternal<ProjectM.FollowBuffOwner>(_entity);
        public ProjectM.Gameplay.Scripting.Script_Fisherman_DropItem_Data? Script_Fisherman_DropItem_Data => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_Fisherman_DropItem_Data>(_entity, out var value) ? value : null;
        public List<ProjectM.ProgressionBookRecipeElement> ProgressionBookRecipeElements => _world.EntityManager.GetBufferInternal<ProjectM.ProgressionBookRecipeElement>(_entity);
        public List<ProjectM.ProgressionBookTechElement> ProgressionBookTechElements => _world.EntityManager.GetBufferInternal<ProjectM.ProgressionBookTechElement>(_entity);
        public List<ProjectM.ProgressionBookBlueprintElement> ProgressionBookBlueprintElements => _world.EntityManager.GetBufferInternal<ProjectM.ProgressionBookBlueprintElement>(_entity);
        public bool ProgressionGain => _world.EntityManager.HasComponentInternal<ProjectM.ProgressionGain>(_entity);
        public bool ModifyObstacleFadeoutBuff => _world.EntityManager.HasComponentInternal<ProjectM.ModifyObstacleFadeoutBuff>(_entity);
        public ProjectM.Gameplay.Scripting.Script_RemoteImprison_DataServer? Script_RemoteImprison_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_RemoteImprison_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_StormPolarityShift_DataServer? Script_StormPolarityShift_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_StormPolarityShift_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_SubdueMount_DataServer? Script_SubdueMount_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_SubdueMount_DataServer>(_entity, out var value) ? value : null;
        public List<ProjectM.ChangeAbilityOnGameplayEvent> ChangeAbilityOnGameplayEvents => _world.EntityManager.GetBufferInternal<ProjectM.ChangeAbilityOnGameplayEvent>(_entity);
        public bool HolyAreaDebuff => _world.EntityManager.HasComponentInternal<ProjectM.HolyAreaDebuff>(_entity);
        public List<ProjectM.AdjustCurrentCooldownOnGameplayEvent> AdjustCurrentCooldownOnGameplayEvents => _world.EntityManager.GetBufferInternal<ProjectM.AdjustCurrentCooldownOnGameplayEvent>(_entity);
        public List<ProjectM.ChangeEnergyOnGameplayEvent> ChangeEnergyOnGameplayEvents => _world.EntityManager.GetBufferInternal<ProjectM.ChangeEnergyOnGameplayEvent>(_entity);
        public ProjectM.MovementSpeedStackModifier? MovementSpeedStackModifier => _world.EntityManager.TryGetComponentDataInternal<ProjectM.MovementSpeedStackModifier>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_ModifySpellAbilityCooldownOnGameplayEvent_DataServer? Script_ModifySpellAbilityCooldownOnGameplayEvent_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_ModifySpellAbilityCooldownOnGameplayEvent_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.AbilityBar_Server? AbilityBar_Server => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AbilityBar_Server>(_entity, out var value) ? value : null;
        public ProjectM.AbilityBar_Shared? AbilityBar_Shared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AbilityBar_Shared>(_entity, out var value) ? value : null;
        public ProjectM.Follower? Follower => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Follower>(_entity, out var value) ? value : null;
        public ProjectM.AiMove_Server? AiMove_Server => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AiMove_Server>(_entity, out var value) ? value : null;
        public ProjectM.Behaviours.BehaviourTreeInstance? BehaviourTreeInstance => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Behaviours.BehaviourTreeInstance>(_entity, out var value) ? value : null;
        public ProjectM.CastOptionsUser? CastOptionsUser => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CastOptionsUser>(_entity, out var value) ? value : null;
        public ProjectM.Height? Height => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Height>(_entity, out var value) ? value : null;
        public ProjectM.Torture? Torture => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Torture>(_entity, out var value) ? value : null;
        public ProjectM.YieldEssenceOnDeath? YieldEssenceOnDeath => _world.EntityManager.TryGetComponentDataInternal<ProjectM.YieldEssenceOnDeath>(_entity, out var value) ? value : null;
        public ProjectM.IsSpellControlled? IsSpellControlled => _world.EntityManager.TryGetComponentDataInternal<ProjectM.IsSpellControlled>(_entity, out var value) ? value : null;
        public ProjectM.ServantConvertable? ServantConvertable => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ServantConvertable>(_entity, out var value) ? value : null;
        public ProjectM.Network.NetworkInterpolated_Shared? NetworkInterpolated_Shared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Network.NetworkInterpolated_Shared>(_entity, out var value) ? value : null;
        public ProjectM.AbilityBarInitializationState? AbilityBarInitializationState => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AbilityBarInitializationState>(_entity, out var value) ? value : null;
        public ProjectM.Aggroable? Aggroable => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Aggroable>(_entity, out var value) ? value : null;
        public ProjectM.AiPrioritization_Data? AiPrioritization_Data => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AiPrioritization_Data>(_entity, out var value) ? value : null;
        public ProjectM.AiPrioritization_State? AiPrioritization_State => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AiPrioritization_State>(_entity, out var value) ? value : null;
        public ProjectM.AiMoveSpeeds? AiMoveSpeeds => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AiMoveSpeeds>(_entity, out var value) ? value : null;
        public ProjectM.CastHistoryData? CastHistoryData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CastHistoryData>(_entity, out var value) ? value : null;
        public ProjectM.Hideable? Hideable => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Hideable>(_entity, out var value) ? value : null;
        public ProjectM.Stealthable? Stealthable => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Stealthable>(_entity, out var value) ? value : null;
        public ProjectM.Movement? Movement => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Movement>(_entity, out var value) ? value : null;
        public ProjectM.MapCollision? MapCollision => _world.EntityManager.TryGetComponentDataInternal<ProjectM.MapCollision>(_entity, out var value) ? value : null;
        public ProjectM.SpawnTransform? SpawnTransform => _world.EntityManager.TryGetComponentDataInternal<ProjectM.SpawnTransform>(_entity, out var value) ? value : null;
        public ProjectM.UnitRespawnTime? UnitRespawnTime => _world.EntityManager.TryGetComponentDataInternal<ProjectM.UnitRespawnTime>(_entity, out var value) ? value : null;
        public ProjectM.WoundedConstants? WoundedConstants => _world.EntityManager.TryGetComponentDataInternal<ProjectM.WoundedConstants>(_entity, out var value) ? value : null;
        public ProjectM.Vision? Vision => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Vision>(_entity, out var value) ? value : null;
        public ProjectM.AiMove_Shared? AiMove_Shared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AiMove_Shared>(_entity, out var value) ? value : null;
        public ProjectM.UnitSpawnData? UnitSpawnData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.UnitSpawnData>(_entity, out var value) ? value : null;
        public ProjectM.GenericCombatMovementData? GenericCombatMovementData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.GenericCombatMovementData>(_entity, out var value) ? value : null;
        public ProjectM.MiscAiGameplayData? MiscAiGameplayData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.MiscAiGameplayData>(_entity, out var value) ? value : null;
        public ProjectM.IsMinion? IsMinion => _world.EntityManager.TryGetComponentDataInternal<ProjectM.IsMinion>(_entity, out var value) ? value : null;
        public ProjectM.Network.NetworkedTimeout? NetworkedTimeout => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Network.NetworkedTimeout>(_entity, out var value) ? value : null;
        public ProjectM.Behaviours.BehaviourTreeBinding? BehaviourTreeBinding => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Behaviours.BehaviourTreeBinding>(_entity, out var value) ? value : null;
        public ProjectM.Behaviours.BehaviourTreeState? BehaviourTreeState => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Behaviours.BehaviourTreeState>(_entity, out var value) ? value : null;
        public ProjectM.Behaviours.BehaviourTreeStateMetadata? BehaviourTreeStateMetadata => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Behaviours.BehaviourTreeStateMetadata>(_entity, out var value) ? value : null;
        public ProjectM.AiDebugDraw? AiDebugDraw => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AiDebugDraw>(_entity, out var value) ? value : null;
        public List<ProjectM.AbilityGroupSlotBuffer> AbilityGroupSlotBuffers => _world.EntityManager.GetBufferInternal<ProjectM.AbilityGroupSlotBuffer>(_entity);
        public List<ProjectM.EntitiesInView_Server> EntitiesInView_Server => _world.EntityManager.GetBufferInternal<ProjectM.EntitiesInView_Server>(_entity);
        public List<ProjectM.Behaviours.BehaviourTreeStateActiveBuffsBuffer> BehaviourTreeStateActiveBuffsBuffers => _world.EntityManager.GetBufferInternal<ProjectM.Behaviours.BehaviourTreeStateActiveBuffsBuffer>(_entity);
        public List<ProjectM.CastHistoryBufferElement> CastHistoryBufferElements => _world.EntityManager.GetBufferInternal<ProjectM.CastHistoryBufferElement>(_entity);
        public List<ProjectM.Behaviours.BehaviourTreeStateBuffsBuffer> BehaviourTreeStateBuffsBuffers => _world.EntityManager.GetBufferInternal<ProjectM.Behaviours.BehaviourTreeStateBuffsBuffer>(_entity);
        public List<ProjectM.Behaviours.BehaviourTreeNodeInstanceElement> BehaviourTreeNodeInstanceElements => _world.EntityManager.GetBufferInternal<ProjectM.Behaviours.BehaviourTreeNodeInstanceElement>(_entity);
        public List<Stunlock.Sequencer.BlackboardElement> BlackboardElements => _world.EntityManager.GetBufferInternal<Stunlock.Sequencer.BlackboardElement>(_entity);
        public bool SnapToHeight => _world.EntityManager.HasComponentInternal<ProjectM.SnapToHeight>(_entity);
        public bool HideOutsideVision => _world.EntityManager.HasComponentInternal<ProjectM.HideOutsideVision>(_entity);
        public bool MoveEntity => _world.EntityManager.HasComponentInternal<ProjectM.MoveEntity>(_entity);
        public List<ProjectM.CreateGameplayEventsOnHitConsume_SpellsConsumed> CreateGameplayEventsOnHitConsume_SpellsConsumed => _world.EntityManager.GetBufferInternal<ProjectM.CreateGameplayEventsOnHitConsume_SpellsConsumed>(_entity);
        public List<ProjectM.CreateGameplayEventsOnHitConsume> CreateGameplayEventsOnHitConsumes => _world.EntityManager.GetBufferInternal<ProjectM.CreateGameplayEventsOnHitConsume>(_entity);
        public ProjectM.GetOwnerPrimaryAggroTargetOnSpawn? GetOwnerPrimaryAggroTargetOnSpawn => _world.EntityManager.TryGetComponentDataInternal<ProjectM.GetOwnerPrimaryAggroTargetOnSpawn>(_entity, out var value) ? value : null;
        public ProjectM.CanPreventDisableWhenNoPlayersInRange? CanPreventDisableWhenNoPlayersInRange => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CanPreventDisableWhenNoPlayersInRange>(_entity, out var value) ? value : null;
        public bool CharmSource => _world.EntityManager.HasComponentInternal<ProjectM.CharmSource>(_entity);
        public ProjectM.MinionMaster? MinionMaster => _world.EntityManager.TryGetComponentDataInternal<ProjectM.MinionMaster>(_entity, out var value) ? value : null;
        public ProjectM.CanFly? CanFly => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CanFly>(_entity, out var value) ? value : null;
        public ProjectM.Shared.FallToHeight? FallToHeight => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Shared.FallToHeight>(_entity, out var value) ? value : null;
        public List<ProjectM.MaxMinionsPerPlayerElement> MaxMinionsPerPlayerElements => _world.EntityManager.GetBufferInternal<ProjectM.MaxMinionsPerPlayerElement>(_entity);
        public bool VisibleFromFlight => _world.EntityManager.HasComponentInternal<ProjectM.VisibleFromFlight>(_entity);
        public ProjectM.AimRotationParameters? AimRotationParameters => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AimRotationParameters>(_entity, out var value) ? value : null;
        public ProjectM.LegDirection_Server? LegDirection_Server => _world.EntityManager.TryGetComponentDataInternal<ProjectM.LegDirection_Server>(_entity, out var value) ? value : null;
        public ProjectM.LegDirection_Shared? LegDirection_Shared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.LegDirection_Shared>(_entity, out var value) ? value : null;
        public ProjectM.Mountable? Mountable => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Mountable>(_entity, out var value) ? value : null;
        public ProjectM.FeedableInventory? FeedableInventory => _world.EntityManager.TryGetComponentDataInternal<ProjectM.FeedableInventory>(_entity, out var value) ? value : null;
        public ProjectM.AiPointOfInterestTarget? AiPointOfInterestTarget => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AiPointOfInterestTarget>(_entity, out var value) ? value : null;
        public bool DropTableOnSalvageDestroy => _world.EntityManager.HasComponentInternal<ProjectM.Shared.DropTableOnSalvageDestroy>(_entity);
        public ProjectM.CombatMusicSource_Server? CombatMusicSource_Server => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CombatMusicSource_Server>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.LaunchProjectileTowardsTargetOnGameplayEvent_DataServer? LaunchProjectileTowardsTargetOnGameplayEvent_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.LaunchProjectileTowardsTargetOnGameplayEvent_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.UseBossCenterPositionAsPreCombatPosition? UseBossCenterPositionAsPreCombatPosition => _world.EntityManager.TryGetComponentDataInternal<ProjectM.UseBossCenterPositionAsPreCombatPosition>(_entity, out var value) ? value : null;
        public ProjectM.VBloodConsumeSource? VBloodConsumeSource => _world.EntityManager.TryGetComponentDataInternal<ProjectM.VBloodConsumeSource>(_entity, out var value) ? value : null;
        public List<ProjectM.VBloodUnlockTechBuffer> VBloodUnlockTechBuffers => _world.EntityManager.GetBufferInternal<ProjectM.VBloodUnlockTechBuffer>(_entity);
        public ProjectM.AbilityChargesState? AbilityChargesState => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AbilityChargesState>(_entity, out var value) ? value : null;
        public ProjectM.AbilityChargesData? AbilityChargesData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AbilityChargesData>(_entity, out var value) ? value : null;
        public ProjectM.Shared.DamageReductionPerTarget? DamageReductionPerTarget => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Shared.DamageReductionPerTarget>(_entity, out var value) ? value : null;
        public List<ProjectM.Shared.DamageReductionPerTargetElement> DamageReductionPerTargetElements => _world.EntityManager.GetBufferInternal<ProjectM.Shared.DamageReductionPerTargetElement>(_entity);
        public ProjectM.AbilityGroupResetComboState? AbilityGroupResetComboState => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AbilityGroupResetComboState>(_entity, out var value) ? value : null;
        public ProjectM.AbilityGroupComboState? AbilityGroupComboState => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AbilityGroupComboState>(_entity, out var value) ? value : null;
        public ProjectM.Shared.IgnoreHitsPerTarget? IgnoreHitsPerTarget => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Shared.IgnoreHitsPerTarget>(_entity, out var value) ? value : null;
        public List<ProjectM.Shared.IgnoreHitsPerTargetElement> IgnoreHitsPerTargetElements => _world.EntityManager.GetBufferInternal<ProjectM.Shared.IgnoreHitsPerTargetElement>(_entity);
        public bool VBloodEmoteData => _world.EntityManager.HasComponentInternal<ProjectM.VBloodEmoteData>(_entity);
        public ProjectM.Shared.AbilitySpellModItem? AbilitySpellModItem => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Shared.AbilitySpellModItem>(_entity, out var value) ? value : null;
        public ProjectM.Shared.AbilityJewelTemplate? AbilityJewelTemplate => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Shared.AbilityJewelTemplate>(_entity, out var value) ? value : null;
        public ProjectM.VBloodAbilityData? VBloodAbilityData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.VBloodAbilityData>(_entity, out var value) ? value : null;
        public ProjectM.VBloodShapeshiftData? VBloodShapeshiftData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.VBloodShapeshiftData>(_entity, out var value) ? value : null;
        public ProjectM.MagicSourceDurabilityRequirement? MagicSourceDurabilityRequirement => _world.EntityManager.TryGetComponentDataInternal<ProjectM.MagicSourceDurabilityRequirement>(_entity, out var value) ? value : null;
        public ProjectM.AbilityGroupConsumeItemOnCast? AbilityGroupConsumeItemOnCast => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AbilityGroupConsumeItemOnCast>(_entity, out var value) ? value : null;
        public ProjectM.StoredBloodAbility? StoredBloodAbility => _world.EntityManager.TryGetComponentDataInternal<ProjectM.StoredBloodAbility>(_entity, out var value) ? value : null;
        public ProjectM.RepairAbility? RepairAbility => _world.EntityManager.TryGetComponentDataInternal<ProjectM.RepairAbility>(_entity, out var value) ? value : null;
        public ProjectM.DismantleAbility? DismantleAbility => _world.EntityManager.TryGetComponentDataInternal<ProjectM.DismantleAbility>(_entity, out var value) ? value : null;
        public bool AbilityChargeResetOnUse => _world.EntityManager.HasComponentInternal<ProjectM.Gameplay.Scripting.AbilityChargeResetOnUse>(_entity);
        public ProjectM.PlaceTilemodelAbility? PlaceTilemodelAbility => _world.EntityManager.TryGetComponentDataInternal<ProjectM.PlaceTilemodelAbility>(_entity, out var value) ? value : null;
        public ProjectM.ServantConnectedCoffin? ServantConnectedCoffin => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ServantConnectedCoffin>(_entity, out var value) ? value : null;
        public ProjectM.ServantEquipment? ServantEquipment => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ServantEquipment>(_entity, out var value) ? value : null;
        public ProjectM.ServantTypeData? ServantTypeData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ServantTypeData>(_entity, out var value) ? value : null;
        public ProjectM.NPCServantColorIndex? NPCServantColorIndex => _world.EntityManager.TryGetComponentDataInternal<ProjectM.NPCServantColorIndex>(_entity, out var value) ? value : null;
        public ProjectM.ServantHasItemsInInventory? ServantHasItemsInInventory => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ServantHasItemsInInventory>(_entity, out var value) ? value : null;
        public ProjectM.ServantData? ServantData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ServantData>(_entity, out var value) ? value : null;
        public List<ProjectM.PerksBuffer> PerksBuffers => _world.EntityManager.GetBufferInternal<ProjectM.PerksBuffer>(_entity);
        public List<ProjectM.ServantConvertRequirement> ServantConvertRequirements => _world.EntityManager.GetBufferInternal<ProjectM.ServantConvertRequirement>(_entity);
        public ProjectM.Trader? Trader => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Trader>(_entity, out var value) ? value : null;
        public List<ProjectM.TraderCollectionGenerator> TraderCollectionGenerators => _world.EntityManager.GetBufferInternal<ProjectM.TraderCollectionGenerator>(_entity);
        public List<ProjectM.TraderEntry> TraderEntries => _world.EntityManager.GetBufferInternal<ProjectM.TraderEntry>(_entity);
        public List<ProjectM.TradeCost> TradeCosts => _world.EntityManager.GetBufferInternal<ProjectM.TradeCost>(_entity);
        public List<ProjectM.TradeOutput> TradeOutputs => _world.EntityManager.GetBufferInternal<ProjectM.TradeOutput>(_entity);
        public ProjectM.Gameplay.Scripting.Script_Buff_ModifyDynamicCollision_DataServer? Script_Buff_ModifyDynamicCollision_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_Buff_ModifyDynamicCollision_DataServer>(_entity, out var value) ? value : null;
        public bool InCombatBuff => _world.EntityManager.HasComponentInternal<ProjectM.InCombatBuff>(_entity);
        public bool UseCombatAnimationState => _world.EntityManager.HasComponentInternal<ProjectM.UseCombatAnimationState>(_entity);
        public ProjectM.Gameplay.Scripting.Script_Buff_GenerateAggro_DataServer? Script_Buff_GenerateAggro_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_Buff_GenerateAggro_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_CreateGameplayEventOnAreaEnterExit_DataServer? Script_CreateGameplayEventOnAreaEnterExit_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_CreateGameplayEventOnAreaEnterExit_DataServer>(_entity, out var value) ? value : null;
        public List<ProjectM.Gameplay.Scripting.Script_CreateGameplayEventOnAreaEnterExit_Entry> Script_CreateGameplayEventOnAreaEnterExit_Entry => _world.EntityManager.GetBufferInternal<ProjectM.Gameplay.Scripting.Script_CreateGameplayEventOnAreaEnterExit_Entry>(_entity);
        public ProjectM.Gameplay.Scripting.Script_CreateGameplayEventOnDamageDealtToEntityCategory_DataServer? Script_CreateGameplayEventOnDamageDealtToEntityCategory_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_CreateGameplayEventOnDamageDealtToEntityCategory_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_Buff_ModifyAggroFactor_DataServer? Script_Buff_ModifyAggroFactor_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_Buff_ModifyAggroFactor_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_Buff_Stealth_DataServer? Script_Buff_Stealth_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_Buff_Stealth_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.InsideBuff? InsideBuff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.InsideBuff>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_Buff_AggroRangeFactor_DataShared? Script_Buff_AggroRangeFactor_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_Buff_AggroRangeFactor_DataShared>(_entity, out var value) ? value : null;
        public bool Hideable_CopyFromAttachParent => _world.EntityManager.HasComponentInternal<ProjectM.Hideable_CopyFromAttachParent>(_entity);
        public bool DownedBuff => _world.EntityManager.HasComponentInternal<ProjectM.DownedBuff>(_entity);
        public ProjectM.Gameplay.Scripting.Script_Modify_Combat_Movement_Buff_Data? Script_Modify_Combat_Movement_Buff_Data => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_Modify_Combat_Movement_Buff_Data>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_Modify_Combat_Movement_Buff_State? Script_Modify_Combat_Movement_Buff_State => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_Modify_Combat_Movement_Buff_State>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_Buff_IgnoresPathfindingLineOfSight_DataServer? Script_Buff_IgnoresPathfindingLineOfSight_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_Buff_IgnoresPathfindingLineOfSight_DataServer>(_entity, out var value) ? value : null;
        public bool DamagedEditableTile => _world.EntityManager.HasComponentInternal<ProjectM.DamagedEditableTile>(_entity);
        public ProjectM.Gameplay.Scripting.Script_Buff_ModifyBuffResistances_DataServer? Script_Buff_ModifyBuffResistances_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_Buff_ModifyBuffResistances_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_GarlicFeverDebuff_DataServer? Script_GarlicFeverDebuff_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_GarlicFeverDebuff_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_Buff_PvPProtection_DataShared? Script_Buff_PvPProtection_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_Buff_PvPProtection_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.AdjustFlyHeightBuff? AdjustFlyHeightBuff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AdjustFlyHeightBuff>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_Wounded_DataShared? Script_Wounded_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_Wounded_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_Buff_Spellblock_DataServer? Script_Buff_Spellblock_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_Buff_Spellblock_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.BloodBuff_PrimaryAttackLifeLeech_DataShared? BloodBuff_PrimaryAttackLifeLeech_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.BloodBuff_PrimaryAttackLifeLeech_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.BloodBuff_Brute_ArmorLevelBonus_DataShared? BloodBuff_Brute_ArmorLevelBonus_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.BloodBuff_Brute_ArmorLevelBonus_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.BloodBuff_Brute_RecoverOnKill_DataShared? BloodBuff_Brute_RecoverOnKill_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.BloodBuff_Brute_RecoverOnKill_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_Buff_TrueForm_DataServer? Script_Buff_TrueForm_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_Buff_TrueForm_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.BloodBuff_PhysCritChanceBonus_DataShared? BloodBuff_PhysCritChanceBonus_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.BloodBuff_PhysCritChanceBonus_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.BloodBuff_Rogue_SpeedBonus_DataShared? BloodBuff_Rogue_SpeedBonus_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.BloodBuff_Rogue_SpeedBonus_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.BloodBuff_ReducedTravelCooldown_DataShared? BloodBuff_ReducedTravelCooldown_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.BloodBuff_ReducedTravelCooldown_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.BloodBuff_Creature_SpeedBonus_DataShared? BloodBuff_Creature_SpeedBonus_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.BloodBuff_Creature_SpeedBonus_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.BloodBuff_SunResistance_DataShared? BloodBuff_SunResistance_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.BloodBuff_SunResistance_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.BloodBuff_Warrior_DamageReduction_DataShared? BloodBuff_Warrior_DamageReduction_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.BloodBuff_Warrior_DamageReduction_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.BloodBuff_HealthRegeneration_DataShared? BloodBuff_HealthRegeneration_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.BloodBuff_HealthRegeneration_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.BloodBuff_BloodConsumption_DataShared? BloodBuff_BloodConsumption_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.BloodBuff_BloodConsumption_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.BloodBuff_AllResistance_DataShared? BloodBuff_AllResistance_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.BloodBuff_AllResistance_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.BloodBuff_Scholar_SpellPowerBonus_DataShared? BloodBuff_Scholar_SpellPowerBonus_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.BloodBuff_Scholar_SpellPowerBonus_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.BloodBuff_Scholar_SpellCooldown_DataShared? BloodBuff_Scholar_SpellCooldown_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.BloodBuff_Scholar_SpellCooldown_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.BloodBuff_SpellLifeLeech_DataShared? BloodBuff_SpellLifeLeech_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.BloodBuff_SpellLifeLeech_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.BloodBuff_Warrior_PhysDamageBonus_DataShared? BloodBuff_Warrior_PhysDamageBonus_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.BloodBuff_Warrior_PhysDamageBonus_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.BloodBuff_Warrior_WeaponCooldown_DataShared? BloodBuff_Warrior_WeaponCooldown_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.BloodBuff_Warrior_WeaponCooldown_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.BloodBuffScript_FirstStrike? BloodBuffScript_FirstStrike => _world.EntityManager.TryGetComponentDataInternal<ProjectM.BloodBuffScript_FirstStrike>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.BloodBuff_DamageReduction_DataShared? BloodBuff_DamageReduction_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.BloodBuff_DamageReduction_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.BloodBuff_Worker_IncreaseYield_DataShared? BloodBuff_Worker_IncreaseYield_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.BloodBuff_Worker_IncreaseYield_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.BloodBuff_Worker_ResourceDamageBonus_DataShared? BloodBuff_Worker_ResourceDamageBonus_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.BloodBuff_Worker_ResourceDamageBonus_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.BloodBuff_Worker_Gallop_DataShared? BloodBuff_Worker_Gallop_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.BloodBuff_Worker_Gallop_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.BloodBuff_Draculin_SpeedBonus_DataShared? BloodBuff_Draculin_SpeedBonus_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.BloodBuff_Draculin_SpeedBonus_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.TheMonsterGeneratorActiveBuff? TheMonsterGeneratorActiveBuff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.TheMonsterGeneratorActiveBuff>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_Buff_StopPatrol_DataServer? Script_Buff_StopPatrol_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_Buff_StopPatrol_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.BloodBuff_Brute_PhysLifeLeech_DataShared? BloodBuff_Brute_PhysLifeLeech_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.BloodBuff_Brute_PhysLifeLeech_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_BloodBuff_CCReduction_DataShared? Script_BloodBuff_CCReduction_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_BloodBuff_CCReduction_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.BloodBuff_CriticalStrikeOnNextAttack_DataShared? BloodBuff_CriticalStrikeOnNextAttack_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.BloodBuff_CriticalStrikeOnNextAttack_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.BloodBuff_Rogue_AttackSpeedBonus_DataShared? BloodBuff_Rogue_AttackSpeedBonus_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.BloodBuff_Rogue_AttackSpeedBonus_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.BloodBuff_Scholar_ManaRegenBonus_DataShared? BloodBuff_Scholar_ManaRegenBonus_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.BloodBuff_Scholar_ManaRegenBonus_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.BloodBuff_Scholar_MaxManaBonus_DataShared? BloodBuff_Scholar_MaxManaBonus_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.BloodBuff_Scholar_MaxManaBonus_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.BloodBuff_Scholar_SpellCritChanceBonus_DataShared? BloodBuff_Scholar_SpellCritChanceBonus_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.BloodBuff_Scholar_SpellCritChanceBonus_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.BloodBuff_Scholar_SpellLevelBonus_DataShared? BloodBuff_Scholar_SpellLevelBonus_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.BloodBuff_Scholar_SpellLevelBonus_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.BloodBuff_Warrior_PhysCritDamageBonus_DataShared? BloodBuff_Warrior_PhysCritDamageBonus_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.BloodBuff_Warrior_PhysCritDamageBonus_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.BloodBuff_Warrior_WeaponLevelBonus_DataShared? BloodBuff_Warrior_WeaponLevelBonus_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.BloodBuff_Warrior_WeaponLevelBonus_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.BloodBuffScript_Worker_ReducedDurability? BloodBuffScript_Worker_ReducedDurability => _world.EntityManager.TryGetComponentDataInternal<ProjectM.BloodBuffScript_Worker_ReducedDurability>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_ToggleNearbyArmorRacks_DataShared? Script_ToggleNearbyArmorRacks_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_ToggleNearbyArmorRacks_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_Siphon_Blood_Buff_DataShared? Script_Siphon_Blood_Buff_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_Siphon_Blood_Buff_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_SpellSchoolPassive_Unholy_Feed_DataServer? Script_SpellSchoolPassive_Unholy_Feed_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_SpellSchoolPassive_Unholy_Feed_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_Buff_ModifyFaction_DataServer? Script_Buff_ModifyFaction_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_Buff_ModifyFaction_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_Buff_MountSpeed_DataShared? Script_Buff_MountSpeed_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_Buff_MountSpeed_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.ModifyImpactMaterialBuff? ModifyImpactMaterialBuff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ModifyImpactMaterialBuff>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_Buff_ModifyCastOptions_DataServer? Script_Buff_ModifyCastOptions_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_Buff_ModifyCastOptions_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.BloodBuff_VBlood_0_DataShared? BloodBuff_VBlood_0_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.BloodBuff_VBlood_0_DataShared>(_entity, out var value) ? value : null;
        public List<ProjectM.Gameplay.Scripting.SpellTargetHitList_DataServer> SpellTargetHitList_DataServer => _world.EntityManager.GetBufferInternal<ProjectM.Gameplay.Scripting.SpellTargetHitList_DataServer>(_entity);
        public ProjectM.Gameplay.Scripting.Script_EndGameCredits_Data? Script_EndGameCredits_Data => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_EndGameCredits_Data>(_entity, out var value) ? value : null;
        public ProjectM.FortifyBuff? FortifyBuff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.FortifyBuff>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.UpdateBuffTargetSpawnPosition_DataServer? UpdateBuffTargetSpawnPosition_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.UpdateBuffTargetSpawnPosition_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_IceMovementBuff_DataServer? Script_IceMovementBuff_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_IceMovementBuff_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_ApplyBuffOnAggroListTarget_DataServer? Script_ApplyBuffOnAggroListTarget_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_ApplyBuffOnAggroListTarget_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_Sword_Shockwave_ReturnToTargetPosition_Data? Script_Sword_Shockwave_ReturnToTargetPosition_Data => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_Sword_Shockwave_ReturnToTargetPosition_Data>(_entity, out var value) ? value : null;
        public ProjectM.CreateEventOnHealthChangeAmount? CreateEventOnHealthChangeAmount => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CreateEventOnHealthChangeAmount>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_CarriageCollidersData? Script_CarriageCollidersData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_CarriageCollidersData>(_entity, out var value) ? value : null;
        public ProjectM.ModifyAIMoveSpeedsBuff? ModifyAIMoveSpeedsBuff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ModifyAIMoveSpeedsBuff>(_entity, out var value) ? value : null;
        public ProjectM.ModifyConsumeBloodTypeBuff? ModifyConsumeBloodTypeBuff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ModifyConsumeBloodTypeBuff>(_entity, out var value) ? value : null;
        public ProjectM.ModifyEntityCategoryBuff? ModifyEntityCategoryBuff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ModifyEntityCategoryBuff>(_entity, out var value) ? value : null;
        public ProjectM.ModifyUnitLevelBuff? ModifyUnitLevelBuff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ModifyUnitLevelBuff>(_entity, out var value) ? value : null;
        public List<ProjectM.ModifyDropTableBuff> ModifyDropTableBuffs => _world.EntityManager.GetBufferInternal<ProjectM.ModifyDropTableBuff>(_entity);
        public ProjectM.ProfessorCoilManager? ProfessorCoilManager => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ProfessorCoilManager>(_entity, out var value) ? value : null;
        public List<ProjectM.ProfessorCoilElement> ProfessorCoilElements => _world.EntityManager.GetBufferInternal<ProjectM.ProfessorCoilElement>(_entity);
        public List<ProjectM.ProfessorCoilPairElement> ProfessorCoilPairElements => _world.EntityManager.GetBufferInternal<ProjectM.ProfessorCoilPairElement>(_entity);
        public ProjectM.Behaviours.ModifyBehaviourBuff? ModifyBehaviourBuff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Behaviours.ModifyBehaviourBuff>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_Buff_ModifyCombatMusicSourceActive_DataServer? Script_Buff_ModifyCombatMusicSourceActive_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_Buff_ModifyCombatMusicSourceActive_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Buff_EmpowerDamageDealtByType_DataShared? Buff_EmpowerDamageDealtByType_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Buff_EmpowerDamageDealtByType_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_BouncingProjectile_DataServer? Script_BouncingProjectile_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_BouncingProjectile_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.SpawnStructure_WeakenState_DataShared? SpawnStructure_WeakenState_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.SpawnStructure_WeakenState_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_SpawnThrowTowardsNearbyVampires_DataServer? Script_SpawnThrowTowardsNearbyVampires_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_SpawnThrowTowardsNearbyVampires_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_PrisonInteract_DataServer? Script_PrisonInteract_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_PrisonInteract_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_IncreaseLifeTimeCondition_Data? Script_IncreaseLifeTimeCondition_Data => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_IncreaseLifeTimeCondition_Data>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.BloodBuff_HealReceivedProc_DataShared? BloodBuff_HealReceivedProc_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.BloodBuff_HealReceivedProc_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_WerewolfChieftain_ToggleGates_DataShared? Script_WerewolfChieftain_ToggleGates_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_WerewolfChieftain_ToggleGates_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.BloodBuff_CritAmplifyProc_DataShared? BloodBuff_CritAmplifyProc_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.BloodBuff_CritAmplifyProc_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_ApplyBuffUnderHealthThreshhold_MonsterVBlood_DataServer? Script_ApplyBuffUnderHealthThreshhold_MonsterVBlood_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_ApplyBuffUnderHealthThreshhold_MonsterVBlood_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_ApplyBuffUnderThreeHealthThreshholds_DataServer? Script_ApplyBuffUnderThreeHealthThreshholds_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_ApplyBuffUnderThreeHealthThreshholds_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.BloodBuff_BiteToMutant_DataShared? BloodBuff_BiteToMutant_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.BloodBuff_BiteToMutant_DataShared>(_entity, out var value) ? value : null;
        public List<ProjectM.Gameplay.Scripting.RandomMutant> RandomMutants => _world.EntityManager.GetBufferInternal<ProjectM.Gameplay.Scripting.RandomMutant>(_entity);
        public ProjectM.Gameplay.Scripting.BloodBuff_Worker_Pulverize_DataShared? BloodBuff_Worker_Pulverize_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.BloodBuff_Worker_Pulverize_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.BloodBuff_Assault_DataShared? BloodBuff_Assault_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.BloodBuff_Assault_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.BloodBuff_Brute_100_DataShared? BloodBuff_Brute_100_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.BloodBuff_Brute_100_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.BloodBuff_PrimaryProc_FreeCast_DataShared? BloodBuff_PrimaryProc_FreeCast_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.BloodBuff_PrimaryProc_FreeCast_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.BloodBuff_Rogue_100_DataShared? BloodBuff_Rogue_100_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.BloodBuff_Rogue_100_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.BloodBuff_Warrior_100_DataShared? BloodBuff_Warrior_100_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.BloodBuff_Warrior_100_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.BloodBuff_Warrior_PhysicalBonus_DataShared? BloodBuff_Warrior_PhysicalBonus_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.BloodBuff_Warrior_PhysicalBonus_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.BloodBuff_Worker_100_DataShared? BloodBuff_Worker_100_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.BloodBuff_Worker_100_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Interactor? Interactor => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Interactor>(_entity, out var value) ? value : null;
        public ProjectM.CastleBuilding.CurrentTileModelEditing? CurrentTileModelEditing => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CastleBuilding.CurrentTileModelEditing>(_entity, out var value) ? value : null;
        public ProjectM.Blood? Blood => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Blood>(_entity, out var value) ? value : null;
        public ProjectM.RespawnCharacter? RespawnCharacter => _world.EntityManager.TryGetComponentDataInternal<ProjectM.RespawnCharacter>(_entity, out var value) ? value : null;
        public ProjectM.PlayerCharacter? PlayerCharacter => _world.EntityManager.TryGetComponentDataInternal<ProjectM.PlayerCharacter>(_entity, out var value) ? value : null;
        public ProjectM.ReturnToNetherWaypoint? ReturnToNetherWaypoint => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ReturnToNetherWaypoint>(_entity, out var value) ? value : null;
        public ProjectM.BloodMoonBuffState? BloodMoonBuffState => _world.EntityManager.TryGetComponentDataInternal<ProjectM.BloodMoonBuffState>(_entity, out var value) ? value : null;
        public ProjectM.Mounter? Mounter => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Mounter>(_entity, out var value) ? value : null;
        public ProjectM.Resident? Resident => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Resident>(_entity, out var value) ? value : null;
        public ProjectM.TakeDamageInSun? TakeDamageInSun => _world.EntityManager.TryGetComponentDataInternal<ProjectM.TakeDamageInSun>(_entity, out var value) ? value : null;
        public ProjectM.TakeDamageInSunDebuffState? TakeDamageInSunDebuffState => _world.EntityManager.TryGetComponentDataInternal<ProjectM.TakeDamageInSunDebuffState>(_entity, out var value) ? value : null;
        public ProjectM.Shared.BagHolder? BagHolder => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Shared.BagHolder>(_entity, out var value) ? value : null;
        public ProjectM.CombatMusicListener_Shared? CombatMusicListener_Shared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CombatMusicListener_Shared>(_entity, out var value) ? value : null;
        public ProjectM.Crowdedness? Crowdedness => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Crowdedness>(_entity, out var value) ? value : null;
        public ProjectM.JumpFromCliffs? JumpFromCliffs => _world.EntityManager.TryGetComponentDataInternal<ProjectM.JumpFromCliffs>(_entity, out var value) ? value : null;
        public ProjectM.CharacterVoiceActivity? CharacterVoiceActivity => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CharacterVoiceActivity>(_entity, out var value) ? value : null;
        public ProjectM.Tiles.RestrictPlacementArea? RestrictPlacementArea => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Tiles.RestrictPlacementArea>(_entity, out var value) ? value : null;
        public ProjectM.LightningStorm.LightningAttractorGameplay? LightningAttractorGameplay => _world.EntityManager.TryGetComponentDataInternal<ProjectM.LightningStorm.LightningAttractorGameplay>(_entity, out var value) ? value : null;
        public ProjectM.MinionMasterStats? MinionMasterStats => _world.EntityManager.TryGetComponentDataInternal<ProjectM.MinionMasterStats>(_entity, out var value) ? value : null;
        public ProjectM.DeathReason? DeathReason => _world.EntityManager.TryGetComponentDataInternal<ProjectM.DeathReason>(_entity, out var value) ? value : null;
        public ProjectM.Energy? Energy => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Energy>(_entity, out var value) ? value : null;
        public ProjectM.PavementBonus? PavementBonus => _world.EntityManager.TryGetComponentDataInternal<ProjectM.PavementBonus>(_entity, out var value) ? value : null;
        public ProjectM.PlayerLastValidPosition? PlayerLastValidPosition => _world.EntityManager.TryGetComponentDataInternal<ProjectM.PlayerLastValidPosition>(_entity, out var value) ? value : null;
        public ProjectM.VBloodAbilityOwnerData? VBloodAbilityOwnerData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.VBloodAbilityOwnerData>(_entity, out var value) ? value : null;
        public ProjectM.BloodMoonBuff? BloodMoonBuff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.BloodMoonBuff>(_entity, out var value) ? value : null;
        public ProjectM.LifeLeech? LifeLeech => _world.EntityManager.TryGetComponentDataInternal<ProjectM.LifeLeech>(_entity, out var value) ? value : null;
        public ProjectM.Network.Latency? Latency => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Network.Latency>(_entity, out var value) ? value : null;
        public List<ProjectM.BloodQualityBuff> BloodQualityBuffs => _world.EntityManager.GetBufferInternal<ProjectM.BloodQualityBuff>(_entity);
        public List<ProjectM.InverseAggroBufferElement> InverseAggroBufferElements => _world.EntityManager.GetBufferInternal<ProjectM.InverseAggroBufferElement>(_entity);
        public List<ProjectM.FollowerBuffer> FollowerBuffers => _world.EntityManager.GetBufferInternal<ProjectM.FollowerBuffer>(_entity);
        public List<ProjectM.PassiveBuffer> PassiveBuffers => _world.EntityManager.GetBufferInternal<ProjectM.PassiveBuffer>(_entity);
        public List<ProjectM.VBloodAbilityBuffEntry> VBloodAbilityBuffEntries => _world.EntityManager.GetBufferInternal<ProjectM.VBloodAbilityBuffEntry>(_entity);
        public List<ProjectM.CrowdednessPlayerBufferElement> CrowdednessPlayerBufferElements => _world.EntityManager.GetBufferInternal<ProjectM.CrowdednessPlayerBufferElement>(_entity);
        public List<ProjectM.BuffByItemCategoryCount> BuffByItemCategoryCounts => _world.EntityManager.GetBufferInternal<ProjectM.BuffByItemCategoryCount>(_entity);
        public List<ProjectM.BuffOnConnectionStatusElement> BuffOnConnectionStatusElements => _world.EntityManager.GetBufferInternal<ProjectM.BuffOnConnectionStatusElement>(_entity);
        public bool VampireTag => _world.EntityManager.HasComponentInternal<ProjectM.VampireTag>(_entity);
        public bool CanBuildTileModels => _world.EntityManager.HasComponentInternal<ProjectM.CastleBuilding.CanBuildTileModels>(_entity);
        public bool TileRestrictionAreaTag => _world.EntityManager.HasComponentInternal<ProjectM.TileRestrictionAreaTag>(_entity);
        public bool RadialDamageTarget => _world.EntityManager.HasComponentInternal<ProjectM.RadialDamageTarget>(_entity);
        public ProjectM.Gameplay.Scripting.Script_TileModelForceAiming_DataServer? Script_TileModelForceAiming_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_TileModelForceAiming_DataServer>(_entity, out var value) ? value : null;
        public bool Script_TriggerAchievementData => _world.EntityManager.HasComponentInternal<ProjectM.Gameplay.Scripting.Script_TriggerAchievementData>(_entity);
        public ProjectM.Gameplay.Scripting.Script_SetSpellTargetToAIPoiType_DataServer? Script_SetSpellTargetToAIPoiType_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_SetSpellTargetToAIPoiType_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_Convert_Item_OnConsume_DataServer? Script_Convert_Item_OnConsume_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_Convert_Item_OnConsume_DataServer>(_entity, out var value) ? value : null;
        public List<ProjectM.Gameplay.Scripting.Script_Convert_Item_OnConsume_Entry> Script_Convert_Item_OnConsume_Entry => _world.EntityManager.GetBufferInternal<ProjectM.Gameplay.Scripting.Script_Convert_Item_OnConsume_Entry>(_entity);
        public bool Script_SetHealthToOwnerPercentage_DataServer => _world.EntityManager.HasComponentInternal<ProjectM.Gameplay.Scripting.Script_SetHealthToOwnerPercentage_DataServer>(_entity);
        public ProjectM.Gameplay.Scripting.ThrowMultiple_PlayerHitCount_DataServer? ThrowMultiple_PlayerHitCount_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.ThrowMultiple_PlayerHitCount_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.SaddleBearer? SaddleBearer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.SaddleBearer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_ApplyBuffUnderThreeHealthThreshholdsDataCarrier_DataServer? Script_ApplyBuffUnderThreeHealthThreshholdsDataCarrier_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_ApplyBuffUnderThreeHealthThreshholdsDataCarrier_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_TeleportNearSpellTarget_DataServer? Script_TeleportNearSpellTarget_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_TeleportNearSpellTarget_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_SetBehaviourTreeStateOnGameplayEvent_DataServer? Script_SetBehaviourTreeStateOnGameplayEvent_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_SetBehaviourTreeStateOnGameplayEvent_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Buff_ApplyBuffOnDamageTypeDealt_DataShared? Buff_ApplyBuffOnDamageTypeDealt_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Buff_ApplyBuffOnDamageTypeDealt_DataShared>(_entity, out var value) ? value : null;
        public List<ProjectM.CreateGameplayEventOnBuffReapply> CreateGameplayEventOnBuffReapplies => _world.EntityManager.GetBufferInternal<ProjectM.CreateGameplayEventOnBuffReapply>(_entity);
        public ProjectM.Gameplay.Scripting.Script_SetTransformBasedOnNearbyEntity_DataServer? Script_SetTransformBasedOnNearbyEntity_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_SetTransformBasedOnNearbyEntity_DataServer>(_entity, out var value) ? value : null;
        public bool DropItemImpairedBuff => _world.EntityManager.HasComponentInternal<ProjectM.DropItemImpairedBuff>(_entity);
        public ProjectM.Gameplay.Scripting.Script_Dracula_EnterTeleportData? Script_Dracula_EnterTeleportData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_Dracula_EnterTeleportData>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Buff_HealAttackerOnDamageType_DataShared? Buff_HealAttackerOnDamageType_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Buff_HealAttackerOnDamageType_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_SetSpellTargetToAggroListTarget_DataServer? Script_SetSpellTargetToAggroListTarget_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_SetSpellTargetToAggroListTarget_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_Dracula_DestroyPillars_DataShared? Script_Dracula_DestroyPillars_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_Dracula_DestroyPillars_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_CreateGameplayEventOnTeleporterMatch_DataServer? Script_CreateGameplayEventOnTeleporterMatch_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_CreateGameplayEventOnTeleporterMatch_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_TransitionInteractedOnSpawn_DataServer? Script_TransitionInteractedOnSpawn_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_TransitionInteractedOnSpawn_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_CreateGameplayEventOnBuffTargetDeath_DataServer? Script_CreateGameplayEventOnBuffTargetDeath_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_CreateGameplayEventOnBuffTargetDeath_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Script_HomingSpell_DataShared? Script_HomingSpell_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Script_HomingSpell_DataShared>(_entity, out var value) ? value : null;
        public bool HomingSpellTag => _world.EntityManager.HasComponentInternal<ProjectM.HomingSpellTag>(_entity);
        public bool UseCastleHeart => _world.EntityManager.HasComponentInternal<ProjectM.UseCastleHeart>(_entity);
        public ProjectM.Gameplay.Scripting.Script_ApplyDashOnDamageTaken_DataServer? Script_ApplyDashOnDamageTaken_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_ApplyDashOnDamageTaken_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_Buff_ApplyNewBuffOnOwnerDeath_DataServer? Script_Buff_ApplyNewBuffOnOwnerDeath_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_Buff_ApplyNewBuffOnOwnerDeath_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.VbloodGhostBuff_Shared? VbloodGhostBuff_Shared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.VbloodGhostBuff_Shared>(_entity, out var value) ? value : null;
        public ProjectM.Script_GetLifeTimeFromRespawnSettings_DataServer? Script_GetLifeTimeFromRespawnSettings_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Script_GetLifeTimeFromRespawnSettings_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.ApplyCarriageDriverCoverBuffServerData? ApplyCarriageDriverCoverBuffServerData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.ApplyCarriageDriverCoverBuffServerData>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Buff_ApplyBuffWithAdjustedLifetime_DataShared? Buff_ApplyBuffWithAdjustedLifetime_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Buff_ApplyBuffWithAdjustedLifetime_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_CreateGameplayEventOnDetectNoMovementOnTick_DataServer? Script_CreateGameplayEventOnDetectNoMovementOnTick_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_CreateGameplayEventOnDetectNoMovementOnTick_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_CreateProfessorCoilEvent_DataServer? Script_CreateProfessorCoilEvent_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_CreateProfessorCoilEvent_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_ProfessorOverloadOrb_DataServer? Script_ProfessorOverloadOrb_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_ProfessorOverloadOrb_DataServer>(_entity, out var value) ? value : null;
        public List<ProjectM.ProfessorCoilEvent_PredefinedSequence> ProfessorCoilEvent_PredefinedSequence => _world.EntityManager.GetBufferInternal<ProjectM.ProfessorCoilEvent_PredefinedSequence>(_entity);
        public ProjectM.Gameplay.Scripting.RotateOverTimeData? RotateOverTimeData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.RotateOverTimeData>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_HomingSpell_DataServer? Script_HomingSpell_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_HomingSpell_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_SpawnTravelToTargetOriginPosition_DataServer? Script_SpawnTravelToTargetOriginPosition_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_SpawnTravelToTargetOriginPosition_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_Knockback_Wall_Buff_DataServer? Script_Knockback_Wall_Buff_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_Knockback_Wall_Buff_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_FindClosestSpellTarget_DataServer? Script_FindClosestSpellTarget_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_FindClosestSpellTarget_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_Blood_CrimsonBeam_DataServer? Script_Blood_CrimsonBeam_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_Blood_CrimsonBeam_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_Blood_CrimsonBeam_DataShared? Script_Blood_CrimsonBeam_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_Blood_CrimsonBeam_DataShared>(_entity, out var value) ? value : null;
        public List<ProjectM.Gameplay.Scripting.Script_Blood_CrimsonBeam_HitElement> Script_Blood_CrimsonBeam_HitElement => _world.EntityManager.GetBufferInternal<ProjectM.Gameplay.Scripting.Script_Blood_CrimsonBeam_HitElement>(_entity);
        public bool DestroyOnOwnerDeath => _world.EntityManager.HasComponentInternal<ProjectM.DestroyOnOwnerDeath>(_entity);
        public ProjectM.Gameplay.Scripting.Script_SharedHealthPoolBuff_DataServer? Script_SharedHealthPoolBuff_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_SharedHealthPoolBuff_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_CreateGameplayEventOnHitConsumableProjectile_DataServer? Script_CreateGameplayEventOnHitConsumableProjectile_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_CreateGameplayEventOnHitConsumableProjectile_DataServer>(_entity, out var value) ? value : null;
        public List<ProjectM.Gameplay.Scripting.ConsumableProjectile_HitList> ConsumableProjectile_HitList => _world.EntityManager.GetBufferInternal<ProjectM.Gameplay.Scripting.ConsumableProjectile_HitList>(_entity);
        public ProjectM.Gameplay.Scripting.Script_HomingProjectileBoostOverLifetime_DataServer? Script_HomingProjectileBoostOverLifetime_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_HomingProjectileBoostOverLifetime_DataServer>(_entity, out var value) ? value : null;
        public List<ProjectM.Gameplay.Scripting.BoostProjectileHitList> BoostProjectileHitLists => _world.EntityManager.GetBufferInternal<ProjectM.Gameplay.Scripting.BoostProjectileHitList>(_entity);
        public ProjectM.Gameplay.Scripting.Script_SommelierBarrelDance_DataServer? Script_SommelierBarrelDance_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_SommelierBarrelDance_DataServer>(_entity, out var value) ? value : null;
        public List<ProjectM.Gameplay.Scripting.BarrelIds> BarrelIds => _world.EntityManager.GetBufferInternal<ProjectM.Gameplay.Scripting.BarrelIds>(_entity);
        public ProjectM.Gameplay.Scripting.Script_SommelierBarrelFountain_DataServer? Script_SommelierBarrelFountain_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_SommelierBarrelFountain_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_SommelierHorizontalBarrels_DataServer? Script_SommelierHorizontalBarrels_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_SommelierHorizontalBarrels_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.ChangeTranslationOverTime_DataShared? ChangeTranslationOverTime_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.ChangeTranslationOverTime_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_CreateGameplayEventOnHitDetection_DataServer? Script_CreateGameplayEventOnHitDetection_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_CreateGameplayEventOnHitDetection_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.RingAoE_DataShared? RingAoE_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.RingAoE_DataShared>(_entity, out var value) ? value : null;
        public List<ProjectM.Gameplay.Scripting.HitList> HitLists => _world.EntityManager.GetBufferInternal<ProjectM.Gameplay.Scripting.HitList>(_entity);
        public ProjectM.TiltTowardGameplayLocationOnSpawn? TiltTowardGameplayLocationOnSpawn => _world.EntityManager.TryGetComponentDataInternal<ProjectM.TiltTowardGameplayLocationOnSpawn>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_CreateGameplayEventOnHitBuffPriority_DataServer? Script_CreateGameplayEventOnHitBuffPriority_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_CreateGameplayEventOnHitBuffPriority_DataServer>(_entity, out var value) ? value : null;
        public List<ProjectM.Gameplay.Scripting.BuffPriority_HitList_Previous> BuffPriority_HitList_Previous => _world.EntityManager.GetBufferInternal<ProjectM.Gameplay.Scripting.BuffPriority_HitList_Previous>(_entity);
        public ProjectM.Gameplay.Scripting.Script_IgniteDebuff_DataServer? Script_IgniteDebuff_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_IgniteDebuff_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_GrowingProjectile_DataServer? Script_GrowingProjectile_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_GrowingProjectile_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.CastAbilityInStateScript_DataServer? CastAbilityInStateScript_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.CastAbilityInStateScript_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_SetSpellMovementToTarget_DataServer? Script_SetSpellMovementToTarget_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_SetSpellMovementToTarget_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_BloodAltar_TrackVBloodUnit_Server? Script_BloodAltar_TrackVBloodUnit_Server => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_BloodAltar_TrackVBloodUnit_Server>(_entity, out var value) ? value : null;
        public ProjectM.Script_BloodAltar_TrackVBloodUnit_Shared? Script_BloodAltar_TrackVBloodUnit_Shared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Script_BloodAltar_TrackVBloodUnit_Shared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_UnitSpawn_DataServer? Script_UnitSpawn_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_UnitSpawn_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_DestroyBuffOnNoAbilityCharges_Server? Script_DestroyBuffOnNoAbilityCharges_Server => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_DestroyBuffOnNoAbilityCharges_Server>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_CarriageDriverData? Script_CarriageDriverData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_CarriageDriverData>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_CreateGameplayEventOnTickRandomChance_DataServer? Script_CreateGameplayEventOnTickRandomChance_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_CreateGameplayEventOnTickRandomChance_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.EvenSpreadCluster_DataServer? EvenSpreadCluster_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.EvenSpreadCluster_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Script_ConfuseDummy_DataServer? Script_ConfuseDummy_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Script_ConfuseDummy_DataServer>(_entity, out var value) ? value : null;
        public List<ProjectM.Script_ConfuseDummy_BuffedEntitiesBuffer> Script_ConfuseDummy_BuffedEntitiesBuffer => _world.EntityManager.GetBufferInternal<ProjectM.Script_ConfuseDummy_BuffedEntitiesBuffer>(_entity);
        public ProjectM.Gameplay.Scripting.Script_Buff_VisionRangeModification_DataServer? Script_Buff_VisionRangeModification_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_Buff_VisionRangeModification_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_CursedAreaDebuff_DataServer? Script_CursedAreaDebuff_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_CursedAreaDebuff_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_CurseAreaDebuff_DataShared? Script_CurseAreaDebuff_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_CurseAreaDebuff_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.WeakenStackModifier? WeakenStackModifier => _world.EntityManager.TryGetComponentDataInternal<ProjectM.WeakenStackModifier>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_GarlicAreaDebuff_DataServer? Script_GarlicAreaDebuff_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_GarlicAreaDebuff_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_GarlicAreaDebuff_DataShared? Script_GarlicAreaDebuff_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_GarlicAreaDebuff_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Script_Buff_MoveToBusStop_DataServer? Script_Buff_MoveToBusStop_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Script_Buff_MoveToBusStop_DataServer>(_entity, out var value) ? value : null;
        public List<ProjectM.ClearAggroOnGameplayEvent> ClearAggroOnGameplayEvents => _world.EntityManager.GetBufferInternal<ProjectM.ClearAggroOnGameplayEvent>(_entity);
        public ProjectM.Gameplay.Scripting.Script_HandleDraculaBlood_Data? Script_HandleDraculaBlood_Data => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_HandleDraculaBlood_Data>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_Dracula_ChunkBuff_DataServer? Script_Dracula_ChunkBuff_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_Dracula_ChunkBuff_DataServer>(_entity, out var value) ? value : null;
        public bool DraculaSaveDeathBuff => _world.EntityManager.HasComponentInternal<ProjectM.Gameplay.Scripting.DraculaSaveDeathBuff>(_entity);
        public ProjectM.VampireDownedBuff? VampireDownedBuff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.VampireDownedBuff>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.TeleportOutOfDraculaOnDeath_DataShared? TeleportOutOfDraculaOnDeath_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.TeleportOutOfDraculaOnDeath_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_CreateGameplayEventOnTickAfterDelay_DataServer? Script_CreateGameplayEventOnTickAfterDelay_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_CreateGameplayEventOnTickAfterDelay_DataServer>(_entity, out var value) ? value : null;
        public bool EquipmentImpairedBuff => _world.EntityManager.HasComponentInternal<ProjectM.EquipmentImpairedBuff>(_entity);
        public bool ReviveCancelBuff => _world.EntityManager.HasComponentInternal<ProjectM.ReviveCancelBuff>(_entity);
        public ProjectM.Gameplay.Scripting.Script_Buff_Stealth_Duration_DataServer? Script_Buff_Stealth_Duration_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_Buff_Stealth_Duration_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.SpiderCocoon_DataShared? SpiderCocoon_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.SpiderCocoon_DataShared>(_entity, out var value) ? value : null;
        public List<ProjectM.Gameplay.Scripting.SpiderCocoonSpawns_DataServer> SpiderCocoonSpawns_DataServer => _world.EntityManager.GetBufferInternal<ProjectM.Gameplay.Scripting.SpiderCocoonSpawns_DataServer>(_entity);
        public ProjectM.Gameplay.Scripting.Script_Demount_DataServer? Script_Demount_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_Demount_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.MountBuff? MountBuff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.MountBuff>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_Buff_GrabToOwner_DataServer? Script_Buff_GrabToOwner_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_Buff_GrabToOwner_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_Castleman_AdaptLevel_DataShared? Script_Castleman_AdaptLevel_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_Castleman_AdaptLevel_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Shared.Script_CarriageData? Script_CarriageData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Shared.Script_CarriageData>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_BouncingProjectile_Delay_DataServer? Script_BouncingProjectile_Delay_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_BouncingProjectile_Delay_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.BloodBuff_ApplyMovementSpeedOnShapeshift_DataShared? BloodBuff_ApplyMovementSpeedOnShapeshift_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.BloodBuff_ApplyMovementSpeedOnShapeshift_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_SpawnPrefabOnMiss_DataServer? Script_SpawnPrefabOnMiss_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_SpawnPrefabOnMiss_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_CreateGameplayEventOnDestroyHitOrMiss_DataServer? Script_CreateGameplayEventOnDestroyHitOrMiss_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_CreateGameplayEventOnDestroyHitOrMiss_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_ClusterBomb_Cast_DataServer? Script_ClusterBomb_Cast_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_ClusterBomb_Cast_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.SpawnThrowFromBuff_DataServer? SpawnThrowFromBuff_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.SpawnThrowFromBuff_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.LightningStorm.LightningConsumer? LightningConsumer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.LightningStorm.LightningConsumer>(_entity, out var value) ? value : null;
        public List<ProjectM.CreateGameplayEventOnMinionDeath> CreateGameplayEventOnMinionDeaths => _world.EntityManager.GetBufferInternal<ProjectM.CreateGameplayEventOnMinionDeath>(_entity);
        public ProjectM.Gameplay.Scripting.Script_FilterTargetOnGameplayEvent_ConstantData? Script_FilterTargetOnGameplayEvent_ConstantData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_FilterTargetOnGameplayEvent_ConstantData>(_entity, out var value) ? value : null;
        public List<ProjectM.Gameplay.Scripting.Script_FilterTargetOnGameplayEvent_Triggers> Script_FilterTargetOnGameplayEvent_Triggers => _world.EntityManager.GetBufferInternal<ProjectM.Gameplay.Scripting.Script_FilterTargetOnGameplayEvent_Triggers>(_entity);
        public ProjectM.Gameplay.Scripting.Script_FlameWhipHeightCheck_Data? Script_FlameWhipHeightCheck_Data => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_FlameWhipHeightCheck_Data>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_Buff_Shapeshift_DataShared? Script_Buff_Shapeshift_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_Buff_Shapeshift_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_SetFlyingHeightVision_Buff_DataShared? Script_SetFlyingHeightVision_Buff_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_SetFlyingHeightVision_Buff_DataShared>(_entity, out var value) ? value : null;
        public bool SiegeWeaponAbsorbCapByServerSettings => _world.EntityManager.HasComponentInternal<ProjectM.SiegeWeaponAbsorbCapByServerSettings>(_entity);
        public ProjectM.Gameplay.Scripting.Script_DraculinBloodMendHeal_DataServer? Script_DraculinBloodMendHeal_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_DraculinBloodMendHeal_DataServer>(_entity, out var value) ? value : null;
        public bool BloodShareBuff => _world.EntityManager.HasComponentInternal<ProjectM.BloodShareBuff>(_entity);
        public bool BloodShareBuff_ResetVBlood => _world.EntityManager.HasComponentInternal<ProjectM.BloodShareBuff_ResetVBlood>(_entity);
        public ProjectM.Gameplay.Scripting.Script_Buff_FreeCast_DataServer? Script_Buff_FreeCast_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_Buff_FreeCast_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Buff_Reduce_SpellCooldown_DataShared? Buff_Reduce_SpellCooldown_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Buff_Reduce_SpellCooldown_DataShared>(_entity, out var value) ? value : null;
        public bool RunScriptOnPreCastFinished => _world.EntityManager.HasComponentInternal<ProjectM.RunScriptOnPreCastFinished>(_entity);
        public ProjectM.ChargeUpSpell? ChargeUpSpell => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ChargeUpSpell>(_entity, out var value) ? value : null;
        public ProjectM.ScaleProjectileRangeByChargeFactor? ScaleProjectileRangeByChargeFactor => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ScaleProjectileRangeByChargeFactor>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_LongBowChargeUpHitHandler_Data? Script_LongBowChargeUpHitHandler_Data => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_LongBowChargeUpHitHandler_Data>(_entity, out var value) ? value : null;
        public ProjectM.BloodBuffScript_ChanceToResetCooldown? BloodBuffScript_ChanceToResetCooldown => _world.EntityManager.TryGetComponentDataInternal<ProjectM.BloodBuffScript_ChanceToResetCooldown>(_entity, out var value) ? value : null;
        public ProjectM.BloodBuffScript_Scholar_MovementSpeedOnCast? BloodBuffScript_Scholar_MovementSpeedOnCast => _world.EntityManager.TryGetComponentDataInternal<ProjectM.BloodBuffScript_Scholar_MovementSpeedOnCast>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_BloodBuff_Draculin_ImprovedBite_DataShared? Script_BloodBuff_Draculin_ImprovedBite_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_BloodBuff_Draculin_ImprovedBite_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Shared.SpellModBlobReference_UI? SpellModBlobReference_UI => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Shared.SpellModBlobReference_UI>(_entity, out var value) ? value : null;
        public ProjectM.Shared.SpellModBlobReference? SpellModBlobReference => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Shared.SpellModBlobReference>(_entity, out var value) ? value : null;
        public ProjectM.RandomizedSpawnChain? RandomizedSpawnChain => _world.EntityManager.TryGetComponentDataInternal<ProjectM.RandomizedSpawnChain>(_entity, out var value) ? value : null;
        public ProjectM.StaticTransformIndex? StaticTransformIndex => _world.EntityManager.TryGetComponentDataInternal<ProjectM.StaticTransformIndex>(_entity, out var value) ? value : null;
        public ProjectM.AutoChainInstanceData? AutoChainInstanceData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AutoChainInstanceData>(_entity, out var value) ? value : null;
        public bool DisableWhenNoPlayersInRangeOfChunk => _world.EntityManager.HasComponentInternal<ProjectM.DisableWhenNoPlayersInRangeOfChunk>(_entity);
        public ProjectM.RandomizedSpawnChainSettings? RandomizedSpawnChainSettings => _world.EntityManager.TryGetComponentDataInternal<ProjectM.RandomizedSpawnChainSettings>(_entity, out var value) ? value : null;
        public ProjectM.Shared.WarEvents.WarEvent_Portal? WarEvent_Portal => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Shared.WarEvents.WarEvent_Portal>(_entity, out var value) ? value : null;
        public ProjectM.Terrain.TerrainChunk? TerrainChunk => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Terrain.TerrainChunk>(_entity, out var value) ? value : null;
        public ProjectM.Shared.WarEvents.WarEvent_Gate? WarEvent_Gate => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Shared.WarEvents.WarEvent_Gate>(_entity, out var value) ? value : null;
        public ProjectM.UnitCompositionSpawner? UnitCompositionSpawner => _world.EntityManager.TryGetComponentDataInternal<ProjectM.UnitCompositionSpawner>(_entity, out var value) ? value : null;
        public List<ProjectM.UnitCompositionActiveUnit> UnitCompositionActiveUnits => _world.EntityManager.GetBufferInternal<ProjectM.UnitCompositionActiveUnit>(_entity);
        public List<ProjectM.FormationOffsetBuffer> FormationOffsetBuffers => _world.EntityManager.GetBufferInternal<ProjectM.FormationOffsetBuffer>(_entity);
        public List<ProjectM.UnitCompositionGroupEntry> UnitCompositionGroupEntries => _world.EntityManager.GetBufferInternal<ProjectM.UnitCompositionGroupEntry>(_entity);
        public List<ProjectM.UnitCompositionGroupUnitEntry> UnitCompositionGroupUnitEntries => _world.EntityManager.GetBufferInternal<ProjectM.UnitCompositionGroupUnitEntry>(_entity);
        public ProjectM.Roofs.RoofCategory? RoofCategory => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Roofs.RoofCategory>(_entity, out var value) ? value : null;
        public List<ProjectM.Roofs.RoofRootBlobElement> RoofRootBlobElements => _world.EntityManager.GetBufferInternal<ProjectM.Roofs.RoofRootBlobElement>(_entity);
        public List<ProjectM.Roofs.RoofTileVariations> RoofTileVariations => _world.EntityManager.GetBufferInternal<ProjectM.Roofs.RoofTileVariations>(_entity);
        public ProjectM.MicroPOIManager? MicroPOIManager => _world.EntityManager.TryGetComponentDataInternal<ProjectM.MicroPOIManager>(_entity, out var value) ? value : null;
        public ProjectM.MicroPOIManagerConfig? MicroPOIManagerConfig => _world.EntityManager.TryGetComponentDataInternal<ProjectM.MicroPOIManagerConfig>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.RadialZone_Environment_Data? RadialZone_Environment_Data => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.RadialZone_Environment_Data>(_entity, out var value) ? value : null;
        public List<ProjectM.Gameplay.Scripting.RadialZone_Environment_HitSpheres> RadialZone_Environment_HitSpheres => _world.EntityManager.GetBufferInternal<ProjectM.Gameplay.Scripting.RadialZone_Environment_HitSpheres>(_entity);
        public bool GarlicArea => _world.EntityManager.HasComponentInternal<ProjectM.Gameplay.Scripting.GarlicArea>(_entity);
        public bool Static => _world.EntityManager.HasComponentInternal<Unity.Transforms.Static>(_entity);
        public ProjectM.MicroPOIConfig? MicroPOIConfig => _world.EntityManager.TryGetComponentDataInternal<ProjectM.MicroPOIConfig>(_entity, out var value) ? value : null;
        public ProjectM.MicroPOIInstance? MicroPOIInstance => _world.EntityManager.TryGetComponentDataInternal<ProjectM.MicroPOIInstance>(_entity, out var value) ? value : null;
        public List<ProjectM.MicroPOIUnitSpawnerElement> MicroPOIUnitSpawnerElements => _world.EntityManager.GetBufferInternal<ProjectM.MicroPOIUnitSpawnerElement>(_entity);
        public List<ProjectM.ActiveMicroPOIObjects> ActiveMicroPOIObjects => _world.EntityManager.GetBufferInternal<ProjectM.ActiveMicroPOIObjects>(_entity);
        public bool HolyArea => _world.EntityManager.HasComponentInternal<ProjectM.Gameplay.Scripting.HolyArea>(_entity);
        public ProjectM.Gameplay.Scripting.Script_StealthBush_Environment_Data? Script_StealthBush_Environment_Data => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_StealthBush_Environment_Data>(_entity, out var value) ? value : null;
        public List<ProjectM.Gameplay.Scripting.Script_StealthBush_Environment_ActiveStealths> Script_StealthBush_Environment_ActiveStealths => _world.EntityManager.GetBufferInternal<ProjectM.Gameplay.Scripting.Script_StealthBush_Environment_ActiveStealths>(_entity);
        public List<ProjectM.Gameplay.Scripting.Script_StealthBush_Environment_HitSpheres> Script_StealthBush_Environment_HitSpheres => _world.EntityManager.GetBufferInternal<ProjectM.Gameplay.Scripting.Script_StealthBush_Environment_HitSpheres>(_entity);
        public bool CurseArea => _world.EntityManager.HasComponentInternal<ProjectM.Gameplay.Scripting.CurseArea>(_entity);
        public ProjectM.ChunkPortal? ChunkPortal => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ChunkPortal>(_entity, out var value) ? value : null;
        public ProjectM.Shared.WarEvents.WarEvent_NetworkedGate? WarEvent_NetworkedGate => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Shared.WarEvents.WarEvent_NetworkedGate>(_entity, out var value) ? value : null;
        public bool WarEvent_NetworkedEntity => _world.EntityManager.HasComponentInternal<ProjectM.Shared.WarEvents.WarEvent_NetworkedEntity>(_entity);
        public ProjectM.Shared.WarEvents.WarEvent_NetworkedData? WarEvent_NetworkedData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Shared.WarEvents.WarEvent_NetworkedData>(_entity, out var value) ? value : null;
        public ProjectM.Shared.WarEvents.Script_WarEvent_UnitKilledSequenceData? Script_WarEvent_UnitKilledSequenceData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Shared.WarEvents.Script_WarEvent_UnitKilledSequenceData>(_entity, out var value) ? value : null;
        public ProjectM.ProfessorCoil? ProfessorCoil => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ProfessorCoil>(_entity, out var value) ? value : null;
        public ProjectM.LightningStorm.LightningAttractorAmbience? LightningAttractorAmbience => _world.EntityManager.TryGetComponentDataInternal<ProjectM.LightningStorm.LightningAttractorAmbience>(_entity, out var value) ? value : null;
        public ProjectM.CastleBuilding.CastleRoof? CastleRoof => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CastleBuilding.CastleRoof>(_entity, out var value) ? value : null;
        public ProjectM.CastleBuilding.CastleRoofOrnaments? CastleRoofOrnaments => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CastleBuilding.CastleRoofOrnaments>(_entity, out var value) ? value : null;
        public ProjectM.Roofs.RoofTileData? RoofTileData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Roofs.RoofTileData>(_entity, out var value) ? value : null;
        public ProjectM.Roofs.RoofInstanceTypeId? RoofInstanceTypeId => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Roofs.RoofInstanceTypeId>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Script_InspectTarget_Data? Script_InspectTarget_Data => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Script_InspectTarget_Data>(_entity, out var value) ? value : null;
        public bool Script_Dracula_EndGamePortal_Tag => _world.EntityManager.HasComponentInternal<ProjectM.Gameplay.Scripting.Script_Dracula_EndGamePortal_Tag>(_entity);
        public ProjectM.LightningRodStation? LightningRodStation => _world.EntityManager.TryGetComponentDataInternal<ProjectM.LightningRodStation>(_entity, out var value) ? value : null;
        public ProjectM.Shared.WarEvents.Script_WarEvent_PortalToGateSequenceData? Script_WarEvent_PortalToGateSequenceData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Shared.WarEvents.Script_WarEvent_PortalToGateSequenceData>(_entity, out var value) ? value : null;
        public ProjectM.Shared.WarEvents.WarEvent_ActivePortal? WarEvent_ActivePortal => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Shared.WarEvents.WarEvent_ActivePortal>(_entity, out var value) ? value : null;
        public ProjectM.Shared.WarEvents.Script_WarEvent_NodeData? Script_WarEvent_NodeData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Shared.WarEvents.Script_WarEvent_NodeData>(_entity, out var value) ? value : null;
        public ProjectM.Shared.WarEvents.WarEvent_NetworkedPortal? WarEvent_NetworkedPortal => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Shared.WarEvents.WarEvent_NetworkedPortal>(_entity, out var value) ? value : null;
        public List<ProjectM.Shared.WarEvents.WarEvent_ActiveUnit> WarEvent_ActiveUnit => _world.EntityManager.GetBufferInternal<ProjectM.Shared.WarEvents.WarEvent_ActiveUnit>(_entity);
        public List<ProjectM.Shared.WarEvents.WarEvent_UnitPrefab> WarEvent_UnitPrefab => _world.EntityManager.GetBufferInternal<ProjectM.Shared.WarEvents.WarEvent_UnitPrefab>(_entity);
        public ProjectM.Shared.WarEvents.WarEvent_ActiveGate? WarEvent_ActiveGate => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Shared.WarEvents.WarEvent_ActiveGate>(_entity, out var value) ? value : null;
        public List<ProjectM.Shared.WarEvents.WarEvent_ChildReference> WarEvent_ChildReference => _world.EntityManager.GetBufferInternal<ProjectM.Shared.WarEvents.WarEvent_ChildReference>(_entity);
        public ProjectM.Gameplay.Scripting.Script_Dracula_WarpRiftData? Script_Dracula_WarpRiftData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_Dracula_WarpRiftData>(_entity, out var value) ? value : null;
        public List<ProjectM.Gameplay.Scripting.Script_Dracula_WarpRiftTargetData> Script_Dracula_WarpRiftTargetData => _world.EntityManager.GetBufferInternal<ProjectM.Gameplay.Scripting.Script_Dracula_WarpRiftTargetData>(_entity);
        public ProjectM.Gameplay.Scripting.Script_Dracula_SpawnerData? Script_Dracula_SpawnerData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_Dracula_SpawnerData>(_entity, out var value) ? value : null;
        public Unity.Physics.PhysicsConstrainedBodyPair? PhysicsConstrainedBodyPair => _world.EntityManager.TryGetComponentDataInternal<Unity.Physics.PhysicsConstrainedBodyPair>(_entity, out var value) ? value : null;
        public Unity.Physics.PhysicsJoint? PhysicsJoint => _world.EntityManager.TryGetComponentDataInternal<Unity.Physics.PhysicsJoint>(_entity, out var value) ? value : null;
        public List<Unity.Physics.PhysicsJointCompanion> PhysicsJointCompanions => _world.EntityManager.GetBufferInternal<Unity.Physics.PhysicsJointCompanion>(_entity);
        public ProjectM.InventoryItem? InventoryItem => _world.EntityManager.TryGetComponentDataInternal<ProjectM.InventoryItem>(_entity, out var value) ? value : null;
        public ProjectM.ItemData? ItemData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ItemData>(_entity, out var value) ? value : null;
        public ProjectM.Shared.Salvageable? Salvageable => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Shared.Salvageable>(_entity, out var value) ? value : null;
        public List<ProjectM.RecipeRequirementBuffer> RecipeRequirementBuffers => _world.EntityManager.GetBufferInternal<ProjectM.RecipeRequirementBuffer>(_entity);
        public ProjectM.AchievementData? AchievementData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AchievementData>(_entity, out var value) ? value : null;
        public List<ProjectM.AchievementSubTaskEntry> AchievementSubTaskEntries => _world.EntityManager.GetBufferInternal<ProjectM.AchievementSubTaskEntry>(_entity);
        public ProjectM.SingletonPrefab? SingletonPrefab => _world.EntityManager.TryGetComponentDataInternal<ProjectM.SingletonPrefab>(_entity, out var value) ? value : null;
        public List<ProjectM.ServantBloodTypePerkElement> ServantBloodTypePerkElements => _world.EntityManager.GetBufferInternal<ProjectM.ServantBloodTypePerkElement>(_entity);
        public List<ProjectM.ServantFactionPerkElement> ServantFactionPerkElements => _world.EntityManager.GetBufferInternal<ProjectM.ServantFactionPerkElement>(_entity);
        public bool ServantPerkCollectionSingleton => _world.EntityManager.HasComponentInternal<ProjectM.ServantPerkCollectionSingleton>(_entity);
        public ProjectM.MapIconData? MapIconData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.MapIconData>(_entity, out var value) ? value : null;
        public ProjectM.MapIconTargetEntity? MapIconTargetEntity => _world.EntityManager.TryGetComponentDataInternal<ProjectM.MapIconTargetEntity>(_entity, out var value) ? value : null;
        public ProjectM.MapIconPosition? MapIconPosition => _world.EntityManager.TryGetComponentDataInternal<ProjectM.MapIconPosition>(_entity, out var value) ? value : null;
        public ProjectM.BloodHuntsData? BloodHuntsData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.BloodHuntsData>(_entity, out var value) ? value : null;
        public List<ProjectM.BloodHuntBuffer> BloodHuntBuffers => _world.EntityManager.GetBufferInternal<ProjectM.BloodHuntBuffer>(_entity);
        public List<ProjectM.ShardBossHuntBuffer> ShardBossHuntBuffers => _world.EntityManager.GetBufferInternal<ProjectM.ShardBossHuntBuffer>(_entity);
        public ProjectM.TechData? TechData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.TechData>(_entity, out var value) ? value : null;
        public List<ProjectM.ProgressionBookShapeshiftElement> ProgressionBookShapeshiftElements => _world.EntityManager.GetBufferInternal<ProjectM.ProgressionBookShapeshiftElement>(_entity);
        public List<ProjectM.ProgressionBookMusicTrackElement> ProgressionBookMusicTrackElements => _world.EntityManager.GetBufferInternal<ProjectM.ProgressionBookMusicTrackElement>(_entity);
        public List<ProjectM.TechUnlockRecipeBuffer> TechUnlockRecipeBuffers => _world.EntityManager.GetBufferInternal<ProjectM.TechUnlockRecipeBuffer>(_entity);
        public List<ProjectM.TechUnlockBlueprintBuffer> TechUnlockBlueprintBuffers => _world.EntityManager.GetBufferInternal<ProjectM.TechUnlockBlueprintBuffer>(_entity);
        public List<ProjectM.TechRequirementBuffer> TechRequirementBuffers => _world.EntityManager.GetBufferInternal<ProjectM.TechRequirementBuffer>(_entity);
        public List<ProjectM.TechItemRequirementBuffer> TechItemRequirementBuffers => _world.EntityManager.GetBufferInternal<ProjectM.TechItemRequirementBuffer>(_entity);
        public ProjectM.CastleBuilding.CastleTerritory? CastleTerritory => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CastleBuilding.CastleTerritory>(_entity, out var value) ? value : null;
        public List<ProjectM.CastleBuilding.CastleTerritoryBlocks> CastleTerritoryBlocks => _world.EntityManager.GetBufferInternal<ProjectM.CastleBuilding.CastleTerritoryBlocks>(_entity);
        public List<ProjectM.CastleBuilding.CastleTerritoryTiles> CastleTerritoryTiles => _world.EntityManager.GetBufferInternal<ProjectM.CastleBuilding.CastleTerritoryTiles>(_entity);
        public ProjectM.ItemDataDropGroup? ItemDataDropGroup => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ItemDataDropGroup>(_entity, out var value) ? value : null;
        public List<ProjectM.ItemDataDropGroupBuffer> ItemDataDropGroupBuffers => _world.EntityManager.GetBufferInternal<ProjectM.ItemDataDropGroupBuffer>(_entity);
        public ProjectM.Passive? Passive => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Passive>(_entity, out var value) ? value : null;
        public ProjectM.BloodBuffModifier? BloodBuffModifier => _world.EntityManager.TryGetComponentDataInternal<ProjectM.BloodBuffModifier>(_entity, out var value) ? value : null;
        public List<ProjectM.PassiveRequirementBuffer> PassiveRequirementBuffers => _world.EntityManager.GetBufferInternal<ProjectM.PassiveRequirementBuffer>(_entity);
        public ProjectM.RecipeData? RecipeData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.RecipeData>(_entity, out var value) ? value : null;
        public List<ProjectM.RecipeOutputBuffer> RecipeOutputBuffers => _world.EntityManager.GetBufferInternal<ProjectM.RecipeOutputBuffer>(_entity);
        public List<ProjectM.RecipeOutputUnitBuffer> RecipeOutputUnitBuffers => _world.EntityManager.GetBufferInternal<ProjectM.RecipeOutputUnitBuffer>(_entity);
        public ProjectM.TeamData? TeamData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.TeamData>(_entity, out var value) ? value : null;
        public List<ProjectM.TeamAllies> TeamAllies => _world.EntityManager.GetBufferInternal<ProjectM.TeamAllies>(_entity);
        public bool UnitTeam => _world.EntityManager.HasComponentInternal<ProjectM.UnitTeam>(_entity);
        public ProjectM.EquippableBuff? EquippableBuff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.EquippableBuff>(_entity, out var value) ? value : null;
        public List<ProjectM.ItemRepairBuffer> ItemRepairBuffers => _world.EntityManager.GetBufferInternal<ProjectM.ItemRepairBuffer>(_entity);
        public ProjectM.MusicPlayerStationTrack_Shared? MusicPlayerStationTrack_Shared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.MusicPlayerStationTrack_Shared>(_entity, out var value) ? value : null;
        public ProjectM.CastleTeamData? CastleTeamData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CastleTeamData>(_entity, out var value) ? value : null;
        public bool CastleTeam => _world.EntityManager.HasComponentInternal<ProjectM.CastleTeam>(_entity);
        public ProjectM.CastleBuffsSettings? CastleBuffsSettings => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CastleBuffsSettings>(_entity, out var value) ? value : null;
        public ProjectM.NamePostfixGenerator? NamePostfixGenerator => _world.EntityManager.TryGetComponentDataInternal<ProjectM.NamePostfixGenerator>(_entity, out var value) ? value : null;
        public ProjectM.NamePrefixGenerator? NamePrefixGenerator => _world.EntityManager.TryGetComponentDataInternal<ProjectM.NamePrefixGenerator>(_entity, out var value) ? value : null;
        public List<ProjectM.SpellSchoolAbility> SpellSchoolAbilities => _world.EntityManager.GetBufferInternal<ProjectM.SpellSchoolAbility>(_entity);
        public List<ProjectM.SpellSchoolPassive> SpellSchoolPassives => _world.EntityManager.GetBufferInternal<ProjectM.SpellSchoolPassive>(_entity);
        public ProjectM.CastleBuilding.CastleRebuildSettings? CastleRebuildSettings => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CastleBuilding.CastleRebuildSettings>(_entity, out var value) ? value : null;
        public ProjectM.StationBonusData? StationBonusData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.StationBonusData>(_entity, out var value) ? value : null;
        public bool BagEquipBuffTag => _world.EntityManager.HasComponentInternal<ProjectM.BagEquipBuffTag>(_entity);
        public ProjectM.ServantMissionSettingsSingleton? ServantMissionSettingsSingleton => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ServantMissionSettingsSingleton>(_entity, out var value) ? value : null;
        public List<ProjectM.ServantMissionSetting> ServantMissionSettings => _world.EntityManager.GetBufferInternal<ProjectM.ServantMissionSetting>(_entity);
        public List<ProjectM.ServantInjuredChance> ServantInjuredChances => _world.EntityManager.GetBufferInternal<ProjectM.ServantInjuredChance>(_entity);
        public ProjectM.MiscItemLevel? MiscItemLevel => _world.EntityManager.TryGetComponentDataInternal<ProjectM.MiscItemLevel>(_entity, out var value) ? value : null;
        public ProjectM.DropTableData? DropTableData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.DropTableData>(_entity, out var value) ? value : null;
        public List<ProjectM.DropTableDataBuffer> DropTableDataBuffers => _world.EntityManager.GetBufferInternal<ProjectM.DropTableDataBuffer>(_entity);
        public ProjectM.SpellLevel? SpellLevel => _world.EntityManager.TryGetComponentDataInternal<ProjectM.SpellLevel>(_entity, out var value) ? value : null;
        public List<ProjectM.RecipeLinkBuffer> RecipeLinkBuffers => _world.EntityManager.GetBufferInternal<ProjectM.RecipeLinkBuffer>(_entity);
        public List<ProjectM.DefaultUnlockedSpellSchoolAbility> DefaultUnlockedSpellSchoolAbilities => _world.EntityManager.GetBufferInternal<ProjectM.DefaultUnlockedSpellSchoolAbility>(_entity);
        public bool DefaultUnlockedProgression => _world.EntityManager.HasComponentInternal<ProjectM.DefaultUnlockedProgression>(_entity);
        public ProjectM.HealingBuff? HealingBuff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.HealingBuff>(_entity, out var value) ? value : null;
        public ProjectM.MissionData? MissionData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.MissionData>(_entity, out var value) ? value : null;
        public List<ProjectM.HybridCameraFrustumPlanes> HybridCameraFrustumPlanes => _world.EntityManager.GetBufferInternal<ProjectM.HybridCameraFrustumPlanes>(_entity);
        public List<ProjectM.UI.UnitBloodTypeBuffs> UnitBloodTypeBuffs => _world.EntityManager.GetBufferInternal<ProjectM.UI.UnitBloodTypeBuffs>(_entity);
        public ProjectM.Haptics.DualsenseVibration? DualsenseVibration => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Haptics.DualsenseVibration>(_entity, out var value) ? value : null;
        public ProjectM.UserTeam? UserTeam => _world.EntityManager.TryGetComponentDataInternal<ProjectM.UserTeam>(_entity, out var value) ? value : null;
        public List<ProjectM.EquipmentSetElements> EquipmentSetElements => _world.EntityManager.GetBufferInternal<ProjectM.EquipmentSetElements>(_entity);
        public List<ProjectM.EquipmentSet> EquipmentSets => _world.EntityManager.GetBufferInternal<ProjectM.EquipmentSet>(_entity);
        public bool NeutralTeam => _world.EntityManager.HasComponentInternal<ProjectM.NeutralTeam>(_entity);
        public List<ProjectM.UI.AchievementCollectionBuffer> AchievementCollectionBuffers => _world.EntityManager.GetBufferInternal<ProjectM.UI.AchievementCollectionBuffer>(_entity);
        public bool AchievementCollectionSingleton => _world.EntityManager.HasComponentInternal<ProjectM.UI.AchievementCollectionSingleton>(_entity);
        public ProjectM.AchievementSubTaskData? AchievementSubTaskData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AchievementSubTaskData>(_entity, out var value) ? value : null;
        public ProjectM.ItemSet? ItemSet => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ItemSet>(_entity, out var value) ? value : null;
        public ProjectM.Equippable? Equippable => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Equippable>(_entity, out var value) ? value : null;
        public ProjectM.ModifyInventorySizeBuff? ModifyInventorySizeBuff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ModifyInventorySizeBuff>(_entity, out var value) ? value : null;
        public ProjectM.EquippableData? EquippableData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.EquippableData>(_entity, out var value) ? value : null;
        public ProjectM.CastleBuilding.CastleRoom? CastleRoom => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CastleBuilding.CastleRoom>(_entity, out var value) ? value : null;
        public List<ProjectM.CastleBuilding.CastleRoomFloorsBuffer> CastleRoomFloorsBuffers => _world.EntityManager.GetBufferInternal<ProjectM.CastleBuilding.CastleRoomFloorsBuffer>(_entity);
        public List<ProjectM.CastleBuilding.CastleRoomWallsBuffer> CastleRoomWallsBuffers => _world.EntityManager.GetBufferInternal<ProjectM.CastleBuilding.CastleRoomWallsBuffer>(_entity);
        public List<ProjectM.CastleBuilding.CastleRoomWorkstationsBuffer> CastleRoomWorkstationsBuffers => _world.EntityManager.GetBufferInternal<ProjectM.CastleBuilding.CastleRoomWorkstationsBuffer>(_entity);
        public ProjectM.SunDamageDebuff? SunDamageDebuff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.SunDamageDebuff>(_entity, out var value) ? value : null;
        public ProjectM.SetOwnerRotateTowardsMouse? SetOwnerRotateTowardsMouse => _world.EntityManager.TryGetComponentDataInternal<ProjectM.SetOwnerRotateTowardsMouse>(_entity, out var value) ? value : null;
        public ProjectM.WeaponLevelSource? WeaponLevelSource => _world.EntityManager.TryGetComponentDataInternal<ProjectM.WeaponLevelSource>(_entity, out var value) ? value : null;
        public ProjectM.Shared.Durability? Durability => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Shared.Durability>(_entity, out var value) ? value : null;
        public List<ProjectM.ReplaceAbilityOnSlotWhenMountedBuffElement> ReplaceAbilityOnSlotWhenMountedBuffElements => _world.EntityManager.GetBufferInternal<ProjectM.ReplaceAbilityOnSlotWhenMountedBuffElement>(_entity);
        public List<ProjectM.ReplaceAbilityOnSlotWhenMountedBuffModificationElement> ReplaceAbilityOnSlotWhenMountedBuffModificationElements => _world.EntityManager.GetBufferInternal<ProjectM.ReplaceAbilityOnSlotWhenMountedBuffModificationElement>(_entity);
        public ProjectM.TimeScale? TimeScale => _world.EntityManager.TryGetComponentDataInternal<ProjectM.TimeScale>(_entity, out var value) ? value : null;
        public ProjectM.Network.InputCommandData? InputCommandData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Network.InputCommandData>(_entity, out var value) ? value : null;
        public ProjectM.Network.InputCommandState? InputCommandState => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Network.InputCommandState>(_entity, out var value) ? value : null;
        public ProjectM.DeathBuff? DeathBuff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.DeathBuff>(_entity, out var value) ? value : null;
        public ProjectM.ServerDebugViewData? ServerDebugViewData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ServerDebugViewData>(_entity, out var value) ? value : null;
        public bool NetworkedSequence => _world.EntityManager.HasComponentInternal<ProjectM.NetworkedSequence>(_entity);
        public ProjectM.ArmorLevelSource? ArmorLevelSource => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ArmorLevelSource>(_entity, out var value) ? value : null;
        public ProjectM.ProfessorCoilBeam_State_Server? ProfessorCoilBeam_State_Server => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ProfessorCoilBeam_State_Server>(_entity, out var value) ? value : null;
        public ProjectM.ProfessorCoilBeam_Data_Server? ProfessorCoilBeam_Data_Server => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ProfessorCoilBeam_Data_Server>(_entity, out var value) ? value : null;
        public ProjectM.ProfessorCoilBeam_State_Shared? ProfessorCoilBeam_State_Shared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ProfessorCoilBeam_State_Shared>(_entity, out var value) ? value : null;
        public ProjectM.AbilityGroupSlot? AbilityGroupSlot => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AbilityGroupSlot>(_entity, out var value) ? value : null;
        public ProjectM.RelicMapIcon? RelicMapIcon => _world.EntityManager.TryGetComponentDataInternal<ProjectM.RelicMapIcon>(_entity, out var value) ? value : null;
        public bool DeathContainerMapIcon => _world.EntityManager.HasComponentInternal<ProjectM.DeathContainerMapIcon>(_entity);
        public ProjectM.ScrollingCombatTextMessage? ScrollingCombatTextMessage => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ScrollingCombatTextMessage>(_entity, out var value) ? value : null;
        public ProjectM.JewelLevelSource? JewelLevelSource => _world.EntityManager.TryGetComponentDataInternal<ProjectM.JewelLevelSource>(_entity, out var value) ? value : null;
        public ProjectM.Shared.JewelInstance? JewelInstance => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Shared.JewelInstance>(_entity, out var value) ? value : null;
        public ProjectM.Shared.GeneratedName? GeneratedName => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Shared.GeneratedName>(_entity, out var value) ? value : null;
        public List<ProjectM.Shared.JewelArithmeticModification> JewelArithmeticModifications => _world.EntityManager.GetBufferInternal<ProjectM.Shared.JewelArithmeticModification>(_entity);
        public bool JewelTemplate => _world.EntityManager.HasComponentInternal<ProjectM.Shared.JewelTemplate>(_entity);
        public ProjectM.ServerDebugLogs? ServerDebugLogs => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ServerDebugLogs>(_entity, out var value) ? value : null;
        public ProjectM.SyncedServerDebugSettings? SyncedServerDebugSettings => _world.EntityManager.TryGetComponentDataInternal<ProjectM.SyncedServerDebugSettings>(_entity, out var value) ? value : null;
        public ProjectM.SaddleData? SaddleData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.SaddleData>(_entity, out var value) ? value : null;
        public ProjectM.PlayerMapIcon? PlayerMapIcon => _world.EntityManager.TryGetComponentDataInternal<ProjectM.PlayerMapIcon>(_entity, out var value) ? value : null;
        public ProjectM.EquipmentToggleData? EquipmentToggleData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.EquipmentToggleData>(_entity, out var value) ? value : null;
        public ProjectM.DayNightCycle? DayNightCycle => _world.EntityManager.TryGetComponentDataInternal<ProjectM.DayNightCycle>(_entity, out var value) ? value : null;
        public ProjectM.ClanInviteRequest_Server? ClanInviteRequest_Server => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ClanInviteRequest_Server>(_entity, out var value) ? value : null;
        public ProjectM.ClanInviteRequest_Shared? ClanInviteRequest_Shared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ClanInviteRequest_Shared>(_entity, out var value) ? value : null;
        public ProjectM.ServerTime? ServerTime => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ServerTime>(_entity, out var value) ? value : null;
        public ProjectM.SpawnLocationSelector? SpawnLocationSelector => _world.EntityManager.TryGetComponentDataInternal<ProjectM.SpawnLocationSelector>(_entity, out var value) ? value : null;
        public ProjectM.StartGraveyardMapIcon? StartGraveyardMapIcon => _world.EntityManager.TryGetComponentDataInternal<ProjectM.StartGraveyardMapIcon>(_entity, out var value) ? value : null;
        public ProjectM.WaypointMapIcon? WaypointMapIcon => _world.EntityManager.TryGetComponentDataInternal<ProjectM.WaypointMapIcon>(_entity, out var value) ? value : null;
        public ProjectM.RelicSpawnBoundMapIcon? RelicSpawnBoundMapIcon => _world.EntityManager.TryGetComponentDataInternal<ProjectM.RelicSpawnBoundMapIcon>(_entity, out var value) ? value : null;
        public ProjectM.SpellLevelSource? SpellLevelSource => _world.EntityManager.TryGetComponentDataInternal<ProjectM.SpellLevelSource>(_entity, out var value) ? value : null;
        public ProjectM.Terrain.WorldZoneId? WorldZoneId => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Terrain.WorldZoneId>(_entity, out var value) ? value : null;
        public List<ProjectM.UserMapZonePackedRevealElement> UserMapZonePackedRevealElements => _world.EntityManager.GetBufferInternal<ProjectM.UserMapZonePackedRevealElement>(_entity);
        public ProjectM.JumpFromCliffsTravelBuff? JumpFromCliffsTravelBuff => _world.EntityManager.TryGetComponentDataInternal<ProjectM.JumpFromCliffsTravelBuff>(_entity, out var value) ? value : null;
        public ProjectM.JumpFromCliffsTravelBuffConstants? JumpFromCliffsTravelBuffConstants => _world.EntityManager.TryGetComponentDataInternal<ProjectM.JumpFromCliffsTravelBuffConstants>(_entity, out var value) ? value : null;
        public ProjectM.ShatteredItem? ShatteredItem => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ShatteredItem>(_entity, out var value) ? value : null;
        public ProjectM.Shared.LegendaryItemInstance? LegendaryItemInstance => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Shared.LegendaryItemInstance>(_entity, out var value) ? value : null;
        public ProjectM.Shared.LegendaryItemTemplate? LegendaryItemTemplate => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Shared.LegendaryItemTemplate>(_entity, out var value) ? value : null;
        public ProjectM.Shared.LegendaryItemSpellModSetComponent? LegendaryItemSpellModSetComponent => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Shared.LegendaryItemSpellModSetComponent>(_entity, out var value) ? value : null;
        public ProjectM.Shared.LegendaryItemGeneratorTemplate? LegendaryItemGeneratorTemplate => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Shared.LegendaryItemGeneratorTemplate>(_entity, out var value) ? value : null;
        public List<ProjectM.ShatteredItemRepairCost> ShatteredItemRepairCosts => _world.EntityManager.GetBufferInternal<ProjectM.ShatteredItemRepairCost>(_entity);
        public ProjectM.CastAbilityOnConsume? CastAbilityOnConsume => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CastAbilityOnConsume>(_entity, out var value) ? value : null;
        public List<ProjectM.ConsumableCondition> ConsumableConditions => _world.EntityManager.GetBufferInternal<ProjectM.ConsumableCondition>(_entity);
        public bool LegendaryItemTemplateBase => _world.EntityManager.HasComponentInternal<ProjectM.Shared.LegendaryItemTemplateBase>(_entity);
        public ProjectM.WeaponLevel? WeaponLevel => _world.EntityManager.TryGetComponentDataInternal<ProjectM.WeaponLevel>(_entity, out var value) ? value : null;
        public ProjectM.AffectPrisonerWithToxic? AffectPrisonerWithToxic => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AffectPrisonerWithToxic>(_entity, out var value) ? value : null;
        public ProjectM.Transmog.TransmogAssetKeyBlobData? TransmogAssetKeyBlobData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Transmog.TransmogAssetKeyBlobData>(_entity, out var value) ? value : null;
        public ProjectM.Transmog.TransmogData? TransmogData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Transmog.TransmogData>(_entity, out var value) ? value : null;
        public ProjectM.StoredBlood? StoredBlood => _world.EntityManager.TryGetComponentDataInternal<ProjectM.StoredBlood>(_entity, out var value) ? value : null;
        public ProjectM.DealDamageToPrisoner? DealDamageToPrisoner => _world.EntityManager.TryGetComponentDataInternal<ProjectM.DealDamageToPrisoner>(_entity, out var value) ? value : null;
        public ProjectM.Shared.UpgradeableLegendaryItem? UpgradeableLegendaryItem => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Shared.UpgradeableLegendaryItem>(_entity, out var value) ? value : null;
        public List<ProjectM.Shared.UpgradeableLegendaryItemTiers> UpgradeableLegendaryItemTiers => _world.EntityManager.GetBufferInternal<ProjectM.Shared.UpgradeableLegendaryItemTiers>(_entity);
        public ProjectM.FeedPrisoner? FeedPrisoner => _world.EntityManager.TryGetComponentDataInternal<ProjectM.FeedPrisoner>(_entity, out var value) ? value : null;
        public ProjectM.Shared.LoseDurabilityOverTime? LoseDurabilityOverTime => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Shared.LoseDurabilityOverTime>(_entity, out var value) ? value : null;
        public ProjectM.VBloodProgressionUnlockData? VBloodProgressionUnlockData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.VBloodProgressionUnlockData>(_entity, out var value) ? value : null;
        public List<ProjectM.UnlockedShapeshiftElement> UnlockedShapeshiftElements => _world.EntityManager.GetBufferInternal<ProjectM.UnlockedShapeshiftElement>(_entity);
        public List<ProjectM.UnlockedRecipeElement> UnlockedRecipeElements => _world.EntityManager.GetBufferInternal<ProjectM.UnlockedRecipeElement>(_entity);
        public List<ProjectM.UnlockedBlueprintElement> UnlockedBlueprintElements => _world.EntityManager.GetBufferInternal<ProjectM.UnlockedBlueprintElement>(_entity);
        public List<ProjectM.UnlockedMusicTrackElement> UnlockedMusicTrackElements => _world.EntityManager.GetBufferInternal<ProjectM.UnlockedMusicTrackElement>(_entity);
        public List<ProjectM.UnlockedSpellBookAbility> UnlockedSpellBookAbilities => _world.EntityManager.GetBufferInternal<ProjectM.UnlockedSpellBookAbility>(_entity);
        public List<ProjectM.UnlockedVBlood> UnlockedVBloods => _world.EntityManager.GetBufferInternal<ProjectM.UnlockedVBlood>(_entity);
        public List<ProjectM.UnlockedProgressionElement> UnlockedProgressionElements => _world.EntityManager.GetBufferInternal<ProjectM.UnlockedProgressionElement>(_entity);
        public List<ProjectM.Network.DiscoveredMapZoneElement> DiscoveredMapZoneElements => _world.EntityManager.GetBufferInternal<ProjectM.Network.DiscoveredMapZoneElement>(_entity);
        public ProjectM.ClanTeam? ClanTeam => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ClanTeam>(_entity, out var value) ? value : null;
        public List<ProjectM.ClanMemberStatus> ClanMemberStatus => _world.EntityManager.GetBufferInternal<ProjectM.ClanMemberStatus>(_entity);
        public ProjectM.AchievementOwner? AchievementOwner => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AchievementOwner>(_entity, out var value) ? value : null;
        public ProjectM.CurrentMapZone? CurrentMapZone => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CurrentMapZone>(_entity, out var value) ? value : null;
        public ProjectM.ProgressionMapper? ProgressionMapper => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ProgressionMapper>(_entity, out var value) ? value : null;
        public ProjectM.Controller? Controller => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Controller>(_entity, out var value) ? value : null;
        public ProjectM.Network.User? User => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Network.User>(_entity, out var value) ? value : null;
        public ProjectM.Network.InputCommandDataProxy? InputCommandDataProxy => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Network.InputCommandDataProxy>(_entity, out var value) ? value : null;
        public ProjectM.ClanRole? ClanRole => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ClanRole>(_entity, out var value) ? value : null;
        public ProjectM.Emoter? Emoter => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Emoter>(_entity, out var value) ? value : null;
        public ProjectM.Shapeshift? Shapeshift => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Shapeshift>(_entity, out var value) ? value : null;
        public ProjectM.Terrain.CurrentWorldRegion? CurrentWorldRegion => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Terrain.CurrentWorldRegion>(_entity, out var value) ? value : null;
        public ProjectM.Network.UserStats? UserStats => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Network.UserStats>(_entity, out var value) ? value : null;
        public ProjectM.Network.UserVisitedRegions? UserVisitedRegions => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Network.UserVisitedRegions>(_entity, out var value) ? value : null;
        public ProjectM.Network.DisconnectedTimer? DisconnectedTimer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Network.DisconnectedTimer>(_entity, out var value) ? value : null;
        public ProjectM.Network.UserHeartCount? UserHeartCount => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Network.UserHeartCount>(_entity, out var value) ? value : null;
        public ProjectM.Network.UserControllerData? UserControllerData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Network.UserControllerData>(_entity, out var value) ? value : null;
        public ProjectM.Network.UserTutorialProgression? UserTutorialProgression => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Network.UserTutorialProgression>(_entity, out var value) ? value : null;
        public List<ProjectM.AllyPermission> AllyPermissions => _world.EntityManager.GetBufferInternal<ProjectM.AllyPermission>(_entity);
        public List<ProjectM.RespawnPointOwnerBuffer> RespawnPointOwnerBuffers => _world.EntityManager.GetBufferInternal<ProjectM.RespawnPointOwnerBuffer>(_entity);
        public List<ProjectM.UserMapZoneElement> UserMapZoneElements => _world.EntityManager.GetBufferInternal<ProjectM.UserMapZoneElement>(_entity);
        public List<ProjectM.EmoteAbility> EmoteAbilities => _world.EntityManager.GetBufferInternal<ProjectM.EmoteAbility>(_entity);
        public List<ProjectM.ShapeshiftAbility> ShapeshiftAbilities => _world.EntityManager.GetBufferInternal<ProjectM.ShapeshiftAbility>(_entity);
        public List<ProjectM.UnlockedWaypointElement> UnlockedWaypointElements => _world.EntityManager.GetBufferInternal<ProjectM.UnlockedWaypointElement>(_entity);
        public ProjectM.MegaStaticManager? MegaStaticManager => _world.EntityManager.TryGetComponentDataInternal<ProjectM.MegaStaticManager>(_entity, out var value) ? value : null;
        public List<ProjectM.MegaStaticInstanceBuffer> MegaStaticInstanceBuffers => _world.EntityManager.GetBufferInternal<ProjectM.MegaStaticInstanceBuffer>(_entity);
        public List<ProjectM.MegaStaticServerInstanceBuffer> MegaStaticServerInstanceBuffers => _world.EntityManager.GetBufferInternal<ProjectM.MegaStaticServerInstanceBuffer>(_entity);
        public List<ProjectM.MegaStaticPrefabBuffer> MegaStaticPrefabBuffers => _world.EntityManager.GetBufferInternal<ProjectM.MegaStaticPrefabBuffer>(_entity);
        public List<ProjectM.MegaStaticDestroyedBuffer> MegaStaticDestroyedBuffers => _world.EntityManager.GetBufferInternal<ProjectM.MegaStaticDestroyedBuffer>(_entity);
        public List<ProjectM.AchievementInProgressElement> AchievementInProgressElements => _world.EntityManager.GetBufferInternal<ProjectM.AchievementInProgressElement>(_entity);
        public List<ProjectM.AchievementClaimedElement> AchievementClaimedElements => _world.EntityManager.GetBufferInternal<ProjectM.AchievementClaimedElement>(_entity);
        public List<ProjectM.CastleBuilding.CastleTerritoryOccupant> CastleTerritoryOccupants => _world.EntityManager.GetBufferInternal<ProjectM.CastleBuilding.CastleTerritoryOccupant>(_entity);
        public List<ProjectM.CastleBuilding.CastleTerritoryDecay> CastleTerritoryDecays => _world.EntityManager.GetBufferInternal<ProjectM.CastleBuilding.CastleTerritoryDecay>(_entity);
        public bool CastleTerritoryManager => _world.EntityManager.HasComponentInternal<ProjectM.CastleBuilding.CastleTerritoryManager>(_entity);
        public ProjectM.PlayerDeathContainer? PlayerDeathContainer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.PlayerDeathContainer>(_entity, out var value) ? value : null;
        public ProjectM.ItemPickup? ItemPickup => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ItemPickup>(_entity, out var value) ? value : null;
        public ProjectM.SiegeWeapon? SiegeWeapon => _world.EntityManager.TryGetComponentDataInternal<ProjectM.SiegeWeapon>(_entity, out var value) ? value : null;
        public bool AnnounceSiegeWeapon => _world.EntityManager.HasComponentInternal<ProjectM.AnnounceSiegeWeapon>(_entity);
        public ProjectM.Gameplay.Scripting.Script_UnitBloodQualityBuff_Rogue_DataShared? Script_UnitBloodQualityBuff_Rogue_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_UnitBloodQualityBuff_Rogue_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_UnitBloodQualityBuff_Brute_DataShared? Script_UnitBloodQualityBuff_Brute_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_UnitBloodQualityBuff_Brute_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_UnitBloodQualityBuff_Creature_DataShared? Script_UnitBloodQualityBuff_Creature_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_UnitBloodQualityBuff_Creature_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_UnitBloodQualityBuff_Mutant_DataShared? Script_UnitBloodQualityBuff_Mutant_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_UnitBloodQualityBuff_Mutant_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_UnitBloodQualityBuff_Scholar_DataShared? Script_UnitBloodQualityBuff_Scholar_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_UnitBloodQualityBuff_Scholar_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_UnitBloodQualityBuff_Warrior_DataShared? Script_UnitBloodQualityBuff_Warrior_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_UnitBloodQualityBuff_Warrior_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_UnitBloodQualityBuff_Worker_DataShared? Script_UnitBloodQualityBuff_Worker_DataShared => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_UnitBloodQualityBuff_Worker_DataShared>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_IncreaseDamageFromSource_Entry? Script_IncreaseDamageFromSource_Entry => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_IncreaseDamageFromSource_Entry>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_ApplyBuffWhenDamageDealt_DataServer? Script_ApplyBuffWhenDamageDealt_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_ApplyBuffWhenDamageDealt_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_IncreaseDamageIfTargetHasBuff_Entry? Script_IncreaseDamageIfTargetHasBuff_Entry => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_IncreaseDamageIfTargetHasBuff_Entry>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_ReduceDamageTakenWhileBelowHealth_DataServer? Script_ReduceDamageTakenWhileBelowHealth_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_ReduceDamageTakenWhileBelowHealth_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_CreateGameplayEventIfKilledHasBuff_DataServer? Script_CreateGameplayEventIfKilledHasBuff_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_CreateGameplayEventIfKilledHasBuff_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_HealOnCriticalBuff_DataServer? Script_HealOnCriticalBuff_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_HealOnCriticalBuff_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Scripting.Script_SpellSchoolPassive_ShapeshiftEmpowered_DataServer? Script_SpellSchoolPassive_ShapeshiftEmpowered_DataServer => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Scripting.Script_SpellSchoolPassive_ShapeshiftEmpowered_DataServer>(_entity, out var value) ? value : null;
        public ProjectM.AbilitySpellSchool? AbilitySpellSchool => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AbilitySpellSchool>(_entity, out var value) ? value : null;
        public ProjectM.SpellModAbilityGroupCharges? SpellModAbilityGroupCharges => _world.EntityManager.TryGetComponentDataInternal<ProjectM.SpellModAbilityGroupCharges>(_entity, out var value) ? value : null;
        public ProjectM.LightningStorm.LightningStormType? LightningStormType => _world.EntityManager.TryGetComponentDataInternal<ProjectM.LightningStorm.LightningStormType>(_entity, out var value) ? value : null;
        public bool EntitySpawnedMetadata => _world.EntityManager.HasComponentInternal<ProjectM.Gameplay.EntitySpawnedMetadata>(_entity);
        public bool EntityMetadata => _world.EntityManager.HasComponentInternal<ProjectM.Gameplay.EntityMetadata>(_entity);
        public ProjectM.PerkData? PerkData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.PerkData>(_entity, out var value) ? value : null;
        public ProjectM.Gameplay.Clan.ClanSystemSettingsComponent? ClanSystemSettingsComponent => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Gameplay.Clan.ClanSystemSettingsComponent>(_entity, out var value) ? value : null;
        public List<ProjectM.Sequencer.ImpactMaterialMappingBuffer> ImpactMaterialMappingBuffers => _world.EntityManager.GetBufferInternal<ProjectM.Sequencer.ImpactMaterialMappingBuffer>(_entity);
        public ProjectM.SCTTypeCollection? SCTTypeCollection => _world.EntityManager.TryGetComponentDataInternal<ProjectM.SCTTypeCollection>(_entity, out var value) ? value : null;
        public ProjectM.GeneralGameplayCollection? GeneralGameplayCollection => _world.EntityManager.TryGetComponentDataInternal<ProjectM.GeneralGameplayCollection>(_entity, out var value) ? value : null;
        public ProjectM.CharacterCustomizationSettingsComponent? CharacterCustomizationSettingsComponent => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CharacterCustomizationSettingsComponent>(_entity, out var value) ? value : null;
        public List<ProjectM.MaleFacesEntry> MaleFacesEntries => _world.EntityManager.GetBufferInternal<ProjectM.MaleFacesEntry>(_entity);
        public List<ProjectM.MaleHairsEntry> MaleHairsEntries => _world.EntityManager.GetBufferInternal<ProjectM.MaleHairsEntry>(_entity);
        public List<ProjectM.MaleFeaturesEntry> MaleFeaturesEntries => _world.EntityManager.GetBufferInternal<ProjectM.MaleFeaturesEntry>(_entity);
        public List<ProjectM.MaleAccessoriesEntry> MaleAccessoriesEntries => _world.EntityManager.GetBufferInternal<ProjectM.MaleAccessoriesEntry>(_entity);
        public List<ProjectM.FemaleFacesEntry> FemaleFacesEntries => _world.EntityManager.GetBufferInternal<ProjectM.FemaleFacesEntry>(_entity);
        public List<ProjectM.FemaleHairsEntry> FemaleHairsEntries => _world.EntityManager.GetBufferInternal<ProjectM.FemaleHairsEntry>(_entity);
        public List<ProjectM.FemaleFeaturesEntry> FemaleFeaturesEntries => _world.EntityManager.GetBufferInternal<ProjectM.FemaleFeaturesEntry>(_entity);
        public List<ProjectM.FemaleAccessoriesEntry> FemaleAccessoriesEntries => _world.EntityManager.GetBufferInternal<ProjectM.FemaleAccessoriesEntry>(_entity);
        public List<ProjectM.LifeLeechSetting> LifeLeechSettings => _world.EntityManager.GetBufferInternal<ProjectM.LifeLeechSetting>(_entity);
        public bool BuildMenuGroup => _world.EntityManager.HasComponentInternal<ProjectM.UI.BuildMenuGroup>(_entity);
        public ProjectM.DayTimeSpan? DayTimeSpan => _world.EntityManager.TryGetComponentDataInternal<ProjectM.DayTimeSpan>(_entity, out var value) ? value : null;
        public List<ProjectM.UnitStatsSettingsElement> UnitStatsSettingsElements => _world.EntityManager.GetBufferInternal<ProjectM.UnitStatsSettingsElement>(_entity);
        public ProjectM.RagdollSourceSetting? RagdollSourceSetting => _world.EntityManager.TryGetComponentDataInternal<ProjectM.RagdollSourceSetting>(_entity, out var value) ? value : null;
        public ProjectM.Shared.WorldEvents.WarEventSettingsComponent? WarEventSettingsComponent => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Shared.WorldEvents.WarEventSettingsComponent>(_entity, out var value) ? value : null;
        public List<ProjectM.BuffResistanceElement> BuffResistanceElements => _world.EntityManager.GetBufferInternal<ProjectM.BuffResistanceElement>(_entity);
        public List<ProjectM.PrefabSetBuffer> PrefabSetBuffers => _world.EntityManager.GetBufferInternal<ProjectM.PrefabSetBuffer>(_entity);
        public List<ProjectM.PrefabSetSourceObjectBuffer> PrefabSetSourceObjectBuffers => _world.EntityManager.GetBufferInternal<ProjectM.PrefabSetSourceObjectBuffer>(_entity);
        public ProjectM.UnitUptimeSetting? UnitUptimeSetting => _world.EntityManager.TryGetComponentDataInternal<ProjectM.UnitUptimeSetting>(_entity, out var value) ? value : null;
        public ProjectM.CastleBuilding.GenerateCastlePrefabs? GenerateCastlePrefabs => _world.EntityManager.TryGetComponentDataInternal<ProjectM.CastleBuilding.GenerateCastlePrefabs>(_entity, out var value) ? value : null;
        public ProjectM.Faction? Faction => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Faction>(_entity, out var value) ? value : null;
        public ProjectM.Shared.SpellModGlobalTierBlobReference? SpellModGlobalTierBlobReference => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Shared.SpellModGlobalTierBlobReference>(_entity, out var value) ? value : null;
        public bool GameDataInitializedSingleton => _world.EntityManager.HasComponentInternal<ProjectM.GameDataInitializedSingleton>(_entity);
        public ProjectM.Terrain.WorldZoneTextureProjectionMatrix? WorldZoneTextureProjectionMatrix => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Terrain.WorldZoneTextureProjectionMatrix>(_entity, out var value) ? value : null;
        public ProjectM.Terrain.TerritoryWorldRegion? TerritoryWorldRegion => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Terrain.TerritoryWorldRegion>(_entity, out var value) ? value : null;
        public ProjectM.Terrain.WaypointRegionPolygon? WaypointRegionPolygon => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Terrain.WaypointRegionPolygon>(_entity, out var value) ? value : null;
        public Unity.Transforms.PreviousParent? PreviousParent => _world.EntityManager.TryGetComponentDataInternal<Unity.Transforms.PreviousParent>(_entity, out var value) ? value : null;
        public List<ProjectM.Terrain.WorldRegionPolygonVertex> WorldRegionPolygonVertexes => _world.EntityManager.GetBufferInternal<ProjectM.Terrain.WorldRegionPolygonVertex>(_entity);
        public ProjectM.Terrain.WorldRegionPolygon? WorldRegionPolygon => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Terrain.WorldRegionPolygon>(_entity, out var value) ? value : null;
        public ProjectM.LightningStorm.LightningStormRegion? LightningStormRegion => _world.EntityManager.TryGetComponentDataInternal<ProjectM.LightningStorm.LightningStormRegion>(_entity, out var value) ? value : null;
        public ProjectM.SunBlocker.SunBlockerRegion? SunBlockerRegion => _world.EntityManager.TryGetComponentDataInternal<ProjectM.SunBlocker.SunBlockerRegion>(_entity, out var value) ? value : null;
        public List<Unity.Transforms.Child> Children => _world.EntityManager.GetBufferInternal<Unity.Transforms.Child>(_entity);
        public ProjectM.Terrain.MapZoneDataPacked? MapZoneDataPacked => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Terrain.MapZoneDataPacked>(_entity, out var value) ? value : null;
        public ProjectM.NetherSpawnPositionMetadata? NetherSpawnPositionMetadata => _world.EntityManager.TryGetComponentDataInternal<ProjectM.NetherSpawnPositionMetadata>(_entity, out var value) ? value : null;
        public ProjectM.ChunkScenePortalMetadata? ChunkScenePortalMetadata => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ChunkScenePortalMetadata>(_entity, out var value) ? value : null;
        public ProjectM.ChunkWaypointMetadata? ChunkWaypointMetadata => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ChunkWaypointMetadata>(_entity, out var value) ? value : null;
        public ProjectM.Terrain.LoadSubSceneOnStartup? LoadSubSceneOnStartup => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Terrain.LoadSubSceneOnStartup>(_entity, out var value) ? value : null;
        public ProjectM.Terrain.TerrainChunkMetadata? TerrainChunkMetadata => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Terrain.TerrainChunkMetadata>(_entity, out var value) ? value : null;
        public ProjectM.Terrain.ChunkRoadGraph? ChunkRoadGraph => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Terrain.ChunkRoadGraph>(_entity, out var value) ? value : null;
        public List<ProjectM.Terrain.TerrainChunkPortalBuffer> TerrainChunkPortalBuffers => _world.EntityManager.GetBufferInternal<ProjectM.Terrain.TerrainChunkPortalBuffer>(_entity);
        public List<ProjectM.Terrain.MapZoneNameOverride> MapZoneNameOverrides => _world.EntityManager.GetBufferInternal<ProjectM.Terrain.MapZoneNameOverride>(_entity);
        public List<ProjectM.Terrain.MapIconNameOverride> MapIconNameOverrides => _world.EntityManager.GetBufferInternal<ProjectM.Terrain.MapIconNameOverride>(_entity);
        public ProjectM.Terrain.LoadTerrainChunkRequest? LoadTerrainChunkRequest => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Terrain.LoadTerrainChunkRequest>(_entity, out var value) ? value : null;
        public ProjectM.Terrain.TerrainChunkOffset? TerrainChunkOffset => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Terrain.TerrainChunkOffset>(_entity, out var value) ? value : null;
        public ProjectM.Tiles.StaticTileWorld? StaticTileWorld => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Tiles.StaticTileWorld>(_entity, out var value) ? value : null;
        public List<ProjectM.ReplaceDropTableElement> ReplaceDropTableElements => _world.EntityManager.GetBufferInternal<ProjectM.ReplaceDropTableElement>(_entity);
        public List<ProjectM.ReplaceRandomizedSpawnChainElement> ReplaceRandomizedSpawnChainElements => _world.EntityManager.GetBufferInternal<ProjectM.ReplaceRandomizedSpawnChainElement>(_entity);
        public List<ProjectM.ReplaceMicroPOIManagerElement> ReplaceMicroPOIManagerElements => _world.EntityManager.GetBufferInternal<ProjectM.ReplaceMicroPOIManagerElement>(_entity);
        public List<ProjectM.StaticTransformElement> StaticTransformElements => _world.EntityManager.GetBufferInternal<ProjectM.StaticTransformElement>(_entity);
        public List<ProjectM.Terrain.ChunkCellBaseHeightLevel> ChunkCellBaseHeightLevels => _world.EntityManager.GetBufferInternal<ProjectM.Terrain.ChunkCellBaseHeightLevel>(_entity);
        public List<ProjectM.Terrain.ChunkBaseGameplayHeights> ChunkBaseGameplayHeights => _world.EntityManager.GetBufferInternal<ProjectM.Terrain.ChunkBaseGameplayHeights>(_entity);
        public bool TerrainTag => _world.EntityManager.HasComponentInternal<ProjectM.Terrain.TerrainTag>(_entity);
        public bool TerrainChunkShared => _world.EntityManager.HasComponentInternal<ProjectM.Terrain.TerrainChunkShared>(_entity);
        public bool DisabledDueToNoPlayersInRange => _world.EntityManager.HasComponentInternal<ProjectM.DisabledDueToNoPlayersInRange>(_entity);
        public bool CloudLight => _world.EntityManager.HasComponentInternal<ProjectM.CloudLight>(_entity);
        public List<ProjectM.Terrain.GlobalPatrolElement> GlobalPatrolElements => _world.EntityManager.GetBufferInternal<ProjectM.Terrain.GlobalPatrolElement>(_entity);
        public ProjectM.GlobalPatrolState? GlobalPatrolState => _world.EntityManager.TryGetComponentDataInternal<ProjectM.GlobalPatrolState>(_entity, out var value) ? value : null;
        public ProjectM.MovePatrolState? MovePatrolState => _world.EntityManager.TryGetComponentDataInternal<ProjectM.MovePatrolState>(_entity, out var value) ? value : null;
        public ProjectM.VBloodUnitSpawnSource? VBloodUnitSpawnSource => _world.EntityManager.TryGetComponentDataInternal<ProjectM.VBloodUnitSpawnSource>(_entity, out var value) ? value : null;
        public List<ProjectM.WaypointTargetBufferEntry> WaypointTargetBufferEntries => _world.EntityManager.GetBufferInternal<ProjectM.WaypointTargetBufferEntry>(_entity);
        public List<ProjectM.PatrolBusStopNode> PatrolBusStopNodes => _world.EntityManager.GetBufferInternal<ProjectM.PatrolBusStopNode>(_entity);
        public List<ProjectM.Terrain.RoadTypePathfindingWeightsElement> RoadTypePathfindingWeightsElements => _world.EntityManager.GetBufferInternal<ProjectM.Terrain.RoadTypePathfindingWeightsElement>(_entity);
        public ProjectM.Terrain.RoadPathfindingRequest? RoadPathfindingRequest => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Terrain.RoadPathfindingRequest>(_entity, out var value) ? value : null;
        public List<ProjectM.Terrain.RoadPathfindingResult> RoadPathfindingResults => _world.EntityManager.GetBufferInternal<ProjectM.Terrain.RoadPathfindingResult>(_entity);
        public ProjectM.SpawnGroupData? SpawnGroupData => _world.EntityManager.TryGetComponentDataInternal<ProjectM.SpawnGroupData>(_entity, out var value) ? value : null;
        public List<ProjectM.SpawnGroup_SpawnTableBuffer> SpawnGroup_SpawnTableBuffer => _world.EntityManager.GetBufferInternal<ProjectM.SpawnGroup_SpawnTableBuffer>(_entity);
        public ProjectM.PathSettings? PathSettings => _world.EntityManager.TryGetComponentDataInternal<ProjectM.PathSettings>(_entity, out var value) ? value : null;
        public ProjectM.PathWaypointNode? PathWaypointNode => _world.EntityManager.TryGetComponentDataInternal<ProjectM.PathWaypointNode>(_entity, out var value) ? value : null;
        public List<ProjectM.PathWaypointNeighbours> PathWaypointNeighbours => _world.EntityManager.GetBufferInternal<ProjectM.PathWaypointNeighbours>(_entity);
        public ProjectM.SpawnRegion? SpawnRegion => _world.EntityManager.TryGetComponentDataInternal<ProjectM.SpawnRegion>(_entity, out var value) ? value : null;
        public List<ProjectM.SpawnGroupBuffer> SpawnGroupBuffers => _world.EntityManager.GetBufferInternal<ProjectM.SpawnGroupBuffer>(_entity);
        public List<ProjectM.SpawnRegionSpawnSlotEntry> SpawnRegionSpawnSlotEntries => _world.EntityManager.GetBufferInternal<ProjectM.SpawnRegionSpawnSlotEntry>(_entity);
        public List<ProjectM.SpawnPointBuffer> SpawnPointBuffers => _world.EntityManager.GetBufferInternal<ProjectM.SpawnPointBuffer>(_entity);
        public ProjectM.PatrolState? PatrolState => _world.EntityManager.TryGetComponentDataInternal<ProjectM.PatrolState>(_entity, out var value) ? value : null;
        public ProjectM.PathWaypointNodeWait? PathWaypointNodeWait => _world.EntityManager.TryGetComponentDataInternal<ProjectM.PathWaypointNodeWait>(_entity, out var value) ? value : null;
        public ProjectM.MicroPOIUnitSpawner? MicroPOIUnitSpawner => _world.EntityManager.TryGetComponentDataInternal<ProjectM.MicroPOIUnitSpawner>(_entity, out var value) ? value : null;
        public bool ReplaceAbilityOnSlotBuff_AllInitialized => _world.EntityManager.HasComponentInternal<ProjectM.ReplaceAbilityOnSlotBuff_AllInitialized>(_entity);
        public ProjectM.Shared.WarEvents.WarEvent? WarEvent => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Shared.WarEvents.WarEvent>(_entity, out var value) ? value : null;
        public ProjectM.SpawnChainChild? SpawnChainChild => _world.EntityManager.TryGetComponentDataInternal<ProjectM.SpawnChainChild>(_entity, out var value) ? value : null;
        public bool MegaStaticTag => _world.EntityManager.HasComponentInternal<ProjectM.MegaStaticTag>(_entity);
        public bool GuaranteedStaticTransform => _world.EntityManager.HasComponentInternal<ProjectM.GuaranteedStaticTransform>(_entity);
        public bool CleanupEntity => _world.EntityManager.HasComponentInternal<CleanupEntity>(_entity);
        public ProjectM.StatChangeListener? StatChangeListener => _world.EntityManager.TryGetComponentDataInternal<ProjectM.StatChangeListener>(_entity, out var value) ? value : null;
        public ProjectM.Attached? Attached => _world.EntityManager.TryGetComponentDataInternal<ProjectM.Attached>(_entity, out var value) ? value : null;
        public bool ListenerTag => _world.EntityManager.HasComponentInternal<ProjectM.Scripting.ListenerTag>(_entity);
        public bool AttachedDepth => _world.EntityManager.HasComponentInternal<ProjectM.AttachedDepth>(_entity);
        public ProjectM.OnKillListener? OnKillListener => _world.EntityManager.TryGetComponentDataInternal<ProjectM.OnKillListener>(_entity, out var value) ? value : null;
        public ProjectM.RandomizedSpawnChainChild? RandomizedSpawnChainChild => _world.EntityManager.TryGetComponentDataInternal<ProjectM.RandomizedSpawnChainChild>(_entity, out var value) ? value : null;
        public ProjectM.SpawnedBy? SpawnedBy => _world.EntityManager.TryGetComponentDataInternal<ProjectM.SpawnedBy>(_entity, out var value) ? value : null;
        public bool WasDisabledBeforeNoPlayersInRange => _world.EntityManager.HasComponentInternal<ProjectM.WasDisabledBeforeNoPlayersInRange>(_entity);
        public bool DisabledTileModel => _world.EntityManager.HasComponentInternal<ProjectM.Tiles.DisabledTileModel>(_entity);
        public bool DraculaSpawnChain => _world.EntityManager.HasComponentInternal<ProjectM.Gameplay.Systems.DraculaSpawnChain>(_entity);
        public bool UnitLevelChanged => _world.EntityManager.HasComponentInternal<ProjectM.UnitLevelChanged>(_entity);
        public ProjectM.AttachParentId? AttachParentId => _world.EntityManager.TryGetComponentDataInternal<ProjectM.AttachParentId>(_entity, out var value) ? value : null;
        public List<ProjectM.AttachedBuffer> AttachedBuffers => _world.EntityManager.GetBufferInternal<ProjectM.AttachedBuffer>(_entity);
        public ProjectM.ControlledBy? ControlledBy => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ControlledBy>(_entity, out var value) ? value : null;
        public List<ProjectM.MinionBuffer> MinionBuffers => _world.EntityManager.GetBufferInternal<ProjectM.MinionBuffer>(_entity);
        public ProjectM.ServerControlsPositionModifications? ServerControlsPositionModifications => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ServerControlsPositionModifications>(_entity, out var value) ? value : null;
        public bool AbilityGroupComboActive => _world.EntityManager.HasComponentInternal<ProjectM.AbilityGroupComboActive>(_entity);
        public ProjectM.DisableAggroBuffModifications? DisableAggroBuffModifications => _world.EntityManager.TryGetComponentDataInternal<ProjectM.DisableAggroBuffModifications>(_entity, out var value) ? value : null;
        public ProjectM.ModifyMovementSpeedBuffModification? ModifyMovementSpeedBuffModification => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ModifyMovementSpeedBuffModification>(_entity, out var value) ? value : null;
        public ProjectM.ChangeKnockbackResistanceBuffModification? ChangeKnockbackResistanceBuffModification => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ChangeKnockbackResistanceBuffModification>(_entity, out var value) ? value : null;
        public ProjectM.InventoryConnection? InventoryConnection => _world.EntityManager.TryGetComponentDataInternal<ProjectM.InventoryConnection>(_entity, out var value) ? value : null;
        public List<ProjectM.StartItemBuffer> StartItemBuffers => _world.EntityManager.GetBufferInternal<ProjectM.StartItemBuffer>(_entity);
        public ProjectM.ModifyAggroRangesBuffModifications? ModifyAggroRangesBuffModifications => _world.EntityManager.TryGetComponentDataInternal<ProjectM.ModifyAggroRangesBuffModifications>(_entity, out var value) ? value : null;
    }
}